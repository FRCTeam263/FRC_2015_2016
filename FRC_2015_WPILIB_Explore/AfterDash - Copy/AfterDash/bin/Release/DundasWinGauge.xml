<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DundasWinGauge</name>
    </assembly>
    <members>
        <member name="T:Dundas.Gauges.WinControl.UIPropertyEditorForm">
            <summary>
            Implements the propery editor form.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.UIPropertyEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.UIPropertyEditorForm.savedBounds">
            <summary>
            Keeps the last used bounds for the form.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.UIPropertyEditorForm.editor">
            <summary>
            Reference to UIPropertyEditor object
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.UIPropertyEditorForm.editValue">
            <summary>
            The current edit value
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditorForm.#ctor">
            <summary>
            Initializes new instance of UIPropertyEditorForm object
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditorForm.#ctor(Dundas.Gauges.WinControl.UIPropertyEditor)">
            <summary>
            Initializes new instance of UIPropertyEditorForm object accepting the lead 
            UIPropertyEditor object.
            </summary>
            <param name="editor">The UIPropertyEditor object</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditorForm.OnParentChanged(System.EventArgs)">
            <summary>
            OnParentChanged event handeling. Wait for parent to be connected to set property
            default form bounds and size.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditorForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
            <summary>
            Invokes the ShowDialog in given IWindowsFormsEditorService context
            </summary>
            <param name="service">The IWindowsFormsEditorService context</param>
            <returns>DialogResult value</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditorForm.EditValueChanged">
            <summary>
            Invalidates selected object of the property grid and 
            form caption. Note that editValue can be IList. In this case itemIndex is used.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditorForm.propertyGrid_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            PropertyGrid PropertyValueChanged event processing.
            </summary>
            <param name="s"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditorForm.UIPropertyEditorForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Saves the current form bounds for next use.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.UIPropertyEditorForm.EditValue">
            <summary>
            Gets and sets the current edit value which appears in the property grid.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.UIPropertyEditorForm.ItemIndex">
            <summary>
            Gets the index of item in case that editValue is a IList
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.IRenderable">
            <summary>
            The IRenderable interface allows classes to be identified from 
            the gauge core render system and treated as graphical elements.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IRenderable.RenderStaticElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Performs rendering of the static elements as scale and frame.
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IRenderable.RenderDynamicElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Performs rendering of the dynamic elements as pointers and state indicators.
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IRenderable.GetZOrder">
            <summary>
            Returns ZOrder of this IRenderable element.
            </summary>
            <returns>The ZOrder</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IRenderable.GetBoundRect(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the bounding rectangle of this element
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IRenderable.GetParentRenderable">
            <summary>
            Returns parent object which holds the coordinate system.
            if there is no parent object the result should be null.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IRenderable.GetParentRenderableName">
            <summary>
            Returns the name of the parent object which holds the coordinate system
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearUIControl">
            <summary>
            Summary description for LinearUIControl.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LabelFormatEditor">
            <summary>
            Editor for labels format
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LabelFormatEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edit label format by showing the form
            </summary>
            <param name="context">Editing context.</param>
            <param name="provider">Provider.</param>
            <param name="value">Value to edit.</param>
            <returns>Result</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LabelFormatEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Show modal form.
            </summary>
            <param name="context">Editing context.</param>
            <returns>Editor style.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LabelFormatEditorForm">
            <summary>
            Summary description for LabelFormatEditorForm.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LabelFormatEditorForm.resultFormat">
            <summary>
            Result format
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LabelFormatEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LabelFormatEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LabelFormatEditorForm.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LabelFormatEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LabelFormatEditorForm.UpdateNumericSample">
            <summary>
            Updates numeric sample on the form.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LabelFormatEditorForm.LabelFormatEditorForm_Load(System.Object,System.EventArgs)">
            <summary>
            Form loading
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Argument.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LabelFormatEditorForm.textBoxPrecision_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Precision changed.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Argument.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LabelFormatEditorForm.textBoxFormatString_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Format changed.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Argument.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LabelFormatEditorForm.UpdateCustomExample">
            <summary>
            Updates custom formatting sample.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LabelFormatEditorForm.tabControl_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Tab control changed.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Argument.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LabelFormatEditorForm.buttonOk_Click(System.Object,System.EventArgs)">
            <summary>
            Ok button clicked.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Argument.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LabelFormatEditorForm.buttonCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Cancel button clicked.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Argument.</param>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValueCollectionEditor">
            <summary>
            The CalculatedValueCollectionEditor is used in design time.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeCollectionEditor">
            <summary>
            Collection editor that supports property help in the property grid
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCollectionEditor.#ctor(System.Type)">
            <summary>
            Initializes a new instance of GaugeCollectionEditor class.
            </summary>
            <param name="type">Type of the editor (usually UITypeEditor).</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edit object's value.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="provider">Service provider.</param>
            <param name="value">Value to edit.</param>
            <returns>The new value of the object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCollectionEditor.ShowHelp">
            <summary>
            Displaying help for the curently selected item in the property grid
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCollectionEditor.CreateCollectionForm">
            <summary>
            Cretaes form for collection editing.
            </summary>
            <returns>Form object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCollectionEditor.listBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Event that handles the selection change in the list box and enables/ disables
            the clone button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCollectionEditor.cloneButton_Click(System.Object,System.EventArgs)">
            <summary>
            Event handler for the Click event of the clone button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCollectionEditor.IsCloneName(System.String)">
            <summary>
            Determines if the given name is a clone name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCollectionEditor.IsNumber(System.String)">
            <summary>
            Determines if the string is a number.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Override so we can populate all the collections when a new
            object is added to a top level collection.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCollectionEditor.OnOkClicked(System.Object,System.EventArgs)">
            <summary>
            Update design-time HTML when OK button is clicked in the collection editor
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCollectionEditor.OnControlAddedRemoved(System.Object,System.Windows.Forms.ControlEventArgs)">
            <summary>
            Update design-time HTML when propery is added or removed
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCollectionEditor.OnPropertyChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Update design-time HTML when propery is changed
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCollectionEditor.CanRemoveInstance(System.Object)">
            <summary>
            Indicate if specified instance can be removed from collection.
            </summary>
            <param name="value">The instance to check for removal.</param>
            <returns><b>true</b>, if the instance can be removed.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCollectionEditor.HelpTopic">
            <summary>
            Override the HelpTopic property to provide different topics,
            depending on selected property.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueCollectionEditor.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the CalculatedValueCollectionEditor class.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueCollectionEditor.CreateNewItemTypes">
            <summary>
            Gets the data types that this collection editor can contain
            </summary>
            <returns>An array of data types that this collection can contain.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.StateCollection">
            <summary>
            Collection of <b>State</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.State"/>
            </summary>
            <remarks>
            This collection is exposed as the <see cref="P:Dundas.Gauges.WinControl.StateIndicator.States"/> 
            property of <see cref="T:Dundas.Gauges.WinControl.StateIndicator"/> objects.
            <p>
            State indicators can have one or more defined states, which are either on or off.
            </p>
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.NamedCollection">
            <summary>
            Base class for most Dundas Gauge collections.
            <seealso cref="T:Dundas.Gauges.WinControl.NamedElement"/>
            </summary>
            <remarks>
            This is the base class for almost all collections in Dundas Gauge, such as 
            <b>Values</b>, <b>Gauges</b>, <b>Pointers</b>, <b>Scales</b>, <b>Ranges</b>, etc.
            <p>
            The collection stores the base class, <b>NamedElement</b> which is also the base 
            class of Dundas Gauge.
            </p>
            <p>
            The main purpose of this class is to control names and elements for duplication.</p>
            </remarks>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NamedCollection.common">
            <summary>
            Reference to CommonElements object.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NamedCollection.elementType">
            <summary>
            Defines default elements type. Used for type checking.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NamedCollection.parent">
            <summary>
            Reference to parent (owner)  object
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NamedCollection.editModeActive">
            <summary>
            Flag which is true during design mode in collection editor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.#ctor">
            <summary>
            Initializes a new instance of NamedElement class. Cannot be used.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Initializes a new instance of NamedElement class. Cannot be used.
            </summary>
            <param name="parent">The parent NamedElement.</param>
            <param name="common">The reference to common object holder.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.GetIndex(System.String)">
            <summary>
            Gets an element index by name.
            <seealso cref="M:Dundas.Gauges.WinControl.NamedCollection.GetByName(System.String)"/>
            </summary>
            <param name="name">
            Name of the element.
            </param>
            <returns>
            Index of the element if found, or -1 if it does not exist.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.GetByName(System.String)">
            <summary>
            Gets the <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> element associated with the first 
            occurrence of the specified <see cref="F:Dundas.Gauges.WinControl.NamedElement.name"/> value.
            <seealso cref="M:Dundas.Gauges.WinControl.NamedCollection.GetIndex(System.String)"/>
            </summary>
            <param name="name">
            The <see cref="P:Dundas.Gauges.WinControl.NamedElement.Name"/> value whose element to get.</param>
            <returns>The <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> element associated with
            the specified <paramref name="name"/> if found; otherwise, 
            an <see cref="T:System.ArgumentException"/> will be thrown.
            </returns>
            <remarks>
            <b>GetByName</b> compares the specified <paramref name="Name"/> to the value 
            of the <see cref="F:Dundas.Gauges.WinControl.NamedElement.name"/> property of each 
            <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> element, and returns the matching element.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.GetByIndex(System.Int32)">
            <summary>
            Gets the <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> element by index.
            <seealso cref="M:Dundas.Gauges.WinControl.NamedCollection.GetIndex(System.String)"/>
            </summary>
            <param name="index">
            The index of the element to get.</param>
            <returns>The <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> element with specified index if found; otherwise, 
            an <see cref="T:System.ArgumentException"/> will be thrown.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.IndexOf(System.Object)">
            <summary>
            Searches for the specified object and returns the zero-based index of the 
            first occurrence within the entire collection.
            <seealso cref="M:Dundas.Gauges.WinControl.NamedCollection.GetByName(System.String)"/>
            </summary>
            <param name="o">
            The object to locate in the collection. The value can be a null reference 
            (or Nothing in Visual Basic).
            </param>
            <returns>
            The zero-based index of the first occurrence of value within the entire collection, 
            if found; otherwise -1.
            </returns>
            <remarks>
            The collection is searched forward starting at the first element and ending at the last 
            element. This method performs a linear search; therefore, 
            the average execution time is proportional to the <b>Count</b>. 
            That is, this method is an O(n) operation, where n is the Count.
            <p>
            This method determines equality by calling Object.Equals.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.OnClear">
            <summary>
            Before clear implementation of <see cref="T:System.Collections.CollectionBase"/> class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Before insert implementation of <see cref="T:System.Collections.CollectionBase"/> class
            </summary>
            <param name="index">Index of the collection</param>
            <param name="value">Element object</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            After insert implementation of <see cref="T:System.Collections.CollectionBase"/> class
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            After remove implementation of <see cref="T:System.Collections.CollectionBase"/> class
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            Before set ( replace ) implementation of <see cref="T:System.Collections.CollectionBase"/> class
            </summary>
            <param name="index"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            After set ( replace ) implementation of <see cref="T:System.Collections.CollectionBase"/> class
            </summary>
            <param name="index"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.CheckForTypeDublicatesAndName(System.Object)">
            <summary>
            Performs hard check ( throws exception ) of NamedElement 
            before to be attached to collection.
            </summary>
            <param name="value">Element to add</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.IsValidNameCheck(System.String,Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Checks for valid ( not empty, unique) name of an element before 
            this NamedElement to be renamed.
            </summary>
            <param name="name">The new name of the NamedElement</param>
            <param name="element">NamedElement which will be renamed</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.IsUniqueName(System.String)">
            <summary>
            Returns true of the name is unique. Note that some collections as 
            CalculateValueCollection has overridden this method.
            </summary>
            <param name="name">Name for checking.</param>
            <returns>True of the name is unique.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.GenerateUniqueName(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Generates unique name for new collection element.
            </summary>
            <param name="element">New NamedElement object</param>
            <returns>Unique name for this object</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.GetByNameCheck(System.String)">
            <summary>
            Returns element by name and throws exception if not found
            </summary>
            <param name="name">The name of NamedElement for search</param>
            <returns>The NamedElement with requested name</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.SetByName(System.String,Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Replaces existing element in the collection by name.
            </summary>
            <param name="name">Name of existing element in the collection.</param>
            <param name="element">New element which will replace element with name "Name".</param>
            <returns>True if replacing is successful.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.SetByNameCheck(System.String,Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Replaces existing element in the collection by name and throw an exception if not found.
            </summary>
            <param name="name">The name of existing element in the collection</param>
            <param name="element">New element which will replace element with name</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.IsCorrectType(System.Object)">
            <summary>
            Returns true if element is correct type. Must be overridden if collection 
            will contain elements with more than one type. 
            </summary>
            <param name="value">Object for check</param>
            <returns>True for correct type.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.BeginInit">
            <summary>
            Performs start of initialization.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.EndInit">
            <summary>
            Performs end of initialization.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.ReconnectData(System.Boolean)">
            <summary>
            Force all elements to perform data connection. 
            </summary>
            <param name="exact">Indicates to throw an exception the procedure is failed</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Returns format string for element name. 
            </summary>
            <param name="el">NamedElement used to get format string.</param>
            <returns>The default format string of this NamedElement type.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.GetDefaultElementName(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Returns default element name. Can be overridden.
            </summary>
            <param name="el">The NamedElement instance</param>
            <returns>The default element name</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.Invalidate">
            <summary>
            Force invalidate in gauge core.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.GetCollectionName">
            <summary>
            Returns the collection name.
            </summary>
            <returns>The collection name</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.Notify(Dundas.Gauges.WinControl.MessageType,Dundas.Gauges.WinControl.NamedElement,System.Object)">
            <summary>
            Handles and performs message notification to collection elements.
            </summary>
            <param name="msg">The MessageType message</param>
            <param name="element">The sender element</param>
            <param name="param">Additional parameters, depended of the MessageType</param>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NamedCollection.disposed">
            <summary>
            Flag to indicate if we have already been disposed.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.Dispose">
            <summary>
            Disposes of the current object.
            </summary>
            <remarks>
            Implements IDisposable.
            <p>
            Do not make this method virtual. Also, a derived class should 
            not be able to override this method.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.Dispose(System.Boolean)">
            <summary>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed./// 
            </summary>		
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.OnDispose">
            <summary>
            This method can be overridden from successors in order to dispose their internal fields.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedCollection.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NamedCollection.ParentElement">
            <summary>
            Gets the parent named element. Returns null if this collection 
            is not connected to the GaugeContainer.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> object.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NamedCollection.Common">
            <summary>
            Returns the CommonElements object
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateCollection.Add(System.String)">
            <summary>
            Used by <b>StateCollection</b> to add an item to the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.StateCollection.Remove(Dundas.Gauges.WinControl.State)"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.State"/> object to be added 
            to the collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.State"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. Also, 
            the <i>name</i> argument is the <b>Name</b> property of the object 
            being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateCollection.Add(Dundas.Gauges.WinControl.State)">
            <summary>
            Adds a <b>State</b> object to the end of the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.StateCollection.Remove(Dundas.Gauges.WinControl.State)"/>
            <seealso cref="T:Dundas.Gauges.WinControl.State"/>
            </summary>
            <param name="value">
            The <see cref="T:Dundas.Gauges.WinControl.State"/> object to be added to 
            the collection.
            </param>
            <returns>
            Returns the position in the collection of the newly added object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateCollection.Remove(Dundas.Gauges.WinControl.State)">
            <summary>
            Removes the specified <b>State</b> object from the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.StateCollection.Add(System.String)"/>
            <seealso cref="T:Dundas.Gauges.WinControl.State"/>
            </summary>
            <param name="value">
            <see cref="T:Dundas.Gauges.WinControl.State"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateCollection.GetDefaultElementName(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns the State object
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>State</b> object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.NumericIndicatorStyle">
            <summary>
            Determines the style of numeric indicators.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NumericIndicatorStyle.Digital7Segment">
            <summary>
            Digital style, 7 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NumericIndicatorStyle.Digital14Segment">
            <summary>
            Digital style, 14 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NumericIndicatorStyle.Mechanical">
            <summary>
            Mechanical style.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ShowSign">
            <summary>
            Represents how +/- signs are displayed.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ShowSign.None">
            <summary>
            Never show a plus or a minus sign.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ShowSign.NegativeOnly">
            <summary>
            Show the sign if it is a minus, but not if it is a plus.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ShowSign.Both">
            <summary>
            Always show the sign, no matter what it is.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.NumericIndicator">
            <summary>
            Represents a numeric indicator.
            </summary>
            <remarks>
            Numeric indicators are stored in the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.NumericIndicators"/> 
            collection property.
            <p>
            A numeric indicator has a value, which can be displayed via its <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Value"/> 
            property or <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.ValueSource"/> property.
            </p>
            <p>
            A numeric indicator can have multiple ranges, set by the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Ranges"/> property. 
            These allow for the usage of range-related events. The <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Maximum"/> and 
            <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Minimum"/> properties also specify a range.
            </p>
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.NamedElement">
            <summary>
            <b>NamedElement</b> is the base class 
            for almost all collection elements in the Gauge, such as 
            values, gauges, pointers, scales, ranges etc.
            <seealso cref="T:Dundas.Gauges.WinControl.NamedCollection"/>
            </summary>
            <remarks>
            <b>NamedElement</b> has one main property <see cref="P:Dundas.Gauges.WinControl.NamedElement.Name"/>, which is unique 
            if the named element is a part of the <see cref="T:Dundas.Gauges.WinControl.NamedCollection"/>.
            </remarks>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NamedElement.name">
            <summary>
            The name of this NamedElement.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NamedElement.common">
            <summary>
            Reference to common objects holder
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NamedElement.collection">
            <summary>
            Reference to the collection which contain this NamedElement
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NamedElement.initialized">
            <summary>
            Flag which is false during initialization
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.#ctor">
            <summary>
            Initializes a new instance of NamedElement class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.OnRemove">
            <summary>
            This method is called right after this NamedElement 
            has been removed from a NamedCollection. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.OnAdded">
            <summary>
            This method is called right after this NamedElement
            becomes a member of a NamedCollection. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.OnNameChanged">
            <summary>
            This method is called right after this NamedElement has been renamed
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.BeginInit">
            <summary>
            Initiate initialization.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.EndInit">
            <summary>
            Finalize initialization
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.Invalidate">
            <summary>
            Performs invalidating of the gauge core.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.Refresh">
            <summary>
            Performs refreshing of the gauge core.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.ReconnectData(System.Boolean)">
            <summary>
            Handles reconnect message to data providers, usually after initialization
            </summary>
            <param name="exact">True to throw an exception if failed.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.Notify(Dundas.Gauges.WinControl.MessageType,Dundas.Gauges.WinControl.NamedElement,System.Object)">
            <summary>
            Handles notification message from other NamedElements. 
            </summary>
            <param name="msg">The message of MessageType type</param>
            <param name="element">NamedElement which sends the message</param>
            <param name="param">Additional parameters, depended of the MessageType</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.GetNameAsParent">
            <summary>
            Returns the full name of this NamedElement including collection name
            in format CollectionName.NamedElementName
            </summary>
            <returns>Returns the full name of this NamedElement</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.GetNameAsParent(System.String)">
            <summary>
            Returns the full name of this NamedElement including collection name
            in format CollectionName.NamedElementName. This method is used during this NamedElement
            is renaming.
            </summary>
            <param name="newName">The new name of the element</param>
            <returns>Returns the full name of this NamedElement</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.Dispose">
            <summary>
            Implementation of the <b>IDisposable</b> interface. Disposes the object.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.Dispose(System.Boolean)">
            <summary>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.OnDispose">
            <summary>
            This method can be overridden from successors in order to dispose their internal fields.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.InitiateCopy">
            <summary>
            Creates a shallow copy of the current Object.
            </summary>
            <returns>A shallow copy of the current Object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedElement.CloneInternals(System.Object)">
            <summary>
            Initializes an object that is a copy of the current instance.
            </summary>
            <param name="copy">The object to initialize</param>
            <returns>Initialized copy of this current instance</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NamedElement.Common">
            <summary>
            Exposes CommonElements field
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NamedElement.Collection">
            <summary>
            The named element's parent collection.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.NamedCollection"/> object, which is the collection 
            that stores the named element.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NamedElement.ParentElement">
            <summary>
            Gets the parent named element. Returns null if the element is not connected to the GaugeContainer.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> object.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NamedElement.DefaultName">
            <summary>
            Returns Default name of this class
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NamedElement.Name">
            <summary>
            Gets or sets the name of the named element.
            </summary>
            <value>
            A string that represents the name of the named element.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.IToolTipProvider">
            <summary>
            This interface provides the ability to access to the tool tip information.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IToolTipProvider.GetToolTip(Dundas.Gauges.WinControl.HitTestResult)">
            <summary>
            Returns tool tip information for the object implemented this interface.
            </summary>
            <param name="ht">The current <see cref="T:Dundas.Gauges.WinControl.HitTestResult"/></param>
            <returns>The tool tip string</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.IPointerProvider">
            <summary>
            This interface provides the ability to access and change 
            a pointer gauge objects. The all pointers, state and numeric indicators 
            implement this interface.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IPointerProvider.DataValueChanged(System.Boolean)">
            <summary>
            Used from IValueConsumer to notify this IPointerProvider that 
            the output date/value has been changed.
            </summary>
            <param name="initialize"></param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.IPointerProvider.Position">
            <summary>
            Returns the position ( the current value ) of this IPointerProvider.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ISelectable.DrawSelection(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Render the selection of the given element.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NumericIndicator.numberPosition">
            <summary>
            Represents pointer position. We have difference between Position and Data.value, 
            when we have dampening. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NumericIndicator.data">
            <summary>
            Data linker to input/calculated value.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NumericIndicator.refreshTimer">
            <summary>
            Refresh timer. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NumericIndicator.refreshPending">
            <summary>
            Refresh pending flag;
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NumericIndicator.pendingNumberPosition">
            <summary>
            Represents pointer position. We have difference between Position and Data.value, 
            when we have dampening. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NumericIndicator.segmentsCache">
            <summary>
            Reference to SegmentsCache object.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.#ctor">
            <summary>
            Initializes a new instance of NumericIndicator class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.ShouldSerializeStyle">
            <summary>
            Used by VS designer - prevents the obsolete property from
            serialization.
            </summary>
            <returns>
            <b>false</b> to prevent the property from serialization.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.ToString">
            <summary>
            Gets the name of the indicator.
            </summary>
            <returns>
            A string that represents the indicator's name.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.GetRangeColor(System.Drawing.Color,System.Boolean)">
            <summary>
            Determines and returns font color of indicator against 
            the number position and range. 
            </summary>
            <param name="color">The default color</param>
            <param name="decimalColor">Flag to selecting color for decimals</param>
            <returns>The range color</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.GetFontBrush(Dundas.Gauges.WinControl.GaugeGraphics,System.Drawing.Color)">
            <summary>
            Creates gradient brush for font drawing
            </summary>
            <param name="g">The GaugeGraphics reference</param>
            <param name="color">The default font color</param>
            <returns>Initialized brush</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.GetNumber">
            <summary>
            Calculates number to display. 
            </summary>
            <returns>The number to display</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.GetNumber(System.Double)">
            <summary>
            Calculates number to display. 
            </summary>
            <param name="number">number to calculate. </param>
            <returns>number to display</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.GetDefaultFormat">
            <summary>
            Gets display format string.
            </summary>
            <returns>The format string</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.GetLabel(System.Boolean@)">
            <summary>
            Returns label string to display
            </summary>
            <param name="digitsPrinted">returns flag if digitsPrinted or simple message</param>
            <returns>String for display</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.DrawSymbol(Dundas.Gauges.WinControl.GaugeGraphics,System.String,System.Drawing.RectangleF,System.Drawing.Font,System.Drawing.Brush,System.Drawing.StringFormat,System.Boolean,System.Boolean)">
            <summary>
            Performs drawing of one symbol.
            </summary>
            <param name="g">The GaugeGraphics reference.</param>
            <param name="symbol">Symbol to display.</param>
            <param name="rect">Bounding rectangle.</param>
            <param name="font">The font to use for drawing.</param>
            <param name="brush">The brush to use for drawing.</param>
            <param name="format">The StringFormat to use for drawing.</param>
            <param name="decDot">If to show decimal separator after the symbol.</param>
            <param name="comma">If to show comma after the symbol.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.DrawSeparator(Dundas.Gauges.WinControl.GaugeGraphics,System.Drawing.Brush,System.Single,System.Single,System.Drawing.RectangleF,System.Single)">
            <summary>
            Draws separator of Mechanical Indicator.
            </summary>
            <param name="g">The GaugeGraphics reference.</param>
            <param name="brush">The brush to use for drawing.</param>
            <param name="digitsCount">How many symbols has this indicator.</param>
            <param name="rectPosition">The position of the separator.</param>
            <param name="gaugeRect"></param>
            <param name="separatorWidth">The width of the separator.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.IsStandardFormat">
            <summary>
            Checks if format string is simple or custom type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.RenderIndicator(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Drawing procedure
            </summary>
            <param name="g">The GaugeGraphics reference</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.RenderBackground(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Performs drawing of the background and shadow
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.ConnectToParent(System.Boolean)">
            <summary>
            Initialize this.parentSystem field which is NamedElement 
            holds the parent coordinate system.
            </summary>
            <param name="exact">Flag to throw an exception if the parent element is invalid.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.Notify(Dundas.Gauges.WinControl.MessageType,Dundas.Gauges.WinControl.NamedElement,System.Object)">
            <summary>
            Handles notification message from other NamedElements. 
            </summary>
            <param name="msg">The message of MessageType type</param>
            <param name="element">NamedElement which sends the message</param>
            <param name="param">Additional parameters, depended of the MessageType</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.OnAdded">
            <summary>
            This method is called right after this NamedElement
            becomes a member of a NamedCollection. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.BeginInit">
            <summary>
            Initiate initialization.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.EndInit">
            <summary>
            Finalize initialization
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.ReconnectData(System.Boolean)">
            <summary>
            Handles reconnect message to data providers, usually after initialization
            </summary>
            <param name="exact">True to throw an exception if failed.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.OnDispose">
            <summary>
            Disposes inner elements
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.Invalidate">
            <summary>
            Performs invalidating of the gauge core.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.PointerValueChanged">
            <summary>
            This method is called  when the data attribute value has changed.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.refreshTimer_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Slow refresh timer call back procedure
            </summary>
            <param name="source"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.RefreshIndicator">
            <summary>
            Performs refresh of gauge core.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.GetSnapValue(System.Double)">
            <summary>
            Calculates the snap value
            </summary>
            <param name="value">The current value</param>
            <returns>Snapped value</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.Dundas#Gauges#WinControl#IRenderable#RenderStaticElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Set the hot region 
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.Dundas#Gauges#WinControl#IRenderable#RenderDynamicElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Draws all elements 
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.Dundas#Gauges#WinControl#IRenderable#GetZOrder">
            <summary>
            Returns ZOrder of this IRenderable element.
            </summary>
            <returns>The ZOrder</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.Dundas#Gauges#WinControl#IRenderable#GetBoundRect(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the bounding rectangle of this element
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.Dundas#Gauges#WinControl#IRenderable#GetParentRenderable">
            <summary>
            Returns parent object which holds the coordinate system.
            if there is no parent object the result should be null.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.Dundas#Gauges#WinControl#IRenderable#GetParentRenderableName">
            <summary>
            Returns the name of the parent object which holds the coordinate system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.Dundas#Gauges#WinControl#IToolTipProvider#GetToolTip(Dundas.Gauges.WinControl.HitTestResult)">
            <summary>
            Returns tool tip information for the object implemented this interface.
            </summary>
            <param name="ht">The current <see cref="T:Dundas.Gauges.WinControl.HitTestResult"/></param>
            <returns>The tool tip string</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.Dundas#Gauges#WinControl#IPointerProvider#DataValueChanged(System.Boolean)">
            <summary>
            Used from IValueConsumer to notify this IPointerProvider that 
            the output date/value has been changed.
            </summary>
            <param name="initialize">True to suppress dampening and slow refresh.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.Dundas#Gauges#WinControl#ISelectable#DrawSelection(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Render the selection of the given element.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicator.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Ranges">
            <summary>
            Represents a collection of numeric ranges, used for range-related events.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.NumericRangeCollection"/> object, used to store the indicator's 
            ranges (if any).
            </value>
            <remarks>
            The <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Maximum"/> and <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Minimum"/> properties 
            are also used to set a range.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.ParentObject">
            <summary>
            Gets an object reference to the parent object. If there is no valid parent 
            element the result is <b>null</b>.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> object.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Parent">
            <summary>
            Determines the parent element, which affects the indicator's 
            coordinate system.
            </summary>
            <value>
            A string that represents the name of the parent object, if any.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.ZOrder">
            <summary>
            Determines the Z order of the numeric indicator in the gauge container.
            </summary>
            <value>
            An integer that represents the Z order.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.ToolTip">
            <summary>
            The tool tip to be displayed when the cursor is over the numeric indicator.
            </summary>
            <value>
            A string that represents the tool tip.
            </value>
            <remarks>
            The user can format the tool tip using #INPUTVALUE, #INPUTVALUE1, etc. 
            The value from the GaugeContainer.Values collection will then be displayed. 
            #INDICATORVALUE can also be used to show the current value of the numeric indicator.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Name">
            <summary>
            The name of the numeric indicator.
            </summary>
            <value>
            String that represents the name of the numeric indicator.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Style">
            <summary>
            NOTE: This property is obsolete in Dundas Gauge 2.0. IndicatorStyle is supposed to be used instead. <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.IndicatorStyle"/>
            Determines the style of the numeric indicator.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.NumericIndicatorStyle"/> value that represents the 
            indicator's style. Defaults to <b>NumericIndicatorStyle.Mechanical</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.IndicatorStyle">
            <summary>
            Determines the style of the numeric indicator.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.NumericIndicatorStyle"/> value that represents the 
            indicator's style. Defaults to <b>NumericIndicatorStyle.Mechanical</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Digits">
            <summary>
            The total number of digits that will be shown, including decimals.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.Decimals"/>
            </summary>
            <value>
            An integer that represents the total number of displayed digits. Defaults 
            to 6.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Decimals">
            <summary>
            The total number of decimals that will be shown.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.Digits"/>
            </summary>
            <value>
            An integer that represents the total number of displayed decimals. Defaults 
            to 1.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.FontUnit">
            <summary>
            Determines if the font size is measured as a percentage of the parent or in units 
            specified by the <b>Font.Unit</b> property.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.ResizeMode"/>
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.Font"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.FontUnit"/> enumeration which determines the font units. Defaults to 
            <b>FontUnit.Percent</b>.
            </value>
            <remarks>
            If <b>ResizeMode</b> is set to AutoFit then FontUnit does not determine the size of the font.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.ResizeMode">
            <summary>
            Determines if the font will be automatically resized so that the text will 
            always fit.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.ResizeMode"/> value, which represents the resize mode. Defaults to 
            <b>ResizeMode.AutoFit</b>.
            </value>
            <remarks>
            If ResizeMode is set to <b>None</b> then the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Font"/> and <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.FontUnit"/> properties determine the size of the text.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.ShadowOffset">
            <summary>
            Determines how far to the right and down the shadow will appear.
            </summary>
            <value>
            An integer that represents the shadow offset. Defaults to 1 pixel.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.FormatString">
            <summary>
            The format string, which is a standard .NET format string.
            </summary>
            <value>
            A string, which is used for formatting.
            </value>
            <remarks>
            This also determines how many numbers after the decimals to show.
            <p>
            Refer to the Formatting Types topic in the MSDN for further information.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.ShowDecimalPoint">
            <summary>
            Determines whether or not the decimal point is displayed.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.ShowLeadingZeros"/>
            </summary>
            <value>
            If <b>true</b> the decimal point is displayed, if <b>false</b> it is not. Defaults 
            to <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.ShowLeadingZeros">
            <summary>
            Determines whether or not leading zeros are displayed.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.ShowDecimalPoint"/>
            </summary>
            <value>
            If <b>true</b> the leading zeros are displayed, if <b>false</b> they are not. 
            Defaults to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.RefreshRate">
            <summary>
            Determines how often the indicator is refreshed per second.
            </summary>
            <value>
            A real number that determines the refresh rate. Defaults to 10 
            refreshed per second.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.OffString">
            <summary>
            The string to be displayed if the <b>Value</b> property is Double.NaN.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.OutOfRangeString"/>
            </summary>
            <value>
            A string that is used if <b>Value</b> is Double.NaN (represents 'not set'). Defaults 
            to '-'.
            </value>
            <remarks>
            If this string is longer than the value of the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Digits"/> property 
            it will be cropped.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.OutOfRangeString">
            <summary>
            The string to be displayed if the <b>Value</b> property is out of range.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.OffString"/>
            </summary>
            <value>
            A string that is used if <b>Value</b> is out of range. Defaults 
            to 'Error'.
            </value>
            <remarks>
            The range is determined by the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Minimum"/> and <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Maximum"/> 
            values, and/or the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Digits"/> property.
            <p>
            If this string is longer than the value of the <b>Digits</b> property 
            it will be cropped.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.ShowSign">
            <summary>
            Determines which sign (plus or minus) to display.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.ShowSign"/> value, that represents the sign to display.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Minimum">
            <summary>
            The start value of the numeric indicator, which determines the start of its range.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.Maximum"/>
            </summary>
            <value>
            An integer that represents the indicator's minimum. Defaults to 
            <b>double.NegativeInfinity</b>.
            </value>
            <remarks>
            The <b>Minimum</b> and <b>Maximum</b> properties determine the indicator's range, 
            which allows for the usage of range-related events.
            <p>
            Extra ranges can also be added using the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Ranges"/> property.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Maximum">
            <summary>
            The end value of the numeric indicator, which determines the end of its range.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.Minimum"/>
            </summary>
            <value>
            An integer that represents the indicator's minimum. Defaults to 
            <b>double.PositiveInfinity</b>.
            </value>
            <remarks>
            The <b>Minimum</b> and <b>Maximum</b> properties determine the indicator's range, 
            which allows for the usage of range-related events.
            <p>
            Extra ranges can also be added using the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Ranges"/> property.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Multiplier">
            <summary>
            Amount by which the indicator's value is multiplied before being displayed.
            </summary>
            <value>
            A real number that represents the multiplier value. Defaults to 1.
            </value>
            <remarks>
            For example, if the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Value"/> property is set to 10, and this 
            <b>Multiplier</b> property is set to 10, the displayed value will be 100.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.SnappingEnabled">
            <summary>
            Determines if snapping of the indicator's value to a given interval is enabled.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.SnappingInterval"/>
            </summary>
            <value>
            If <b>true</b> the numeric indicator will snap to values determined by the 
            <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.SnappingInterval"/> property, if <b>false</b> it will not. Defaults 
            to <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.SnappingInterval">
            <summary>
            The interval to use when snapping is enabled.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.SnappingEnabled"/>
            </summary>
            <value>
            An integer that represents the snapping interval.
            </value>
            <remarks>
             If set to 0 there will be no snapping.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.DampeningEnabled">
            <summary>
            Determines if the value movement will be dampened.
            </summary>
            <value>
            If <b>true</b> dampening is enabled, if <b>false</b> it is not. Defaults 
            to <b>false</b>.
            </value>
            <remarks>
            Dampening can be used if the value is being updated very quickly. Seting
            it to True will slow down the movement of the numeric indicator. If
            the Minimum and Maximum properties are set to Double.NegativeInfinity
            and Double.PositiveInfinity respectively, this property will have no effect.
            <p><b>
            ASP.NET - This property is only used when the Dundas Gauge for .NET is rendered
            as a Windows Forms control.
            </b></p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.DampeningSweepTime">
            <summary>
            Represents the time it takes (in seconds) to make a full sweep from 
            the minimum to the maximum of the indicator. 
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.Minimum"/>
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.Maximum"/>
            </summary>
            <value>
            An integer that represents the dampening sweep time. Defaults to 1 second.
            </value>
            <remarks>If the Minimum and Maximum properties are set to Double.NegativeInfinity
            and Double.PositiveInfinity respectively, this property will have no effect.
            <p><b>
            ASP.NET - This property is only used when the Dundas Gauge for .NET is rendered
            as a Windows Forms control.
            </b></p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Location">
            <summary>
            The location of the indicator inside the gauge container. The coordinates are 
            measured as a percentage of the container's width/height.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.Size"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeLocation"/> object, which represents the indicator's location inside 
            its container.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Size">
            <summary>
            The size of the indicator inside the gauge container. The coordinates are 
            measured as a percentage of the container's width/height.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.Location"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeSize"/> object, which represents the indicator's size inside 
            its container.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Visible">
            <summary>
            Determines the visibility of the numeric indicator.
            </summary>
            <value>
            If <b>true</b> the indicator is visible, if <b>false</b> it is not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Font">
            <summary>
            Specifies the font used for the indicator's digits.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.FontUnit"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Font"/> object, used for the digit font.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.BorderColor">
            <summary>
            Gets or sets the color of the numeric indicator's border.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.BorderWidth"/>
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.BorderStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> object that represents the 
            color of the numeric indicator border. The default value is <b>Color.DimGray</b>.
            </value>
            <remarks>
            This property represents the color of the numeric indicator border.
            <p>
            This property will not have any effect if the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.BorderWidth"/> 
            property is set to 0.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.BorderStyle">
            <summary>
            The line style of the numeric indicator border.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.BorderWidth"/>
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.BorderColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeDashStyle"/> value, that represents the line style. Defaults 
            to <b>GaugeDashStyle.Solid</b>.
            </value>
            <remarks>
            This property will not have any effect if the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.BorderWidth"/> 
            property is set to 0.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.BorderWidth">
            <summary>
            The line width of the numeric indicator's border. Measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.BorderStyle"/>
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.BorderColor"/>
            </summary>
            <value>
            An integer that represents the line width. Defaults 
            to 1 pixel.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.SeparatorColor">
            <summary>
            Gets or sets the color of the lines that separate the digits.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.SeparatorWidth"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> object that represents the 
            separator color. The default value is <b>Color.DimGray</b>.
            </value>
            <remarks>
            This property represents the color of the lines 
            that separate the digits of the numeric indicator.
            <p>
            This property will not have any effect if the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.SeparatorWidth"/> 
            property is set to 0.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.SeparatorWidth">
            <summary>
            The line width of the separator. Measured in percent of the indicator.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.SeparatorColor"/>
            </summary>
            <value>
            A real number that represents the separator width. The default value is 1 percent.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.BackColor">
            <summary>
            Gets or sets the background color of the numeric indicator.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            back color. The default value is <b>Color.DimGray</b>.
            </value>
            <remarks>
            This property represents the background color.
            <p>
            If a gradient is selected via the 
            <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.BackGradientType"/> property this color will be used 
            as the start color for the gradient.
            </p>
            <p>
            If a hatch style is selected through the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.BackHatchStyle"/> property this color 
            will be used as the background color for the hatch.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.BackGradientType">
            <summary>
            The gradient type of the background.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.BackColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GradientType"/> value that determines the gradient type. Defaults 
            to <b>GradientType.None</b>.
            </value>
            <remarks>
            Colors used are determined by the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.BackGradientEndColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.BackColor"/> properties.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.BackGradientEndColor">
            <summary>
            Gets or sets the end color of the numeric indicator's back gradient.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.BackGradientType"/>
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.BackColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            gradient end color. The default value is <b>Color.White</b>.
            </value>
            <remarks>
            This property represents the end color of the numeric indicator's back gradient. 
            It is used if the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.BackGradientType"/>property 
            has a valid gradient. In addition to that it is also used as the 
            hatch foreground color in case a hatch style is set via 
            the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.BackHatchStyle"/> property.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.BackHatchStyle">
            <summary>
            The hatch style of the background.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeHatchStyle"/> value that determines the hatching, if any. Defaults 
            to <b>GaugeHatchStyle.None</b>.
            </value>
            <remarks>
            Colors used are determined by the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.BackGradientEndColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.BackColor"/> properties.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.DigitColor">
            <summary>
            Gets or sets the color of the digits in the numeric indicator.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.DecimalColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            digit color. The default value is <b>Color.SteelBlue</b>.
            </value>
            <remarks>
            This property represents the text color of the digits, 
            but not the decimals. The decimals can have a different color, which 
            is determined by the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.DecimalColor"/> property.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.DecimalColor">
            <summary>
            Gets or sets the color of the decimals in the numeric indicator.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.DigitColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            the decimal color. The default value is <b>Color.Firebrick</b>.
            </value>
            <remarks>
            This property represents the text color of the decimals, 
            but not the normal digits. Please use the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.DigitColor"/> 
            property to set the color of the digits.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.LedDimColor">
            <summary>
            Gets or sets the color of the digit's background in the digital indicator.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.DigitColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            the digit background color. The default value is <b>Color.Empty</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Value">
            <summary>
            The current value of the indicator.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.ValueSource"/>
            </summary>
            <value>
            A double that represents the indicator's value. 
            </value>
            <remarks>
            Alternatively <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.ValueSource"/> can be used to set the indicator's value.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.ValueSource">
            <summary>
            Specifies the name of an input or calculated value.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.Value"/>
            </summary>
            <value>
            A double that represents the indicator's input or calculated value. 
            </value>
            <remarks>
            If <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.ValueSource"/> is used as the value source a history will be created, which 
            is used for calculated values and playback.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Selected">
            <summary>
            Determines if the numeric indicator visually appears selected.
            </summary>
            <value>
            If <b>true</b> the numeric indicator appears selected. Default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Position">
            <summary>
            This is a wrapper property for location and size.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.NumberPosition">
            <summary>
            Gets and sets the pointer position. Setting this property cause Refresh in win control.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Common">
            <summary>
            Gets and sets CommonElements. 
            Setting this property cause set of the Common to the internal DataAttributes object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Data">
            <summary>
            Gets the DataAttributes reference
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.DefaultParent">
            <summary>
            This flag determines if the Parent property has been changed from its
            default value.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicator.Dundas#Gauges#WinControl#IPointerProvider#Position">
            <summary>
            Returns the position ( the current value ) of this IPointerProvider.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LEDSegment7">
            <summary>
            Determines 7 Segment LEDs.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.Empty">
            <summary>
            Represents empty segments (none, space).
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.SA">
            <summary>
            Represents top horizontal segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.SB">
            <summary>
            Represents right-upper vertical segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.SC">
            <summary>
            Represents right-lower vertical segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.SD">
            <summary>
            Represents bottom horizontal segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.SE">
            <summary>
            Represents left lower vertical segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.SF">
            <summary>
            Represents left upper vertical segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.SG">
            <summary>
            Represents center horizontal segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.SDP">
            <summary>
            Represents decimal point segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.SComma">
            <summary>
            Represents decimal point segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.N1">
            <summary>
            Represents digit 1 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.N2">
            <summary>
            Represents digit 2 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.N3">
            <summary>
            Represents digit 3 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.N4">
            <summary>
            Represents digit 4 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.N5">
            <summary>
            Represents digit 5 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.N6">
            <summary>
            Represents digit 6 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.N7">
            <summary>
            Represents digit 7 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.N8">
            <summary>
            Represents digit 8 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.N9">
            <summary>
            Represents digit 8 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.N0">
            <summary>
            Represents digit 0 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.Neg">
            <summary>
            Represents dash (negative symbol).
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.Unknown">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment7.All">
            <summary>
             all segments
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LEDSegment14">
            <summary>
            Determines 14 segment LEDs.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.Empty">
            <summary>
            Represents empty segments (none, space).
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SA">
            <summary>
            Represents top horizontal segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SB">
            <summary>
            Represents right-upper vertical segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SC">
            <summary>
            Represents right-lower vertical segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SD">
            <summary>
            Represents bottom horizontal segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SE">
            <summary>
            Represents left lower vertical segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SF">
            <summary>
            Represents left upper vertical segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SG1">
            <summary>
            Left central horizontal segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SG2">
            <summary>
            Right central horizontal segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SG">
            <summary>
            Represents center horizontal segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SH">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SJ">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SM">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SN">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SDP">
            <summary>
            Represents decimal point segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.SComma">
            <summary>
            Represents decimal point segment.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.N1">
            <summary>
            Represents digit 1 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.N2">
            <summary>
            Represents digit 2 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.N3">
            <summary>
            Represents digit 3 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.N4">
            <summary>
            Represents digit 4 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.N5">
            <summary>
            Represents digit 5 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.N6">
            <summary>
            Represents digit 6 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.N7">
            <summary>
            Represents digit 7 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.N8">
            <summary>
            Represents digit 8 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.N9">
            <summary>
            Represents digit 8 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.N0">
            <summary>
            Represents digit 0 segments.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.Neg">
            <summary>
            Represents dash (negative symbol).
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.Plus">
            <summary>
            Represents dash (negative symbol).
            		/// </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.Unknown">
            <summary>
            Error.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LEDSegment14.All">
            <summary>
             All segments.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.DigitalSegment">
            <summary>
            This internal class contain procedures to help
            creating of each LED segment
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.DigitalSegment.widthRatio">
            <summary>
            proportion between width and height of each symbol.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.DigitalSegment.shearFactor">
            <summary>
            determines slope angle
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.DigitalSegment.sgmntWidth7">
            <summary>
            proportion between width of the symbol and width of the segments.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DigitalSegment.GetSegment7(System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Creates point array with segment 7segment type with shape below
            </summary>
            <param name="p">The center point</param>
            <param name="s">the size of the one ( center ) horizontal segment</param>
            <returns>Array of six points</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DigitalSegment.GetSegmentHKLN(System.Drawing.PointF,System.Drawing.SizeF,System.Single,System.Boolean)">
            <summary>
            Creates point array with segment 7segment type with shape below
            </summary>
            <param name="p">The center point</param>
            <param name="s">The size of the symbol to print</param>
            <param name="smallWidth">the width of one LED segment</param>
            <param name="left">Indicates left or right slope</param>
            <returns>Array of for points</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DigitalSegment.GetSegment7(Dundas.Gauges.WinControl.LEDSegment7,System.Drawing.PointF,System.Single)">
            <summary>
            Creates graphics path with one segment determined by LEDSegment7 type, center point and size
            </summary>
            <param name="segment">The segment set</param>
            <param name="p">center point </param>
            <param name="size">the size of the digit</param>
            <returns>Initialized GraphicsPath</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DigitalSegment.GetSegment14(Dundas.Gauges.WinControl.LEDSegment14,System.Drawing.PointF,System.Single)">
            <summary>
            Creates graphics path with one segment determined by LEDSegment14 type, center point and size
            </summary>
            <param name="segment">The segment set</param>
            <param name="p">center point </param>
            <param name="size">the size of the digit</param>
            <returns>Initialized GraphicsPath</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DigitalSegment.GetSegments(Dundas.Gauges.WinControl.LEDSegment7,System.Drawing.PointF,System.Single)">
            <summary>
            Creates combined graphics path determined by LEDSegment7 type SET, center point and size
            </summary>
            <param name="segments">The segment set</param>
            <param name="point">center point </param>
            <param name="size">the size of the digit</param>
            <returns>Initialized GraphicsPath</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DigitalSegment.GetOrientedSegments(Dundas.Gauges.WinControl.LEDSegment7,System.Drawing.PointF,System.Single,Dundas.Gauges.WinControl.SegmentsCache)">
            <summary>
            Creates sheared graphics path determined by LEDSegment7 type SET, center point and size.
            </summary>
            <param name="segments">The segment set.</param>
            <param name="point">center point.</param>
            <param name="size">the size of the digit.</param>
            <param name="cache">Segments cache.</param>
            <returns>Initialized GraphicsPath.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DigitalSegment.GetSegments(Dundas.Gauges.WinControl.LEDSegment14,System.Drawing.PointF,System.Single)">
            <summary>
            Creates combined graphics path determined by LEDSegment14 type SET, center point and size
            </summary>
            <param name="segments">The segment set</param>
            <param name="point">center point </param>
            <param name="size">the size of the digit</param>
            <returns>Initialized GraphicsPath</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DigitalSegment.GetOrientedSegments(Dundas.Gauges.WinControl.LEDSegment14,System.Drawing.PointF,System.Single,Dundas.Gauges.WinControl.SegmentsCache)">
            <summary>
            Creates sheared graphics path determined by LEDSegment14 type SET, center point and size.
            </summary>
            <param name="segments">The segment set.</param>
            <param name="point">center point.</param>
            <param name="size">the size of the digit.</param>
            <param name="cache">The segment cache reference, held by numeric indicator.</param>
            <returns>Initialized GraphicsPath</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DigitalSegment.GetSymbol7(System.Char,System.Drawing.PointF,System.Single,System.Boolean,System.Boolean,System.Boolean,Dundas.Gauges.WinControl.SegmentsCache)">
            <summary>
            Returns combined graphics path determined by symbol. 
            </summary>
            <param name="symbol">Symbol to print.</param>
            <param name="point">center point.</param>
            <param name="size">size of symbol/digit.</param>
            <param name="decDot">Print decimal point with digit.</param>
            <param name="comma">Print comma with digit.</param>
            <param name="sepDots">Print separator dots (:) with digit, for future use.</param>
            <param name="cache">The segment cache reference, holded by numeric indicator.</param>
            <returns>Combined graphics path with segments.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DigitalSegment.GetSymbol14(System.Char,System.Drawing.PointF,System.Single,System.Boolean,System.Boolean,System.Boolean,Dundas.Gauges.WinControl.SegmentsCache)">
            <summary>
            Returns combined graphics path determined by symbol. 
            </summary>
            <param name="symbol">Symbol to print.</param>
            <param name="point">center point.</param>
            <param name="size">size of symbol/digit.</param>
            <param name="decDot">Print decimal point with digit.</param>
            <param name="comma">Print comma with digit.</param>
            <param name="sepDots">Print separator dots (:) with digit, for future use.</param>
            <param name="cache">The segment cache reference, held by numeric indicator.</param>
            <returns>Combined graphics path with segments.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SegmentsCache">
            <summary>
            Implements mechanism for caching graphics path determined by segment sets
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SegmentsCache.cacheTable">
            <summary>
            Hashtable which holds graphics path and segments set
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SegmentsCache.matrix">
            <summary>
            Transformation matrix. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SegmentsCache.size">
            <summary>
            controls invalidation of caching. Changing of size cause clearing of the hashtable.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SegmentsCache.GetSegment(System.Enum,System.Drawing.PointF,System.Single)">
            <summary>
            Returns cached graphics path or null if not found.
            </summary>
            <param name="segments">Set of segments</param>
            <param name="p">Center point</param>
            <param name="size">The size ( height ) of the symbol/digit</param>
            <returns>Cached graphics path or null</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SegmentsCache.Reset">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SegmentsCache.CheckCache(System.Single)">
            <summary>
            Checks cache against size and perform reset if needed
            </summary>
            <param name="size">The size ( height) of the symbol/digit</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SegmentsCache.SetSegment(System.Enum,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.PointF,System.Single)">
            <summary>
            Sets segment into cache.
            </summary>
            <param name="segment">The segment set.</param>
            <param name="path">The graphics path.</param>
            <param name="p">The center point of this path.</param>
            <param name="size">The size ( height) of the symbol/digit.</param>
        </member>
        <member name="T:Dundas.Gauges.WinControl.NumericIndicatorConverter">
            <summary>
            The Converter is type converter for NumericIndicator.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CollectionItemTypeConverter">
            <summary>
            The CollectionItemTypeConverter is design time type converter.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CollectionItemTypeConverter.simpleType">
            <summary>
            The type of object which belongs this type converter.
            Must be set in the constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CollectionItemTypeConverter.#ctor">
            <summary>
            Initializes a new instance of CollectionItemTypeConverter class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CollectionItemTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This method overrides CanConvertTo from TypeConverter. This is called when someone
            wants to convert an instance of object to another type. Here,
            only conversion to an InstanceDescriptor is supported.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="destinationType">Destination type.</param>
            <returns>True if object can be converted.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CollectionItemTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This code performs the actual conversion from an object to an InstanceDescriptor.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Object value.</param>
            <param name="destinationType">Destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicatorConverter.#ctor">
            <summary>
            Initializes new instance of Converter class
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeLocation">
            <summary>
            This class is used for the locations of the various gauge elements.
            </summary>
            <remarks>
            These locations are measured as a percentage.
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeObject">
            <summary>
            The GaugeObject is the base class for linear and circular gauges.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeObject.initialized">
            <summary>
            Flag which is false during initialization
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeObject.parent">
            <summary>
            The object reference to the parent element
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeObject.common">
            <summary>
            Holds the object reference of the CommonElements.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeObject.#ctor(System.Object)">
            <summary>
            Initializes a new instance of GaugeObject class.
            </summary>
            <param name="parent">The object reference to the parent element</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeObject.Invalidate">
            <summary>
            Performs invalidating of the GaugeCore.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeObject.Refresh">
            <summary>
            Performs refreshing of the GaugeCore.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeObject.BeginInit">
            <summary>
            Initiate initialization.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeObject.EndInit">
            <summary>
            Finalize initialization
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeObject.ReconnectData(System.Boolean)">
            <summary>
            Handles reconnect message to data providers, usually after initialization
            </summary>
            <param name="exact">True to throw an exception if failed.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeObject.Notify(Dundas.Gauges.WinControl.MessageType,Dundas.Gauges.WinControl.NamedElement,System.Object)">
            <summary>
            Handles notification message from other NamedElements. 
            </summary>
            <param name="msg">The message of MessageType type</param>
            <param name="element">NamedElement which sends the message</param>
            <param name="param">Additional parameters, depended of the MessageType</param>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeObject.disposed">
            <summary>
            Flag to indicate if gauge object has been disposed.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeObject.Dispose">
            <summary>
            Implements IDisposable. Do not make this method virtual. Also, 
            a derived class should not be able to override this method.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeObject.Dispose(System.Boolean)">
            <summary>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeObject.OnDispose">
            <summary>
            Perform disposal.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeObject.Parent">
            <summary>
            Gets the object reference to the parent element
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeObject.Common">
            <summary>
            Gets the object reference of the CommonElements.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLocation.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLocation.#ctor(System.Object,System.Single,System.Single)">
            <summary>
            Location constructor.
            </summary>
            <param name="parent">Parent object.</param>
            <param name="x">X position.</param>
            <param name="y">Y position.</param>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeLocation.defaultValues">
            <summary>
            This flag determines if the location has been initialized to some value.
            It is used to determine if the location should be automatically set to
            some desired value.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLocation.ToString">
            <summary>
            Returns a string that represents the element's position.
            </summary>
            <returns>
            Element position as a string.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLocation.ToPoint">
            <summary>
            Returns the position as a <b>PointF</b> object.
            <seealso cref="T:System.Drawing.PointF"/>
            </summary>
            <returns>
            <seealso cref="T:System.Drawing.PointF"/> object which represents the point.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLocation.op_Implicit(Dundas.Gauges.WinControl.GaugeLocation)~System.Drawing.PointF">
            <summary>
            Returns the position as a <b>PointF</b> object.
            <seealso cref="T:System.Drawing.PointF"/>
            </summary>
            <param name="location">
            A <see cref="T:Dundas.Gauges.WinControl.GaugeLocation"/> object.
            </param>
            <returns>
            <seealso cref="T:System.Drawing.PointF"/> object which represents the point.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLocation.Clone">
            <summary>
            Returns a clone of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLocation.RemoveAutoLayout">
            <summary>
            This function turns off the AutoLayout property of the gauge container.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLocation.X">
            <summary>
            The X value of the location. 
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLocation.Y"/>
            </summary>
            <value>
            Real number that represents the X value of the location. Can be from 0-100 percent.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLocation.Y">
            <summary>
            The Y value of the location. 
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLocation.X"/>
            </summary>
            <value>
            Real number that represents the Y value of the location. Can be from 0-100 percent.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeSize">
            <summary>
            This class is used for the sizes of the various gauge elements.
            </summary>
            <remarks>
            These sizes are measured as a percentage.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSize.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSize.#ctor(System.Object,System.Single,System.Single)">
            <summary>
            Location constructor.
            </summary>
            <param name="parent">Parent object.</param>
            <param name="width">X position.</param>
            <param name="height">Y position.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSize.#ctor(System.Object,System.Drawing.SizeF)">
            <summary>
            Location constructor.
            </summary>
            <param name="parent">Parent object.</param>
            <param name="size">Size value.</param>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeSize.defaultValues">
            <summary>
            This flag determines if the size has been initialized to some value.
            It is used to determine if the size should be automatically set to
            some desired value.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSize.ToString">
            <summary>
            Returns a string that represents the element's position.
            </summary>
            <returns>
            Element position as a string.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSize.ToSize">
            <summary>
            Returns the size as a <b>SizeF</b> object.
            </summary>
            <returns>
            A <see cref="T:System.Drawing.SizeF"/> object that represents the element's size.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSize.op_Implicit(Dundas.Gauges.WinControl.GaugeSize)~System.Drawing.SizeF">
            <summary>
            Returns the size as a <b>SizeF</b> object.
            </summary>
            <returns>
            A <see cref="T:System.Drawing.SizeF"/> object that represents the element's size.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSize.Clone">
            <summary>
            Clones the <b>GaugeSize</b> object.
            </summary>
            <returns>
            An object that represents this <b>GaugeSize</b> object.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSize.RemoveAutoLayout">
            <summary>
            This function turns off the AutoLayout property of the gauge container.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeSize.Width">
            <summary>
            The width value of the size.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSize.Height"/>
            </summary>
            <value>
            A real number that represents the width. Can be from 0-100 percent.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeSize.Height">
            <summary>
            The height value of the size.
            </summary>
            <value>
            A real number that represents the height. Can be from 0-100 percent.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearLabelStyle">
            <summary>
            This class represents the label style for linear gauges, and is applied 
            to the scale labels of linear gauges.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearScale"/>
            </summary>
            <remarks>
            This class is applied to scale labels of <b>LinearGauge</b> objects.
            <p>
            Note that there are also <see cref="T:Dundas.Gauges.WinControl.GaugeLabel"/> objects, which can 
            be displayed anywhere within the gauge container.
            </p>  
            </remarks>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LinearLabelStyle.formatStr">
             These members are equivalent to their corresponding members of the same
             name, with the exception that they return object. They are present in order
             to accommodate SmartClient interactivity through JavaScript in clients
             running the .NET Framework 2.0.
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearLabelStyle.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearLabelStyle.#ctor(System.Object)">
            <summary>
            Constructor that takes a parent object.
            </summary>
            <param name="parent">Parent of the label style.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearLabelStyle.Visible">
            <summary>
            Determines the visibility of the labels.
            </summary>
            <value>
            If <b>true</b> the label is visible, if <b>false</b> it is not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearLabelStyle.Placement">
            <summary>
            Determines the placement of the label, relative to its scale.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.LinearLabelStyle.Placement"/> value. Can be inside, cross, etc.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearLabelStyle.Font">
            <summary>
            Specifies the font of the labels.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearLabelStyle.FontUnit"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.LinearLabelStyle.Font"/> object, which represents the label's font.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearLabelStyle.FontUnit">
            <summary>
            Determines if the font size is measured as a percentage of the parent or in units 
            specified by the <b>Font.Unit</b> property.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearLabelStyle.Font"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.LinearLabelStyle.FontUnit"/> object, which determines the font units.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearLabelStyle.FontAngle">
            <summary>
            An additional, fixed amount in degrees by which the label will 
            be rotated.
            </summary>
            <value>
            A float that represents the degrees of additional rotation. Defaults to 
            zero.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearLabelStyle.TextColor">
            <summary>
            Gets or sets the text color of the scale labels.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearLabelStyle.Font"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            the text color. The default value is <b>Color.Black</b>.
            </value>
            <remarks>
            This property represents the text color of the scale labels.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearLabelStyle.Interval">
            <summary>
            Determines how often the labels will be displayed. 
            <seealso cref="P:Dundas.Gauges.WinControl.LinearLabelStyle.IntervalOffset"/>
            </summary>
            <value>
            An integer that determines how often the labels will be displayed.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearLabelStyle.IntervalOffset">
            <summary>
            Interval offset of the labels.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearLabelStyle.Interval"/> 
            </summary>
            <value>
            An integer that determines how much the labels will be offset. By default 
            it is not set <b>Double.NaN</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearLabelStyle.ShowEndLabels">
            <summary>
            Determines if the end labels of the scale are visible.
            </summary>
            <value>
            If <b>true</b> end labels are visible, if <b>false</b> they are not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearLabelStyle.DistanceFromScale">
            <summary>
            A value by which the labels will be offset from their normal position.
            </summary>
            <value>
            A float that determines how far away the labels will be from the scale. Defaults to 2.
            </value>
            <remarks>
            This is measured as a percentage of the width or height of the associated scale's 
            parent object.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearLabelStyle.FormatString">
            <summary>
            The format string that is to be used for all labels.
            </summary>
            <value>
            A string that represents the formatting to be used for the labels.
            </value>
            <remarks>
            For further information about formatting see the "Formatting Types" topic 
            in MSDN library.
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularLabelStyle">
            <summary>
            This class represents the label style for circular gauges, and is applied 
            to the scale labels of circular gauges.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearScale"/>
            </summary>
            <remarks>
            This class is applied to scale labels of <b>CircularGauge</b> objects.
            <p>
            Note that there are also <see cref="T:Dundas.Gauges.WinControl.GaugeLabel"/> objects, which can 
            be displayed anywhere within the gauge container.
            </p>  
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularLabelStyle.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularLabelStyle.#ctor(System.Object)">
            <summary>
            Constructor that takes a parent object.
            </summary>
            <param name="parent">Parent object of the label.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularLabelStyle.RotateLabels">
            <summary>
            Determines if labels are rotated along with the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularLabelStyle.AllowUpsideDown"/>
            </summary>
            <value>
            If <b>true</b> the label will be rotated along with its scale, if <b>false</b> 
            it will not be. Defaults to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularLabelStyle.AllowUpsideDown">
            <summary>
            Determines if the label can be rotated by more than 90 degrees.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularLabelStyle.RotateLabels"/>
            </summary>
            <value>
            If <b>true</b> a label may be displayed upside down, 
            if <b>false</b> it cannot. Defaults to <b>false</b>.
            </value>
            <remarks>
            If a label is rotated by more than 90 degrees it will appear 
            upside down.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularLabelStyle.Font">
            <summary>
            Specifies the font of the labels.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.CircularLabelStyle.Font"/> object, used for the label's font.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.NeedleStyleAttrib">
            <summary>
            Internal class used for rendering
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.BarStyleAttrib">
            <summary>
            Internal class used for rendering
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.MarkerStyleAttrib">
            <summary>
            Internal class used for rendering
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularPointer">
            <summary>
            Pointer for <b>CircularGauge</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularGauge"/>
            <seealso cref="T:Dundas.Gauges.WinControl.CircularScale"/>
            </summary>
            <remarks>
            All measurements of the pointer properties are measured as a 
            percentage of the circular scale radius.
            <p>
            Circular pointers are also assigned to a <see cref="T:Dundas.Gauges.WinControl.CircularScale"/>, 
            which is the scale the pointer 'points' to.
            </p>
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.PointerBase">
            <summary>
            Summary description for PointerBase.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PointerBase.position">
            <summary>
            Represents pointer position. We have defference between Position and Data.value, 
            when we have dampening. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PointerBase.data">
            <summary>
            Data linker to input/calculated value
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PointerBase.dragging">
            <summary>
            Flag to indicate if the current pointer is being dragged.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.PointerBase.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.PointerBase.DragTo(System.Int32,System.Int32,System.Drawing.PointF)">
            <summary>
            Will cause the pointer to rotate to the location on the
            scale that is closest to the given mouse coordinates.
            </summary>
            <param name="x">The X mouse coordinate</param>
            <param name="y">The Y mouse coordinate</param>
            <param name="refPoint">Reference point.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.PointerBase.OnDispose">
            <summary>
            Handle disposal of this instance.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.Name">
            <summary>
            The name of the pointer.
            </summary>
            <value>
            A string value that represents the pointer's name.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.ScaleName">
            <summary>
            The name of the scale to which the pointer belongs.
            </summary>
            <value>
            A string that represents the name of the scale the pointer belongs to. Defaults 
            to 'Default'.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.DistanceFromScale">
            <summary>
            The distance from the tip of the pointer to the scale. Measured as a percent.
            </summary>
            <remarks>
            For circular scales this is measured as a percentage of the scale's radius. For 
            linear scales this is measured as a percentage of the width or height of the 
            linear gauge.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.Image">
            <summary>
            The image to be used as a pointer.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.ImageTransColor"/>
            </summary>
            <value>
            A string that represents either the filename of an image saved to disk, or 
            a named image added to the container's <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.NamedImages"/> 
            collection.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.ImageTransColor">
            <summary>
            Gets or sets the transparent color of the pointer image.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.Image"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            transparent color of the image. The default value is 
            <b>Color.Empty</b>.
            </value>
            <remarks>
            If you have a pointer image with a yellow background 
            and you would like to make the background transparent set this property 
            to <b>Color.Yellow</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.ImageHueColor">
            <summary>
            Gets or sets the hue color to be applied to the pointer image.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.Image"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            hue color to be applied to the pointer image. The default value is 
            <b>Color.Empty</b>.
            </value>
            <remarks>
            The hue color is applied to the entire image in order to modify its hue.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.ImageOrigin">
            <summary>
            The point on the image that represents the pointer origin (in pixels).
            </summary>
            <value>
            A <see cref="T:System.Drawing.Point"/> object, that represents the image origin.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.Value">
            <summary>
            The current value of the pointer.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.ValueSource"/>
            </summary>
            <value>
            A double that represents the pointer's current value.
            </value>
            <remarks>
            This value determines where along a scale the pointer 'points' to.
            <p>
            Alternatively <see cref="P:Dundas.Gauges.WinControl.PointerBase.ValueSource"/> can be used to set the indicator's value. 
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.ValueSource">
            <summary>
            Specifies the name of an input or calculated value.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.Value"/>
            </summary>
            <value>
            A string that represents the pointer's input or calculated value. 
            </value>
            <remarks>
            If <see cref="P:Dundas.Gauges.WinControl.PointerBase.ValueSource"/> is used as the value source a history will be created, which 
            is used for calculated values and playback.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.SnappingEnabled">
            <summary>
            Determines if snapping of the pointer's value to a given interval is enabled.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.SnappingInterval"/>
            </summary>
            <value>
            If <b>true</b> the pointer will snap to values determined by the 
            <see cref="P:Dundas.Gauges.WinControl.PointerBase.SnappingInterval"/> property, if <b>false</b> it will not. Defaults 
            to <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.SnappingInterval">
            <summary>
            The interval to use when snapping is enabled.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.SnappingEnabled"/>
            </summary>
            <value>
            A double that represents the snapping interval. Defaults to 0.
            </value>
            <remarks>
            If set to 0 there will be no snapping.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.DampeningEnabled">
            <summary>
            Determines if the value movement will be dampened.
            </summary>
            <value>
            If <b>true</b> dampening is enabled, if <b>false</b> it is not. Defaults 
            to <b>false</b>.
            </value>
            <remarks>
            <p>
            Dampening can be used if the value is being updated very quickly in
            order to slow down the movement of the pointer. This property is very useful
            for simulating an oil-filed gauge behavior.
            </p>
            <p><b>
            ASP.NET - This property is only used when the Dundas Gauge for .NET is rendered
            as a Windows Forms control.
            </b></p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.DampeningSweepTime">
            <summary>
            Represents the time it takes (in seconds) to make a full sweep from 
            the minimum to the maximum of the scale.
            </summary>
            <value>
            An integer that represents the dampening sweep time. Defaults to 1 second.
            </value>
            <remarks><b>
            ASP.NET - This property is only used when the Dundas Gauge for .NET is rendered
            as a Windows Forms control.
            </b></remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.ToolTip">
            <summary>
            The tool tip to be displayed when the cursor is over the pointer.
            </summary>
            <remarks>
            The user can format the tool tip using #INPUTVALUE, #INPUTVALUE1, etc. 
            The value from the <b>GaugeContainer.Values</b> collection will then be 
            displayed. #POINTERVALUE can also be used to show the current value of the pointer.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.Interactive">
            <summary>
            Determines whether the user can move the pointer with the mouse by 
            clicking and dragging.
            </summary>
            <value>
            If <b>true</b> the pointer will be interactive, if <b>false</b> it will not. Defaults 
            to <b>false</b>.
            </value>       
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.Visible">
            <summary>
            Determines the visibility of the pointer.
            </summary>
            <value>
            If <b>true</b> the pointer is visible, if <b>false</b> it is not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.BarStyle">
            <summary>
            Determines the bar style if this pointer is of type bar.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.PointerBase.BarStyle"/> value that determines the bar style of the pointer. 
            Defaults to <b>BarStyle.BarStyle1</b>.
            </value>
            <remarks>
            Setting this property will only have an effect if the pointer style 
            is of type bar.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.BarStart">
            <summary>
            Determines where a bar pointer will start.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.PointerBase.BarStart"/> value that determines where the bar will start. 
            Defaults to <b>BarStart.ScaleStart</b>.
            </value>
            <remarks>
            Setting this property will only have an effect if the pointer style 
            is of type bar.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.ShadowOffset">
            <summary>
            Determines how far to the right and down the shadow will appear (in pixels).
            </summary>
            <value>
            A float that represents the shadow offset. Defaults to 2 pixels.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.BorderColor">
            <summary>
            Gets or sets the color of the border.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.BorderWidth"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> object that represents the 
            color of the border. The default value is <b>Color.Black</b>.
            </value>
            <remarks>
            This property represents the color of the border.
            <p>
            This property will not have any effect if the <see cref="P:Dundas.Gauges.WinControl.PointerBase.BorderWidth"/> 
            property is set to 0.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.BorderStyle">
            <summary>
            The line style of the border.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.BorderWidth"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeDashStyle"/> object that represents the 
            color of the border. The default value is <b>GaugeDashStyle.NotSet</b>.
            </value>
            <remarks>
            This property represents the style of the border.
            <p>
            This property will not have any effect if the <see cref="P:Dundas.Gauges.WinControl.PointerBase.BorderWidth"/> 
            property is set to 0.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.BorderWidth">
            <summary>
            The line width of the border, measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.BorderStyle"/>
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.BorderColor"/>
            </summary>
            <value>
            An integer that represents the width of the border. The default value is 
            1 pixel.
            </value>
            <remarks>
            This property represents the width of the border.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.FillColor">
            <summary>
            Gets or sets the fill color of the pointer.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.FillGradientEndColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.FillGradientType"/>
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.FillHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            fill color. The default value is <b>Color.White</b>.
            </value>
            <remarks>
            This property represents the fill color of the pointer. 
            If a gradient is set via the 
            <see cref="P:Dundas.Gauges.WinControl.PointerBase.FillGradientType"/> property this color will be used 
            as the start color for the gradient. Furthermore if a hatch style is 
            set via the <see cref="P:Dundas.Gauges.WinControl.PointerBase.FillHatchStyle"/> property this color 
            will be used as the background color for the hatch.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.FillGradientEndColor">
            <summary>
            Gets or sets the end color of the pointer's fill gradient.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.FillGradientType"/>
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.FillHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            gradient end color. The default value is <b>Color.Red</b>.
            </value>
            <remarks>
            This property represents the end color of the pointer's fill gradient. 
            It is used if the <see cref="P:Dundas.Gauges.WinControl.PointerBase.FillGradientType"/>property
            has a valid gradient. In addition to that it is also used as the 
            hatch foreground color in case a hatch style is set via 
            the <see cref="P:Dundas.Gauges.WinControl.PointerBase.FillHatchStyle"/> property.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.FillHatchStyle">
            <summary>
            The primary fill hatch style of the pointer.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.FillGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeHatchStyle"/> object that represents the 
            hatch style. The default value is <b>GaugeHatchStyle.None</b>.
            </value>
            <remarks>
            If hatching is specified then the <see cref="P:Dundas.Gauges.WinControl.PointerBase.FillColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.PointerBase.FillGradientEndColor"/> properties determine the colors used.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.FillGradientType">
            <summary>
            The primary fill gradient type of the pointer.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.FillGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GradientType"/> object that represents the 
            gradient style. The default value is <b>GradientType.DiagonalLeft</b>.
            </value>
            <remarks>
            If a gradient is specified then the <see cref="P:Dundas.Gauges.WinControl.PointerBase.FillColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.PointerBase.FillGradientEndColor"/> properties determine the colors used.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.MarkerStyle">
            <summary>
            Determines the marker style if the pointer is of type marker.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.MarkerLength"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.PointerBase.MarkerStyle"/> value that determines the bar style of the pointer.
            </value>
            <remarks>
            Setting this property will only have an effect if the pointer style 
            is of type marker.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.MarkerLength">
            <summary>
            Determines the length of the marker if the pointer is of type marker.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.MarkerStyle"/>
            </summary>
            <value>
            A float value that determines the length of the marker.
            </value>
            <remarks>
            Setting this property will only have an effect if the pointer style 
            is of type marker.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.Width">
            <summary>
            The width of the pointer, measured as a percentage.
            </summary>
            <value>
            A float that represents the pointer's width.
            </value>
            <remarks>
            For a circular pointer width is measured as a percentage of the associated scale's 
            radius. For a linear pointer, it is measured as a percentage of the linear gauge 
            object's width.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.Cursor">
            <summary>
            The cursor to be displayed when the mouse is over this pointer.
            </summary>
            <value>
            A reference to <see cref="T:System.Windows.Forms.Cursor"/> which represents
            the cursor. The default value is <see cref="P:System.Windows.Forms.Cursors.Default"/>.
            </value>
            <remarks> Use this property to set the cursor of this pointer. The cursor
            will change only when the mouse is over the poiter.
            <p><b>Note: </b>When this property is set to <see cref="P:System.Windows.Forms.Cursors.Default"/>
            the cursor specified in the <see cref="P:System.Windows.Forms.Control.Cursor"/> property will be used.</p>        
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.Position">
            <summary>
            Gets and sets the pointer position. Setting this property cause Refresh in win control.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerBase.Common">
            <summary>
            Gets and sets CommonElements. 
            Setting this property cause set of the Common to the internal DataAttributes object.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CircularPointer.xamlRenderer">
            <summary>
            Stores the cached XAML renderer.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.GetNeedleFillBrush(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.PointF,System.Single)">
            <summary>
            Return the fill brush of a needle pointer
            </summary>
            <param name="g"></param>
            <param name="primary">If true, the fill brush of the primary
            attributes is returned, otherwise the secondary.</param>
            <param name="path">The Graphics path.</param>
            <param name="pointOrigin">The origin of the pointer.</param>
            <param name="angle">The angle of rotation.</param>
            <returns>The resulting brush.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.GetNeedleStyleAttrib(Dundas.Gauges.WinControl.GaugeGraphics,System.Drawing.PointF,System.Single)">
            <summary>
            Returns the graphics path of the current pointer style
            </summary>
            <param name="g"></param>
            <param name="pointOrigin"></param>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.GetMarkerStyleAttrib(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the graphics path of a marker style pointer.
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.CalculateMarkerDistance">
            <summary>
            Determines how far from the origin the marker should be.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.GetBarStyleAttrib(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the bar style attributes structure
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.GetColorRanges">
            <summary>
            Returns an array or circular ranges that would affect the color of this bar pointer.
            </summary>
            <returns>The array of ranges to use colors from or null.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.GetBarStartValue">
            <summary>
            Returns the start value of the bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.CalculateBarRectangle">
            <summary>
            This function calculates that rectangle that is to be passed to
            the GaugeGraphics.DrawCircularRange() method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.GetNeedleCapBounds(Dundas.Gauges.WinControl.GaugeGraphics,System.Drawing.PointF)">
            <summary>
            Gets the needle cap bounds.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="pointOrigin">The point origin.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.Render(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            The main render method.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.DrawImage(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean,System.Boolean)">
            <summary>
            Draws the image of the pointer.
            </summary>
            <param name="g"></param>
            <param name="primary">If true, draws the primary image, otherwise the secondary.</param>
            <param name="drawShadow">If true, only draw the shadow of the image.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.GetPointerPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the pointer path of the entire pointer.
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.GetShadowPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the shadow graphics path of this pointer.
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CircularPointer.hotRegions">
            <summary>
            Temporarily hold the hot regions.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.AddHotRegion(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
            <summary>
            Add a path to the temp array of hot regions
            </summary>
            <param name="path">the path to be added</param>
            <param name="primary">indicates if it is a primary or a secondary path</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.SetAllHotRegions(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Sets all hold regions help in the hotRegions and then clears the array.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.ToString">
            <summary>
            Returns the name as a string.
            </summary>
            <returns>
            A string value that represents the name of the pointer.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.GetGauge">
            <summary>
            Returns the <b>CircularGauge</b> object to which this pointer belongs.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularGauge"/>
            </summary>
            <returns>
            A reference to the <b>CircularGauge</b> owner object.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.GetScale">
            <summary>
            Returns the scale to which this pointer is assigned.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularScale"/>
            </summary>
            <returns>
            A reference to the <b>CircularScale</b> object associated with the 
            pointer.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.GetNeedleTailLength">
            <summary>
            Returns the length of the needle tail.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.GetCachedXamlRenderer(System.Drawing.RectangleF)">
            <summary>
            Gets a reference to the cached xaml renderer.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.ResetCachedXamlRenderer">
            <summary>
            Resets the cached xaml renderer. The next time GetCachedXamlRenderer() is called it will
            create and load a new XAML file from the resource,
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.Dundas#Gauges#WinControl#ISelectable#DrawSelection(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Render the selection of the given element.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointer.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.Type">
            <summary>
            Determines if the pointer type is needle, marker or bar.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularPointerType"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.CircularPointerType"/> value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.NeedleStyle">
            <summary>
            Determines the needle style if the type is set to needle.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularPointer.Type"/>
            </summary>		
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.CircularPointer.NeedleStyle"/> value.
            </value>
            <remarks>
            This property only has an effect if the <b>Type</b> property 
            is set to Needle.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.CapVisible">
            <summary>
            Determines if the cap in the center of the pointer is visible.
            </summary>
            <value>
            <b>true</b> if the cap is visible, <b>false</b> if it is not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.CapOnTop">
            <summary>
            Determines if the cap is displayed on top of the pointer.
            </summary>
            <value>
            <b>true</b> if the cap is on top, <b>false</b> if it is not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.CapReflection">
            <summary>
            Determines if the pointer cap has a reflection effect.
            </summary>
            <value>
            <b>true</b> if the cap is reflection effect is on, <b>false</b> if it is off. Defaults 
            to <b>false</b>.
            </value>
            <remarks>Setting this property to true will cause the pointer cap to appear
            like it is reflecting light internally. This effect is very useful if you
            are trying to achieve a 3D gel look.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.CapWidth">
            <summary>
            Determines the width of the pointer cap, measured as a percentage of the 
            circular scale radius.
            </summary>
            <value>
            A float that represents the pointer cap width. Defaults to 
            26 percent of the associated circular scale radius.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.CapImage">
            <summary>
            The image to be used for the pointer cap.
            </summary>
            <value>
            String value that represents the path of the image to be used.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.CapImageTransColor">
            <summary>
            Gets or sets the transparent color of the pointer cap image.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularPointer.CapImage"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            transparent color of the pointer cap image. The default value is 
            <b>Color.Empty</b>.</value>
            <remarks>
            If you have a cap image with a yellow background 
            and you would like to make the background transparent set this property 
            to <b>Color.Yellow</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.CapImageHueColor">
            <summary>
            Gets or sets the hue color to be applied to the cap image.
            <seealso cref="T:System.Drawing.Image"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            hue color to be applied to the cap image. The default value is 
            <b>Color.Empty</b>.
            </value>
            <remarks>
            The hue color is applied to the entire image in order to modify its hue.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.CapImageOrigin">
            <summary>
            The point on the image that represents the pointer origin (in pixels).
            <seealso cref="T:System.Drawing.Point"/>
            </summary>
            <value>
            <b>System.Drawing.Point</b> value, that represents the pointer origin.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.Placement">
            <summary>
            Determines if the pointer should touch the scale bar on the 
            inside or the outside.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularPointer.Placement"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.CircularPointer.Placement"/> enumeration value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.Width">
            <summary>
            The width of the pointer, measured as a percentage of the associated 
            scale radius.
            </summary>
            <value>
            A <b>float</b>, which represents the pointer width.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.MarkerStyle">
            <summary>
            Determines the marker style if this pointer is of type marker.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularPointer.Type"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.CircularPointer.MarkerStyle"/> enumeration value.
            </value>
            <remarks>
            Setting this property will only have an effect if the pointer type 
            is marker.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.MarkerLength">
            <summary>
            Determines the length of the marker if this pointer is of type marker.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularPointer.Type"/>
            </summary>
            <value>
            A <b>float</b> that represents the length of the pointer.
            </value>
            <remarks>
            Setting this property will only have an effect if the pointer type 
            is marker.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.FillGradientType">
            <summary>
            The primary fill gradient type of the pointer.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularPointer.CapFillColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GradientType"/> enumeration value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.CapStyle">
            <summary>
            The style of the pointer cap.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapStyle"/> enumeration value. The defualt value is <b>CapStyle.Simple</b>.
            </value>
            <remarks>The <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapFillGradientType"/>, <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapFillGradientEndColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapFillHatchStyle"/> are only used when this property is set to <b>CapStyle.Simple</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.CapFillColor">
            <summary>
            Gets or sets the fill color of the pointer cap.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularPointer.CapFillGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            pointer cap fill color. The default value is <b>Color.Gainsboro</b>.
            </value>
            <remarks>
            This property represents the cap fill color of the pointer. 
            <p>
            If a gradient is selected through the 
            <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapFillGradientType"/> property this color will be used 
            as the start color for the gradient.
            </p>
            <p>
            If a hatch style is 
            selected through the <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapFillHatchStyle"/> property this color 
            will be used as the background color for the hatch.
            </p> 
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.CapFillGradientType">
            <summary>
            The fill gradient type of the pointer cap.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GradientType"/> enumeration value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.CapFillGradientEndColor">
            <summary>
            Gets or sets the end color of the pointer's cap fill gradient.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularPointer.CapFillGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            gradient end color. The default value is <b>Color.DimGray</b>.
            </value>
            <remarks>
            This property represents the end color of the pointer's 
            cap fill gradient. It is used if the <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapFillGradientType"/> 
            property has a valid gradient.
            <p>In addition to that it is also used as the 
            hatch foreground color in case a hatch style is selected via 
            the <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapFillHatchStyle"/> property.
            </p> 
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.CapFillHatchStyle">
            <summary>
            The fill hatch style of the pointer cap.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeHatchStyle"/> enumeration value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.Cursor">
            <summary>
            The cursor to be displayed when the mouse is over this pointer.
            </summary>
            <value>
            A reference to <see cref="T:System.Windows.Forms.Cursor"/> which represents
            the cursor. The default value is <b>System.Windows.Forms.Cursors.Default</b>.
            </value>
            <remarks> Use this property to set the cursor of this pointer. The cursor
            will change only when the mouse is over the pointer.
            <p><b>Note: </b>When this property is set to <see cref="P:System.Windows.Forms.Cursors.Default"/>
            the cursor specified in the <see cref="P:System.Windows.Forms.Control.Cursor"/> property will be used.</p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.DampeningEnabled">
            <summary>
            Determines if the movement of the pointer will be dampened.
            </summary>
            <value>
            If <b>true</b> dampening is enabled, if <b>false</b> it is not. Defaults 
            to <b>false</b>.
            </value>
            <remarks>
            <p>
            Dampening can be used if the value is being updated very quickly in
            order to slow down the movement of the pointer.
            </p>
            <p><b>
            ASP.NET - This property is only used when the Dundas Gauge for .NET is rendered
            as a Windows Forms control.
            </b></p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.Selected">
            <summary>
            Determines if the pointer visually appears selected.
            </summary>
            <value>
            If <b>true</b> the pointer appears selected. Default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.NeedleCapVisible">
            <summary>
            Deprecated. Use <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapVisible"/> instead.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.NeedleCapOnTop">
            <summary>
            Deprecated. Use <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapOnTop"/> instead.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.NeedleCapWidth">
            <summary>
            Deprecated. Use <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapWidth"/> instead.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.NeedleCapImage">
            <summary>
            Deprecated. Use <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapImage"/> instead.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.NeedleCapImageTransColor">
            <summary>
            Deprecated. Use <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapImageTransColor"/> instead.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.NeedleCapImageOrigin">
            <summary>
            Deprecated. Use <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapImageOrigin"/> instead.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.NeedleCapFillColor">
            <summary>
            Deprecated. Use <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapFillColor"/> instead.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.NeedleCapFillGradientType">
            <summary>
            Deprecated. Use <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapFillGradientType"/> instead.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.NeedleCapFillGradientEndColor">
            <summary>
            Deprecated. Use <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapFillGradientEndColor"/> instead.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointer.NeedleCapFillHatchStyle">
            <summary>
            Deprecated. Use <see cref="P:Dundas.Gauges.WinControl.CircularPointer.CapFillHatchStyle"/> instead.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointerConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Gauges.WinControl.CircularPointerConverter"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointerConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)"></see> should be called to find the properties of this object; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointerConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Makes the properties that do not apply to the current mode read-only.
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularPointerConverter.NullUIEditor">
            <summary>
            Used to remove the ellipsis button from BackImage property in 
            order to make it read only. Properties with modal editor attached cannot
            be read-only.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.NoNameExpandableObjectConverter">
            <summary>
            The purpose of this class is to extend the ExpandableObjectConverter in order to prevent it displaying the class name in the properties window.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NoNameExpandableObjectConverter.#ctor">
            <summary>
            Constructor for NoNameExpandableObjectConverter class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NoNameExpandableObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert type to a destination type.
            </summary>
            <param name="context">Type descriptor context.</param>
            <param name="culture">Culture info.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Destination type.</param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.State">
            <summary>
            Represents the state of a <b>StateIndicator</b> object.
            <seealso cref="T:Dundas.Gauges.WinControl.StateIndicator"/>
            <seealso cref="T:Dundas.Gauges.WinControl.StateCollection"/>
            </summary>
            <remarks>
            State indicators can have one or more defined states, which are either on or off.
            <p>
            States are stored in a <see cref="T:Dundas.Gauges.WinControl.StateCollection"/>, which is exposed via the 
            <see cref="P:Dundas.Gauges.WinControl.StateIndicator.States"/> property.</p>
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.Range">
            <summary>
            Represents a range, which displays a range of values. 
            </summary>
            <remarks>
            Circular and linear ranges are associated with <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> and 
            <see cref="T:Dundas.Gauges.WinControl.LinearGauge"/> objects, respectively, and exposed via their <b>Ranges</b> 
            property.
            <p>
            Ranges are usually used to highlight some range of values along a scale, and ranges are 
            always associated with a scale.
            </p>
            <p>
            There are numerous range-related events that can be used for warnings, etc.
            </p>
            </remarks>
        </member>
        <member name="F:Dundas.Gauges.WinControl.Range.inRangeTable">
            <summary>
            Hashtable with RangeDataState. The key is the data attribute.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Range.#ctor">
            <summary>
            Initializes new instance of Range class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Range.GetDataState(Dundas.Gauges.WinControl.DataAttributes)">
            <summary>
            Searches and returns RangeDataState which corresponds to 
            defined DataAttributes
            </summary>
            <param name="data">The DataAttributes to search</param>
            <returns>The RangeDataState reference if found, null if not</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Range.InvalidateState">
            <summary>
            Emulates "PointerValueChanged" for all DataAttributes.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Range.GetTimeOutPeriod">
            <summary>
            Returns range timeout in milliseconds
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Range.TimerExceed(System.Object)">
            <summary>
            Timer call back procedure
            </summary>
            <param name="o">RangeDataState object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Range.OnValueRangeTimeOut(System.Object,Dundas.Gauges.WinControl.ValueRangeEventArgs)">
            <summary>
            Invokes OnValueRangeTimeOut of the Gauge
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Range.OnValueRangeEnter(System.Object,Dundas.Gauges.WinControl.ValueRangeEventArgs)">
            <summary>
            Invokes OnValueRangeEnter of the Gauge 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Range.OnValueRangeLeave(System.Object,Dundas.Gauges.WinControl.ValueRangeEventArgs)">
            <summary>
            Invokes OnValueRangeLeave of the Gauge 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Range.PointerValueChanged(Dundas.Gauges.WinControl.DataAttributes)">
            <summary>
            Processing enter/leave/outoftime  events
            </summary>
            <param name="data">Data attributes.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Range.Notify(Dundas.Gauges.WinControl.MessageType,Dundas.Gauges.WinControl.NamedElement,System.Object)">
            <summary>
            Handles notification message from other NamedElements. 
            </summary>
            <param name="msg">The message of MessageType type</param>
            <param name="element">NamedElement which sends the message</param>
            <param name="param">Additional parameters, depended of the MessageType</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Range.OnDispose">
            <summary>
            Before dispose implementation
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Range.StartValue">
            <summary>
            The start value of the range.
            <seealso cref="P:Dundas.Gauges.WinControl.Range.EndValue"/>
            </summary>
            <value>
            A double that represents the start value of a range.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Range.EndValue">
            <summary>
            The end value of the range.
            <seealso cref="P:Dundas.Gauges.WinControl.Range.StartValue"/>
            </summary>
            <value>
            A double that represents the end value of a range.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Range.InRangeTimeout">
            <summary>
            Determines how long a value needs to stay in the range before triggering the 
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Range.InRangeTimeoutType">
            <summary>
            The type of the <b>InRangeTimeout</b> value.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.State.#ctor">
            <summary>
            Initializes new instance of State class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.State.ToString">
            <summary>
            Gets the name of the state.
            </summary>
            <returns>
            String that represents the name of the string.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.State.OnAdded">
            <summary>
            This method is called right after this NamedElement
            becomes a member of a NamedCollection. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.State.OnValueRangeTimeOut(System.Object,Dundas.Gauges.WinControl.ValueRangeEventArgs)">
            <summary>
            Overrides OnValueRangeTimeOut of Range in order to refresh parent state indicator, 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.Name">
            <summary>
            The name of the state.
            </summary>
            <value>
            A string that represents the state's name.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.StartValue">
            <summary>
            The start and end values determine when the state is activated.
            <seealso cref="P:Dundas.Gauges.WinControl.State.EndValue"/>
            </summary>
            <value>
            A double that represents the start value. Defaults to 70.
            </value>
            <remarks>
            If the value of a state indicator falls within the start and end values 
            of one of its states then that state is activated.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.EndValue">
            <summary>
            The start and end values determine when the state is activated.
            <seealso cref="P:Dundas.Gauges.WinControl.State.StartValue"/>
            </summary>
            <value>
            A double that represents the end value. Defaults to 100.
            </value>
            <remarks>
            If the value of a state indicator falls within the start and end values 
            of one of its states then that state is activated.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.TriggerDelay">
            <summary>
            Determines how long the state indicator value needs to be in range
            before this state is activated.
            <seealso cref="P:Dundas.Gauges.WinControl.State.TriggerDelayType"/>
            </summary>
            <value>
            A double that represents the trigger delay. Defaults to 0, of the type 
            determined by the <see cref="P:Dundas.Gauges.WinControl.State.TriggerDelayType"/> property.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.TriggerDelayType">
            <summary>
            The type of the <b>TriggerDelay</b> value.
            </summary>
            <value>
            A <b>PeriodType</b> value that represents the trigger delay type. Defaults 
            to <b>PeriodType.Seconds</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.Font">
            <summary>
            Specifies the font of the state.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.State.Font"/> object, which represents the state's font.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.BorderColor">
            <summary>
            The color of the state indicator's border when this state is activated.
            <seealso cref="P:Dundas.Gauges.WinControl.State.BorderStyle"/>
            <seealso cref="P:Dundas.Gauges.WinControl.State.BorderWidth"/>
            <seealso cref="P:Dundas.Gauges.WinControl.State.FillColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> object that represents the border 
            color. Defaults to <b>Color.Black</b>.
            </value>
            <remarks>
            Setting this property will only have an effect if the border 
            width is set to a value greater than 0.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.BorderStyle">
            <summary>
            The line style of the state indicator's border when this state is activated.
            <seealso cref="P:Dundas.Gauges.WinControl.State.BorderColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.State.BorderWidth"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeDashStyle"/> value that represents the border 
            style. Defaults to <b>GaugeDashStyle.Solid</b>.
            </value>
            <remarks>
            Setting this property will only have an effect if the border 
            width is set to a value greater than 0.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.BorderWidth">
            <summary>
            The width of the state indicator's border when this state is activated. Measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.State.BorderColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.State.BorderStyle"/>
            </summary>
            <value>
            An integer that represents the width. Defaults to 0.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.FillColor">
            <summary>
            Gets or sets the fill color of the state indicator when this state is activated.
            <seealso cref="P:Dundas.Gauges.WinControl.State.FillGradientEndColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.State.FillGradientType"/>
            <seealso cref="P:Dundas.Gauges.WinControl.State.FillHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            fill color. The default value is <b>Color.Red</b>.
            </value>
            <remarks>
            This property represents the fill color of the state indicator when this state is activated. 
            If a gradient is set via the 
            <see cref="P:Dundas.Gauges.WinControl.State.FillGradientType"/> property this color will be used 
            as the start color for the gradient. Furthermore if a hatch style is 
            set via the <see cref="P:Dundas.Gauges.WinControl.State.FillHatchStyle"/> property this color 
            will be used as the background color for the hatch.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.FillGradientType">
            <summary>
            The primary fill gradient type of the state indicator when this state is activated.
            <seealso cref="P:Dundas.Gauges.WinControl.State.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.State.FillGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GradientType"/> object that represents the 
            gradient style. The default value is <b>GradientType.Center</b>.
            </value>
            <remarks>
            If a gradient is specified then the <see cref="P:Dundas.Gauges.WinControl.State.FillColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.State.FillGradientEndColor"/> properties determine the colors used.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.FillGradientEndColor">
            <summary>
            Gets or sets the end color of the state indicator when this state is activated.
            <seealso cref="P:Dundas.Gauges.WinControl.State.FillGradientType"/>
            <seealso cref="P:Dundas.Gauges.WinControl.State.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.State.FillHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            gradient end color. The default value is <b>Color.DarkRed</b>.
            </value>
            <remarks>
            This property represents the end color of the fill gradient. 
            It is used if the <see cref="P:Dundas.Gauges.WinControl.State.FillGradientType"/>property
            has a valid gradient. In addition to that it is also used as the 
            hatch foreground color in case a hatch style is set via 
            the <see cref="P:Dundas.Gauges.WinControl.State.FillHatchStyle"/> property.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.FillHatchStyle">
            <summary>
            The primary fill hatch style of the state indicator when this state is activated.
            <seealso cref="P:Dundas.Gauges.WinControl.State.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.State.FillGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeHatchStyle"/> object that represents the 
            hatch style. The default value is <b>GaugeHatchStyle.None</b>.
            </value>
            <remarks>
            If hatching is specified then the <see cref="P:Dundas.Gauges.WinControl.State.FillColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.State.FillGradientEndColor"/> properties determine the colors used.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.Text">
            <summary>
            The text to be displayed when this state is activated.
            </summary>
            <value>
            A string that represents the state indicator's text when this state is activated.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.Image">
            <summary>
            The image to be used for this state.
            <seealso cref="P:Dundas.Gauges.WinControl.State.ImageTransColor"/>
            </summary>
            <value>
            A string that represents the pathname of an image saved to disk, or the 
            name of a named image stored in the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.NamedImages"/> 
            collection property.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.ImageTransColor">
            <summary>
            The transparent color of the state image.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> object that represents the color 
            that will be displayed as transparent. Defaults to <b>Color.Empty</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.State.ImageHueColor">
            <summary>
            Gets or sets the hue color to be applied to the state image.
            <seealso cref="P:Dundas.Gauges.WinControl.State.Image"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            hue color to be applied to the state image. The default value is 
            <b>Color.Empty</b>.
            </value>
            <remarks>
            The hue color is applied to the entire image in order to modify its hue.
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.StateConverter">
            <summary>
            This is design time type converter of the State class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateConverter.#ctor">
            <summary>
            Initialize new instance of this Converter class
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.DataAttributes">
            <summary>
            The DataAttributes is a link between visual data consumers 
            like pointers and indicators and InputValue/CalculatedValue.
            The pointers and indicators keeps reference to this object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.IValueConsumer">
            <summary>
            This interface provides the ability to access and change 
            a value consumer objects. The CalculatedValue and DataAttribute classes implement this interface.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IValueConsumer.ProviderRemoved(Dundas.Gauges.WinControl.IValueProvider)">
            <summary>
            Used from IValueProvider to notify this IValueConsumer that 
            the IValueProvider has been removed from the gauge.
            </summary>
            <param name="provider">The IValueProvider which send this notification.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IValueConsumer.ProviderNameChanged(Dundas.Gauges.WinControl.IValueProvider)">
            <summary>
            Used from IValueProvider to notify this IValueConsumer that 
            the name of this IValueProvider has been changed.
            </summary>
            <param name="provider">The IValueProvider which send this notification.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IValueConsumer.InputValueChanged(System.Object,Dundas.Gauges.WinControl.ValueChangedEventArgs)">
            <summary>
            Used from IValueProvider to notify this IValueConsumer that 
            the output value/date of this IValueProvider has been changed.
            </summary>
            <param name="e">Event sender.</param>
            <param name="sender">Event arguments.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IValueConsumer.Reset">
            <summary>
            Resets state of this IValueConsumer.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IValueConsumer.Refresh">
            <summary>
            Force reread of value/date from IValueProvider of this IValueConsumer. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IValueConsumer.GetProvider">
            <summary>
            Returns IValueProvider to which this IValueConsumer is connected.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.DataAttributes.dampTimer">
            <summary>
            Used for dampening
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.DataAttributes.timerState">
            <summary>
             TimerState class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.#ctor">
            <summary>
            Initializes a new instance of DataAttributes class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.#ctor(System.Object)">
            <summary>
            Initializes a new instance of DataAttributes class.
            </summary>
            <param name="parent">The parent object which holds this DataAttributes</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.SetValue(System.Double,System.Boolean)">
            <summary>
            Sets a new value.
            </summary>
            <param name="value">The new value.</param>
            <param name="initialize">True in initialize stage.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.CollectValues">
            <summary>
            Collects all combination of names of inputValues.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.AttachToProvider(System.Boolean)">
            <summary>
            Perform attaching to input value provider by name.
            </summary>
            <param name="exact">Use exact match with provider name.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.EndInit">
            <summary>
            Finalize initialization.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.ReconnectData(System.Boolean)">
            <summary>
            Handles reconnect message to data providers, after initialization.
            </summary>
            <param name="exact">True to throw an exception if failed.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.Notify(Dundas.Gauges.WinControl.MessageType,Dundas.Gauges.WinControl.NamedElement,System.Object)">
            <summary>
            Handles notification message from other NamedElements. 
            </summary>
            <param name="msg">The message of MessageType type.</param>
            <param name="element">NamedElement which sends the message.</param>
            <param name="param">Additional parameters, depended of the MessageType.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.TimerExceed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Timer call back method.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.StartDampening(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Starts dampening process.
            </summary>
            <param name="targetValue">The target ( end ) value.</param>
            <param name="minimum">The minimum possible value.</param>
            <param name="maximum">The maximum possible value.</param>
            <param name="dampeningSweepTime">The sweep time which takes to move value from maximum to minimum.</param>
            <param name="refreshRate">Refresh rate per second.</param>
            <returns>True if dampening has started.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.StopDampening">
            <summary>
            Stops the dampening process.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.DataAttributes.provider">
            <summary>
            Reference to IValueProvider object
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.Dundas#Gauges#WinControl#IValueConsumer#ProviderRemoved(Dundas.Gauges.WinControl.IValueProvider)">
            <summary>
            Handles notification that the IValueProvider no longer exists
            </summary>
            <param name="provider">The IValueProvider which send this notification</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.Dundas#Gauges#WinControl#IValueConsumer#ProviderNameChanged(Dundas.Gauges.WinControl.IValueProvider)">
            <summary>
            Handles notification that the IValueProvider has changed its name
            </summary>
            <param name="provider">The IValueProvider which send this notification</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.Dundas#Gauges#WinControl#IValueConsumer#InputValueChanged(System.Object,Dundas.Gauges.WinControl.ValueChangedEventArgs)">
            <summary>
            Handles notification that the IValueProvider has changed its Value
            </summary>
            <param name="sender">The IValueProvider which send this notification</param>
            <param name="e">The <see cref="T:Dundas.Gauges.WinControl.ValueChangedEventArgs"/></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.Dundas#Gauges#WinControl#IValueConsumer#GetProvider">
            <summary>
            Returns current IValueProvider.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.Dundas#Gauges#WinControl#IValueConsumer#Reset">
            <summary>
            Resets state of this IValueConsumer.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.Dundas#Gauges#WinControl#IValueConsumer#Refresh">
            <summary>
            Force reread of value/date from IValueProvider of this IValueConsumer
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataAttributes.OnDispose">
            <summary>
            Disposes this object reference
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.DataAttributes.Value">
            <summary>
            Gets and sets current value
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.DataAttributes.ValueSource">
            <summary>
            Gets and sets ValueSource which represents IValueProvider
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.DataAttributes.OldValue">
            <summary>
            Gets and sets undo value 
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.DataAttributes.DateValueStamp">
            <summary>
            Gets and sets current DateTime stamp which goes along with Value.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.TimerState">
            <summary>
            Keeps specific data used in timer call back.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of the InputValues for the BaseValueName.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values collection.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ImageUIEditor">
            <summary>
            This UITypeEditor can be associated with Image property in WinControl.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageUIEditor.#ctor">
            <summary>
            Initializes new instance of ImageUIEditor class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageUIEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates whether the UITypeEditor provides a form-based (modal) dialog, 
            drop down dialog, or no UI outside of the properties window.            
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageUIEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Displays the UI for value selection.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageUIEditor.GetGaugeReference(System.Object)">
            <summary>
            Checks if the instance belongs to GaugeContainer type or contains
            the field of gauge type. NOTE: Required for the Diagram product.
            </summary>
            <param name="instance">
            Instance to check.
            </param>
            <returns>
            Object of chart type.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageUIEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates whether the UITypeEditor supports painting a 
            representation of a property's value.            
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearRange">
            <summary>
            Range for <b>LinearGauge</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearGauge"/>
            </summary>
            <remarks>
            All measurements of the range properties are measured as a 
            percentage of the width or height of the linear gauge the range belongs to.
            <p>
            Like pointers, ranges are assigned to an existing scale.
            </p>
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.RangeBase">
            <summary>
            Represents base class for range for circular and linear gauge.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RangeBase.#ctor">
            <summary>
            Initializes new instance of RangeBase class.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RangeBase.endWidth">
            <summary>
            The width of the range at the end in percent.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RangeBase.Render(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Draws range. Must be overridden.
            </summary>
            <param name="g">The gauge graphics </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RangeBase.GetGaugeBase">
            <summary>
            Gets parent GaugeBase
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RangeBase.OnAdded">
            <summary>
            This method is called right after this NamedElement
            becomes a member of a NamedCollection. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RangeBase.Notify(Dundas.Gauges.WinControl.MessageType,Dundas.Gauges.WinControl.NamedElement,System.Object)">
            <summary>
            Handles notification message from other NamedElements. 
            </summary>
            <param name="msg">The message of MessageType type</param>
            <param name="element">NamedElement which sends the message</param>
            <param name="param">Additional parameters, depended of the MessageType</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RangeBase.Dundas#Gauges#WinControl#IToolTipProvider#GetToolTip(Dundas.Gauges.WinControl.HitTestResult)">
            <summary>
            Returns tool tip information for the object implemented this interface.
            </summary>
            <param name="ht">The current <see cref="T:Dundas.Gauges.WinControl.HitTestResult"/></param>
            <returns>The tool tip string</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.Name">
            <summary>
            The name of the range.
            </summary>
            <value>
            String that represents the name of the range.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.Placement">
            <summary>
            Determines where the range should be placed relative to the scale bar.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.RangeBase.Placement"/> value that represents the placement. Defaults to 
            <b>Placement.Inside</b>.
            </value>
            <remarks>
            For linear gauges the inside is to the bottom or the right.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.DistanceFromScale">
            <summary>
            The distance from the range to the scale, measured as a percent.
            </summary>
            <value>
            A float that represents the distance from the scale. Default to 10 percent.
            </value>
            <remarks>
            This property is measured as a percentage of the linear gauge's width 
            or height.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.ScaleName">
            <summary>
            The name of the scale to which this range belongs.
            </summary>
            <value>
            A string that represents the name of the scale that the range belongs to.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.InRangeTickMarkColor">
            <summary>
            Gets or sets the color of the scale tick marks that occur within the range.
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.InRangeLabelColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            color. The default value is <b>Color.Empty</b>.
            </value>
            <remarks>
            This color affects the fill color of the scale tick marks that are 
            within this range. This property, along with the <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.InRangeLabelColor"/> 
            property, is very useful if you would like to display a range that simply 
            appears as differently colored scale labels and tick marks.
            <p>
            Even if the <see cref="P:Dundas.Gauges.WinControl.RangeBase.Visible"/> property of this range is set to <b>false</b> 
            the scale tick marks will change their fill color.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.InRangeLabelColor">
            <summary>
            Gets or sets the color of the scale labels that occur within the range.
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.InRangeTickMarkColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            color. The default value is <b>Color.Empty</b>.
            </value>
            <remarks>
            This color affects the fill color of the scale labels that are 
            within this range. This property, along with the <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.InRangeTickMarkColor"/> 
            property, is very useful if you would like to display a range that simply 
            appears as differently colored scale labels and tick marks.
            <p>
            Even if the <see cref="P:Dundas.Gauges.WinControl.RangeBase.Visible"/> property of this range is set to <b>false</b> 
            the scale labels will change their fill color.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.InRangeBarPointerColor">
            <summary>
            Gets or sets the fill color of a bar pointer that falls within this range.
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.InRangeLabelColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.InRangeTickMarkColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            color. The default value is <b>Color.Empty</b>.
            </value>
            <remarks>
            This color affects the fill color of a bar pointer that falls 
            within this range. This property only affects the part of the bar pointer
            that is within the range, not the entire bar pointer.
            <p>Even if the <see cref="P:Dundas.Gauges.WinControl.RangeBase.Visible"/> property of this range is set to <b>false</b> 
            the bar pointer will still be affected.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.ToolTip">
            <summary>
            The tool tip to be displayed when the cursor is over the range.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.Visible">
            <summary>
            Determines the visibility of the range.
            </summary>
            <value>
            If <b>true</b> the range is visible, if <b>false</b> it is not. Defaults 
            to <b>true</b>.
            </value>
            <remarks>
            Setting this property to <b>false</b> will not prevent the 
            <see cref="P:Dundas.Gauges.WinControl.RangeBase.InRangeTickMarkColor"/> or <see cref="P:Dundas.Gauges.WinControl.RangeBase.InRangeLabelColor"/> properties 
            from having an effect. 
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.BorderColor">
            <summary>
            The color of the range's border.
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.BorderStyle"/>
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.BorderWidth"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value that represents the border color. Defaults 
            to <b>Color.Black</b>.
            </value>
            <remarks>
            Setting this property will not have an effect if <see cref="P:Dundas.Gauges.WinControl.RangeBase.BorderWidth"/> is 
            set to 0.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.ShadowOffset">
            <summary>
            Determines how far to the right and down the shadow will appear. Measured in pixels.
            </summary>
            <value>
            A float that represents the shadow offset. Defaults to 0 pixels.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.BorderStyle">
            <summary>
            The style of the range's border.
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.BorderWidth"/>
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.BorderColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeDashStyle"/> value that represents the border style. Defaults 
            to <b>GaugeDashStyle.NotSet</b>.
            </value>
            <remarks>
            Setting this property will not have an effect if <see cref="P:Dundas.Gauges.WinControl.RangeBase.BorderWidth"/> is 
            set to 0.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.BorderWidth">
            <summary>
            The width of the range's border, measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.BorderStyle"/>
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.BorderColor"/>
            </summary>
            <value>
            An integer that represents the border width. Defaults 
            to 1 pixel.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.FillColor">
            <summary>
            Gets or sets the fill color of the range.
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.FillGradientEndColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.FillGradientType"/>
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.FillHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            fill color. The default value is <b>Color.White</b>.
            </value>
            <remarks>
            This property represents the fill color of the range. 
            If a gradient is set via the 
            <see cref="P:Dundas.Gauges.WinControl.RangeBase.FillGradientType"/> property this color will be used 
            as the start color for the gradient. Furthermore if a hatch style is 
            set via the <see cref="P:Dundas.Gauges.WinControl.RangeBase.FillHatchStyle"/> property this color 
            will be used as the background color for the hatch.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.FillGradientType">
            <summary>
            The primary fill gradient type of the range.
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.FillGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.RangeGradientType"/> object that represents the 
            gradient style. The default value is <b>RangeGradientType.StartToEnd</b>.
            </value>
            <remarks>
            If a gradient is specified then the <see cref="P:Dundas.Gauges.WinControl.RangeBase.FillColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.RangeBase.FillGradientEndColor"/> properties determine the colors used.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.FillGradientEndColor">
            <summary>
            Gets or sets the end color of the range's fill gradient.
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.FillGradientType"/>
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.FillHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            gradient end color. The default value is <b>Color.Red</b>.
            </value>
            <remarks>
            This property represents the end color of the range's fill gradient. 
            It is used if the <see cref="P:Dundas.Gauges.WinControl.RangeBase.FillGradientType"/>property
            has a valid gradient. In addition to that it is also used as the 
            hatch foreground color in case a hatch style is set via 
            the <see cref="P:Dundas.Gauges.WinControl.RangeBase.FillHatchStyle"/> property.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.FillHatchStyle">
            <summary>
            The primary fill hatch style of the range.
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.FillGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeHatchStyle"/> object that represents the 
            hatch style. The default value is <b>GaugeHatchStyle.None</b>.
            </value>
            <remarks>
            If hatching is specified then the <see cref="P:Dundas.Gauges.WinControl.RangeBase.FillColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.RangeBase.FillGradientEndColor"/> properties determine the colors used.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.InRangeTimeout">
            <summary>
            Determines how long a pointer needs to stay in the range before triggering the 
            <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeTimeOut"/> event.
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.InRangeTimeoutType"/>
            </summary>
            <value>
            A double that represents the amount of time before the time out event is fired. Defaults 
            to 0 seconds.
            </value>
            <remarks>
            The type of timeout is set by the <see cref="P:Dundas.Gauges.WinControl.RangeBase.InRangeTimeoutType"/> property.        
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.InRangeTimeoutType">
            <summary>
            The type of the <b>InRangeTimeout</b> value.
            <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeTimeOut"/> event.
            <seealso cref="P:Dundas.Gauges.WinControl.RangeBase.InRangeTimeout"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.PeriodType"/> object that represents the type of the time out. Defaults 
            to <b>PeriodType.Seconds</b>.
            </value>
            <remarks>
            The timeout is set by the <see cref="P:Dundas.Gauges.WinControl.RangeBase.InRangeTimeout"/> property.        
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.Selected">
            <summary>
            Determines if the range visually appears selected.
            </summary>
            <value>
            If <b>true</b> the range appears selected. Default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.StartWidth">
            <summary>
            The width of the range at the start in percent.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeBase.EndWidth">
            <summary>
            Gets or sets the end width of the range.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearRange.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearRange.ToString">
            <summary>
            Returns the name as a string.
            </summary>
            <returns>
            A string value that represents the name of the pointer.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearRange.GetGauge">
            <summary>
            Returns the gauge to which this range belongs.
            </summary>
            <returns>A reference to the <see cref="T:Dundas.Gauges.WinControl.LinearGauge"/> owner object.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearRange.GetScale">
            <summary>
            Returns the scale to which this range is assigned.
            </summary>
            <returns>
            A reference to the assigned <see cref="T:Dundas.Gauges.WinControl.LinearScale"/> object.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearRange.GetPath(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Returns the shadow graphics path of this range.
            </summary>
            <param name="g"></param>
            <param name="getShadowPath">True to get the shadow path, false to get the normal path.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearRange.Dundas#Gauges#WinControl#ISelectable#DrawSelection(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Render the selection of the given element.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearRange.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearRange.StartValue">
            <summary>
            The start value of the range.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearRange.EndValue"/>
            </summary>
            <value>
            An integer that represents the range's start value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearRange.EndValue">
            <summary>
            The end value of the range.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearRange.StartValue"/>
            </summary>
            <value>
            An integer that represents the range's end value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearRange.StartWidth">
            <summary>
            The width of the range at its start. Measured as a percent of the width of the linear 
            gauge object that owns the range.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearRange.EndWidth"/>
            </summary>
            <value>
            A real number that represents the start width of the range. Defaults to 
            10 percent of the linear gauge object's width. 
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearRange.EndWidth">
            <summary>
            The width of the range at its end. Measured as a percent of the width of the linear 
            gauge object that owns the range.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearRange.StartWidth"/>
            </summary>
            <value>
            A real number that represents the end width of the range. Defaults to 
            10 percent of the linear gauge object's width. 
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearRange.Placement">
            <summary>
            Determines where the range should be placed, relative to the scale.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.LinearRange.Placement"/> enumeration value. Defaults to 
            <b>Placement.Outside</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearRange.DistanceFromScale">
            <summary>
            The distance from the range to the scale. Measured as a percent of the radius of the circular 
            gauge object that owns the range.
            </summary>
            <value>
            A real number that represents the distance from the range to the scale. Defaults to 10 percent.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearPointerType">
            <summary>
            Defines linear pointer types.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LinearPointerType.Marker">
            <summary>
            Marker.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LinearPointerType.Bar">
            <summary>
            Bar.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LinearPointerType.Thermometer">
            <summary>
            Thermometer.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearPointer">
            <summary>
            Pointer for <b>LinearPointer</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearGauge"/>
            <seealso cref="T:Dundas.Gauges.WinControl.LinearScale"/>
            </summary>
            <remarks>
            All measurements of the pointer properties are measured as a 
            percentage of the width or height of the <b>LinearGauge</b> parent object.
            <p>
            Linear pointers are also assigned to a <see cref="T:Dundas.Gauges.WinControl.LinearScale"/>, 
            which is the scale the pointer 'points' to.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.Render(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            The main render method.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.GetBarStyleAttrib(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Populates and returns the bar style attributes structure. This
            function is also used for the thermometer type.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <returns>A reference to the new structure.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.GetThermometerStyleAttrib(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Populates and returns the bar style attributes structure. This
            function is also used for the thermometer type.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <returns>A reference to the new structure.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.GetColorRanges">
            <summary>
            Returns an array or circular ranges that would affect the color of this bar pointer.
            </summary>
            <returns>The array of ranges to use colors from or null.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.GetBarStartValue">
            <summary>
            Returns the start value of the bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.DrawImage(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Draws the image if the pronter
            </summary>
            <param name="g"></param>
            <param name="drawShadow">If true, only draw the shadow of the image.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.GetMarkerStyleAttrib(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the graphics path of a marker style pointer.
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.CalculateMarkerDistance">
            <summary>
            Determines how far from the scale position the marker should be.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.GetPointerPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the pointer path of the entire pointer.
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.GetShadowPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the shadow graphics path of this pointer.
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="F:Dundas.Gauges.WinControl.LinearPointer.hotRegions">
            <summary>
            Temporarily hold the hot regions.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.AddHotRegion(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
            <summary>
            Add a path to the temp array of hot regions
            </summary>
            <param name="path">the path to be added</param>
            <param name="primary">indicates if it is a primary or a secondary path</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.SetAllHotRegions(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Sets all hold regions help in the hotRegions and then clears the array.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.ToString">
            <summary>
            Returns the name as a string.
            </summary>
            <returns>
            A string value that represents the name of the pointer.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.GetGauge">
            <summary>
            Returns the gauge to which this pointer belongs.
            </summary>
            <returns>
            A reference to a <see cref="T:Dundas.Gauges.WinControl.LinearGauge"/> object.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.GetScale">
            <summary>
            Returns the scale to which this pointer is assigned.
            </summary>
            <returns>
            A reference to a <see cref="T:Dundas.Gauges.WinControl.LinearGauge"/> object.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.Dundas#Gauges#WinControl#ISelectable#DrawSelection(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Render the selection of the given element.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointer.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.Type">
            <summary>
            Determines if the pointer type is marker or bar.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearPointerType"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.LinearPointerType"/> value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.Placement">
            <summary>
            Determines if the pointer should touch the scale bar on the 
            inside or the outside.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearPointer.Placement"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.LinearPointer.Placement"/> enumeration value.
            </value>
            <remarks>
             For linear gauges the inside is bottom or the right.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.Width">
            <summary>
            The width of the pointer, measured as a percentage of the 
            width or height of the associated linear gauge object.
            </summary>
            <value>
            A <b>float</b>, which represents the pointer width.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.MarkerStyle">
            <summary>
            Determines the marker style if this pointer is of type marker.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearPointer.Type"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.LinearPointer.MarkerStyle"/> enumeration value.
            </value>
            <remarks>
            Setting this property will only have an effect if the pointer type 
            is marker.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.MarkerLength">
            <summary>
            Determines the length of the marker if this pointer is of type marker.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearPointer.Type"/>
            </summary>
            <value>
            A <b>float</b> that represents the length of the pointer.
            </value>
            <remarks>
            Setting this property will only have an effect if the pointer type 
            is marker.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.FillGradientType">
            <summary>
            The primary fill gradient type of the pointer.
            <seealso cref="T:Dundas.Gauges.WinControl.GradientType"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GradientType"/> enumeration value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.ThermometerBulbOffset">
            <summary>
            Determines the offset of the thermometer bulb from the zero position.
            </summary>
            <value>
            A float that represents the bulb offset. The default value is 5.
            </value>
            <remarks>This property is used only when the <see cref="P:Dundas.Gauges.WinControl.LinearPointer.Type"/>
            property is set to <see cref="F:Dundas.Gauges.WinControl.LinearPointerType.Thermometer"/>.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.ThermometerBulbSize">
            <summary>
            Determines the size of the thermometer bulb.
            </summary>
            <value>
            A float that represents the bulb offset. The default value is 50.
            </value>
            <remarks>This property is used only when the <see cref="P:Dundas.Gauges.WinControl.LinearPointer.Type"/>
            property is set to <see cref="F:Dundas.Gauges.WinControl.LinearPointerType.Thermometer"/>.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.ThermometerBackColor">
            <summary>
            Gets or sets the thermometer's back color.
            </summary>
            <value>
            A <b>Color</b> that represents the 
            thermometer's back color. The default value is <b>Color.Empty</b>.
            </value>
            <remarks>
            This property represents the thermometer's back color. 
            <p>
            If a gradient is selected through the 
            <see cref="P:Dundas.Gauges.WinControl.LinearPointer.ThermometerBackGradientType"/> property this color will be used 
            as the start color for the gradient.
            </p>
            <p>
            If a hatch style is 
            selected through the <see cref="P:Dundas.Gauges.WinControl.LinearPointer.ThermometerBackHatchStyle"/> property this color 
            will be used as the background color for the hatch.
            </p> 
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.ThermometerBackGradientType">
            <summary>
            The thermometer back gradient type.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GradientType"/> enumeration value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.ThermometerBackGradientEndColor">
            <summary>
            Gets or sets the end color of the thermometer's back gradient.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearPointer.ThermometerBackGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            gradient end color. The default value is <b>Color.Empty</b>.
            </value>
            <remarks>
            This property represents the end color of the thermometer's 
            back gradient. It is used if the <see cref="P:Dundas.Gauges.WinControl.LinearPointer.ThermometerBackGradientType"/> 
            property has a valid gradient.
            <p>In addition to that it is also used as the 
            hatch foreground color in case a back hatch style is selected via 
            the <see cref="P:Dundas.Gauges.WinControl.LinearPointer.ThermometerBackHatchStyle"/> property.
            </p> 
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.ThermometerBackHatchStyle">
            <summary>
            The hatch style of the thermometer's back.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeHatchStyle"/> enumeration value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.ThermometerStyle">
            <summary>
            Determines the style of the thermometer.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.LinearPointer.ThermometerStyle"/> value that determines the thermometer style of the pointer. 
            Defaults to <b>ThermometerStyle.Standard</b>.
            </value>
            <remarks>
            Setting this property will only have an effect if the pointer type 
            is thermometer.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.Cursor">
            <summary>
            The cursor to be displayed when the mouse is over this pointer.
            </summary>
            <value>
            A reference to <see cref="T:System.Windows.Forms.Cursor"/> which represents
            the cursor. The default value is <b>System.Windows.Forms.Cursors.Default</b>.
            </value>
            <remarks> Use this property to set the cursor of this pointer. The cursor
            will change only when the mouse is over the pointer.
            <p><b>Note: </b>When this property is set to <see cref="P:System.Windows.Forms.Cursors.Default"/>
            the cursor specified in the <see cref="P:System.Windows.Forms.Control.Cursor"/> property will be used.</p>        
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.DampeningEnabled">
            <summary>
            Determines if the movement of the pointer will be dampened.
            </summary>
            <value>
            If <b>true</b> dampening is enabled, if <b>false</b> it is not. Defaults 
            to <b>false</b>.
            </value>
            <remarks>
            <p>
            Dampening can be used if the value is being updated very quickly in
            order to slow down the movement of the pointer.
            </p>
            <p><b>
            ASP.NET - This property is only used when the Dundas Gauge for .NET is rendered
            as a Windows Forms control.
            </b></p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointer.Selected">
            <summary>
            Determines if the pointer visually appears selected.
            </summary>
            <value>
            If <b>true</b> the pointer appears selected. Default value is <b>false</b>.
            </value>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointerConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Gauges.WinControl.LinearPointerConverter"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointerConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)"></see> should be called to find the properties of this object; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointerConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Makes the properties that do not apply to the current mode read-only.
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearGaugeCollection">
             <summary>
             Collection of <b>LinearGauge</b> objects.
             <seealso cref="T:Dundas.Gauges.WinControl.LinearGauge"/>
             </summary>
             <remarks>
             Exposed as the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.LinearGauges"/> property.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGaugeCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGaugeCollection.Add(System.String)">
            <summary>
            Used by <b>LinearGaugeCollection</b> to add an item to the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularGauge"/>
            <seealso cref="M:Dundas.Gauges.WinControl.LinearGaugeCollection.Remove(Dundas.Gauges.WinControl.LinearGauge)"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> object to be added to the 
            collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.LinearGauge"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. 
            The name argument is the <b>Name</b> property of the object being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGaugeCollection.Add(Dundas.Gauges.WinControl.LinearGauge)">
            <summary>
            Adds a <b>LinearGauge</b> object to the container's collection.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearGauge"/>
            <seealso cref="M:Dundas.Gauges.WinControl.LinearGaugeCollection.Remove(Dundas.Gauges.WinControl.LinearGauge)"/>
            </summary>
            <param name="value">
            <b>LinearGauge</b> object to be added to the collection. 
            </param>
            <returns>
            Position in the collection of the added object.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGaugeCollection.Remove(Dundas.Gauges.WinControl.LinearGauge)">
            <summary>
            Removes the specified <see cref="T:Dundas.Gauges.WinControl.LinearGauge"/> object from the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.LinearGaugeCollection.Add(System.String)"/>
            </summary>
            <param name="value">
            Object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGaugeCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearGaugeCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearGaugeCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns the LinearGauge object
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearGaugeCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>LinearGauge</b> object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.KnobCollection">
            <summary>
            Collection of <b>Knob</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.Knob"/>
            </summary>
            <remarks>
            This collection is exposed as the <see cref="P:Dundas.Gauges.WinControl.CircularGauge.Pointers"/> 
            property of <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> objects.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.KnobCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.KnobCollection.Add(System.String)">
            <summary>
            Used by <b>KnobCollection</b> to add an item to the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.Knob"/>
            <seealso cref="M:Dundas.Gauges.WinControl.KnobCollection.Remove(Dundas.Gauges.WinControl.Knob)"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.Knob"/> object to be added 
            to the collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.Knob"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. Also, 
            the <i>name</i> argument is the <b>Name</b> property of the object 
            being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.KnobCollection.Add(Dundas.Gauges.WinControl.Knob)">
            <summary>
            Adds a <b>Knob</b> object to the end of the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.Knob"/>
            <seealso cref="M:Dundas.Gauges.WinControl.KnobCollection.Remove(Dundas.Gauges.WinControl.Knob)"/>
            </summary>
            <param name="value">
            The name of the <see cref="T:Dundas.Gauges.WinControl.Knob"/> object to be added to 
            the collection.
            </param>
            <returns>
            Returns the position in the collection of the newly added object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.KnobCollection.Remove(Dundas.Gauges.WinControl.Knob)">
            <summary>
            Removes the specified <b>Knob</b> object from the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.KnobCollection.Add(System.String)"/>
            </summary>
            <param name="value">
            <see cref="T:Dundas.Gauges.WinControl.Knob"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.KnobCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.KnobCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>		
        </member>
        <member name="P:Dundas.Gauges.WinControl.KnobCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns a <b>Knob</b> object.
            <seealso cref="T:Dundas.Gauges.WinControl.Knob"/>
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.KnobCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>Knob</b> object.
            <seealso cref="T:Dundas.Gauges.WinControl.Knob"/>
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ImageOrigin">
            <summary>
            Summary description for ImageOrigin.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageOrigin.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageOrigin.#ctor(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Constructor that takes X and Y position coordinates, and a boolean 
            that determines if it is set.
            </summary>
            <param name="notSet">Determines if image origin is set.</param>
            <param name="x">X position of image origin.</param>
            <param name="y">Y position of image origin.</param>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ImageOrigin.defaultValues">
            <summary>
            This flag determines if the location has been initialized to some value.
            It is used to determine if the location should be automatically set to
            some desired value.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageOrigin.ToString">
            <summary>
            Returns string that represent element position.
            </summary>
            <returns>Element position data as string.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageOrigin.ToPoint">
            <summary>
            Returns position of image origin as a point.
            </summary>
            <returns>Point that describes the image origin.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageOrigin.Clone">
            <summary>
            Returns a clone of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ImageOrigin.X">
            <summary>
            The X value of the image origin. 
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ImageOrigin.Y">
            <summary>
            The Y value of the image origin. 
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ImageOrigin.NotSet">
            <summary>
            Determines if the image origin is not set.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ImageOrigin.Converter">
            <summary>
            Element location converter.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageOrigin.Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertFrom method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="sourceType">Conversion source type.</param>
            <returns>Indicates if conversion is possible.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageOrigin.Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="destinationType">Destination type.</param>
            <returns>Indicates if conversion is possible.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageOrigin.Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Conversion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageOrigin.Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Overrides the ConvertFrom method of TypeConverter.
            Converts from string with comma separated values.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Indicates if conversion is possible.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.RenderingType">
            <summary>
            Specify Rendering Type
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RenderingType.Gdi">
            <summary>
            GDI+ Type
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.RenderingEngine">
            <summary>
            This class is used as a connection point between different 
            rendering types as SVG, GDI+,  Flash etc.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.IGaugeRenderingEngine">
            <summary>
            Defines the interface which must be implemented by 
            every rendering class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting two PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="pt1">PointF structure that represents the first point to connect.</param>
            <param name="pt2">PointF structure that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line connecting the two points specified by coordinate pairs.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="x1">x-coordinate of the first point.</param>
            <param name="y1">y-coordinate of the first point.</param>
            <param name="x2">x-coordinate of the second point.</param>
            <param name="y2">y-coordinate of the second point.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttr">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by 
            a pair of coordinates, a height, and a width.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of PointF structures 
            using a specified tension. The drawing begins offset from 
            the beginning of the array.
            </summary>
            <param name="pen">Pen object that determines the color, width, and height of the curve.</param>
            <param name="points">Array of PointF structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">Width of the rectangle to draw.</param>
            <param name="height">Height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a polygon defined by an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the polygon.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the location of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string at the specified location with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">A Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">The width of the rectangle to draw.</param>
            <param name="height">The height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws a GraphicsPath object.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the path.</param>
            <param name="path">GraphicsPath object to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, and a height and two radial lines.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the pie shape.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the arc.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="width">Width of the rectangle that defines the ellipse.</param>
            <param name="height">Height of the rectangle that defines the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Draws the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="rect">RectangleF structure that specifies the location and size of the drawn image.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse defined by a bounding RectangleF.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="rect">RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a series of line segments that connect an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line segments.</param>
            <param name="points">Array of PointF structures that represent the points to connect.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle 
            specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Fills the interior of a GraphicsPath object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="path">GraphicsPath object that represents the path to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Fills the interior of a GraphicsPath object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="path">GraphicsPath object that represents the path to fill.</param>
            <param name="angle">The angle by which this path has been rotated.</param>
            <param name="useBrushOffset">Determines if the offset of the brush transformation
            matrix should be used to position the gradient.</param>
            <param name="circularFill">Determines if this path is a circle.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
            <summary>
            Fills the interior of a Region object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="region">Region object that represents the area to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of a rectangle specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="width">Width of the rectangle to fill.</param>
            <param name="height">Height of the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by PointF structures .
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a pie section defined by an ellipse 
            specified by a pair of coordinates, a width, and a height 
            and two radial lines.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the second side of the pie section.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text.</param>
            <param name="stringFormat">StringFormat object that represents formatting information, such as line spacing, for the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.MeasureString(System.String,System.Drawing.Font)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.Save">
            <summary>
            Saves the current state of this Graphics object and identifies the saved state with a GraphicsState object.
            </summary>
            <returns>This method returns a GraphicsState object that represents the saved state of this Graphics object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.Restore(System.Drawing.Drawing2D.GraphicsState)">
            <summary>
            Restores the saved state of graphics object.
            </summary>
            <param name="gstate">State to restore.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.ResetClip">
            <summary>
            Resets the clip region of this Graphics object to an infinite region.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this Graphics object to the rectangle specified by a RectangleF structure.
            </summary>
            <param name="rect">RectangleF structure that represents the new clip region.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
            <summary>
            Sets the clipping region of this Graphics object to the result of the 
            specified operation combining the current clip region and the 
            specified GraphicsPath object.
            </summary>
            <param name="path">GraphicsPath object to combine.</param>
            <param name="combineMode">Member of the CombineMode enumeration that specifies the combining operation to use.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.TranslateTransform(System.Single,System.Single)">
            <summary>
            Prepends the specified translation to the transformation matrix of this Graphics object.
            </summary>
            <param name="dx">x component of the translation.</param>
            <param name="dy">y component of the translation.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.BeginSelection(System.String,System.String)">
            <summary>
            This method starts Selection mode
            </summary>
            <param name="hRef">The location of the referenced object, expressed as a URI reference.</param>
            <param name="title">Title which could be used for tooltips.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IGaugeRenderingEngine.EndSelection">
            <summary>
            This method stops Selection mode
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.IGaugeRenderingEngine.Transform">
            <summary>
            Gets or sets the world transformation for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.IGaugeRenderingEngine.SmoothingMode">
            <summary>
            Gets or sets the rendering quality for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.IGaugeRenderingEngine.TextRenderingHint">
            <summary>
            Gets or sets the rendering mode for text associated with this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.IGaugeRenderingEngine.Clip">
            <summary>
            Gets or sets a Region object that limits the drawing region of this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.IGaugeRenderingEngine.Graphics">
            <summary>
            Reference to the Graphics object
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.IGaugeRenderingEngine.IsClipEmpty">
            <summary>
            Gets a value indicating whether the clipping region of this Graphics object is empty.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RenderingEngine.shadowDrawingMode">
            <summary>
            Indicates that chart element shadow is drawn.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting two PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="pt1">PointF structure that represents the first point to connect.</param>
            <param name="pt2">PointF structure that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line connecting the two points specified by coordinate pairs.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="x1">x-coordinate of the first point.</param>
            <param name="y1">y-coordinate of the first point.</param>
            <param name="x2">x-coordinate of the second point.</param>
            <param name="y2">y-coordinate of the second point.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttr">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by 
            a pair of coordinates, a height, and a width.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of PointF structures 
            using a specified tension. The drawing begins offset from 
            the beginning of the array.
            </summary>
            <param name="pen">Pen object that determines the color, width, and height of the curve.</param>
            <param name="points">Array of PointF structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">Width of the rectangle to draw.</param>
            <param name="height">Height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a polygon defined by an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the polygon.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the location of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string at the specified location with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">A Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">The width of the rectangle to draw.</param>
            <param name="height">The height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws a GraphicsPath object.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the path.</param>
            <param name="path">GraphicsPath object to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, and a height and two radial lines.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the pie shape.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the arc.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="width">Width of the rectangle that defines the ellipse.</param>
            <param name="height">Height of the rectangle that defines the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Draws the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="rect">RectangleF structure that specifies the location and size of the drawn image.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse defined by a bounding RectangleF.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="rect">RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a series of line segments that connect an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line segments.</param>
            <param name="points">Array of PointF structures that represent the points to connect.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle 
            specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Fills the interior of a GraphicsPath object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="path">GraphicsPath object that represents the path to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Fills the interior of a GraphicsPath object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="path">GraphicsPath object that represents the path to fill.</param>
            <param name="angle">The angle by which this path has been rotated.</param>
            <param name="useBrushOffset">Determines if the offset of the brush transformation
            matrix should be used to position the gradient.</param>		
            <param name="circularFill">Determines if this path is a circle.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
            <summary>
            Fills the interior of a Region object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="region">Region object that represents the area to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of a rectangle specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="width">Width of the rectangle to fill.</param>
            <param name="height">Height of the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by PointF structures .
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a pie section defined by an ellipse 
            specified by a pair of coordinates, a width, and a height 
            and two radial lines.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the second side of the pie section.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.SetGradient(System.Drawing.Color,System.Drawing.Color,Dundas.Gauges.WinControl.GradientType)">
            <summary>
            This method sets gradient type for SVG rendering
            </summary>
            <param name="firstColor">The first color used for gradient</param>
            <param name="secondColor">The second color used for gradient</param>
            <param name="gradientType">The gradient Type</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.Close">
            <summary>
            Close Svg File
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.TransformHueColor(System.Drawing.Color)">
            <summary>
            Transforms the hue color.
            </summary>
            <param name="hueColor">The hue color.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.StartHotRegion(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            This method starts SVG Selection mode
            </summary>
            <param name="obj">The object for which we are starting the selection.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.EndHotRegion">
            <summary>
            This method stops SVG Selection mode
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text.</param>
            <param name="stringFormat">StringFormat object that represents formatting information, such as line spacing, for the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.MeasureString(System.String,System.Drawing.Font)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.Save">
            <summary>
            Saves the current state of this Graphics object and identifies the saved state with a GraphicsState object.
            </summary>
            <returns>This method returns a GraphicsState object that represents the saved state of this Graphics object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.Restore(System.Drawing.Drawing2D.GraphicsState)">
            <summary>
            Restores the state of this Graphics object to the state represented by a GraphicsState object.
            </summary>
            <param name="gstate">GraphicsState object that represents the state to which to restore this Graphics object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.ResetClip">
            <summary>
            Resets the clip region of this Graphics object to an infinite region.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this Graphics object to the rectangle specified by a RectangleF structure.
            </summary>
            <param name="rect">RectangleF structure that represents the new clip region.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.SetTitle(System.String)">
            <summary>
            Set Title for SVG Document
            </summary>
            <param name="title">Title Text</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
            <summary>
            Sets the clipping region of this Graphics object to the result of the 
            specified operation combining the current clip region and the 
            specified GraphicsPath object.
            </summary>
            <param name="path">GraphicsPath object to combine.</param>
            <param name="combineMode">Member of the CombineMode enumeration that specifies the combining operation to use.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.TranslateTransform(System.Single,System.Single)">
            <summary>
            Prepends the specified translation to the transformation matrix of this Graphics object.
            </summary>
            <param name="dx">x component of the translation.</param>
            <param name="dy">y component of the translation.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.BeginSelection(System.String,System.String)">
            <summary>
            This method starts Selection mode
            </summary>
            <param name="hRef">The location of the referenced object, expressed as a URI reference.</param>
            <param name="title">Title which could be used for tooltips.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RenderingEngine.EndSelection">
            <summary>
            This method stops Selection mode
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RenderingEngine.RenderingObject">
            <summary>
            Gets current rendering object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RenderingEngine.ActiveRenderingType">
            <summary>
            Gets and sets active rendering type.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RenderingEngine.TextRenderingHint">
            <summary>
            Gets or sets the rendering mode for text associated with this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RenderingEngine.Transform">
            <summary>
            Gets or sets the world transformation for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RenderingEngine.SmoothingMode">
            <summary>
            Gets or sets the rendering quality for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RenderingEngine.Clip">
            <summary>
            Gets or sets a Region object that limits the drawing region of this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RenderingEngine.IsClipEmpty">
            <summary>
            Gets a value indicating whether the clipping region of this Graphics object is empty.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RenderingEngine.Graphics">
            <summary>
            Reference to the Graphics object
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.HistoryEntry">
            <summary>
            HistoryEntry class represents data point as date and value pair.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HistoryEntry.timeStamp">
            <summary>
            DateTime part of current HistoryEntry instance
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HistoryEntry.value">
            <summary>
            Value part of current HistoryEntry instance
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryEntry.#ctor">
            <summary>
            Initializes a new instance of the HistoryEntry class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryEntry.#ctor(System.DateTime,System.Double)">
            <summary>
            Initializes a new instance of the HistoryEntry class.
            </summary>
            <param name="timeStamp">The time stamp for the new instance.</param>
            <param name="value">The Value for the new instance.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryEntry.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type
            </summary>
            <param name="obj">An object to compare with this instance. </param>
            <returns>A 32-bit signed integer that indicates the relative order of the comparands</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryEntry.Clone">
            <summary>
            Creates a new object that is a copy of the current instance
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HistoryEntry.TimeStamp">
            <summary>
            Gets and sets the Date of the current HistoryEntry instance
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HistoryEntry.Value">
            <summary>
            Gets and sets the Value of the current HistoryEntry instance
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.HistoryCollection">
            <summary>
            The HistoryCollection class implements collection of HistoryEntry objects. 
            This class implements the history database of the IValueProvider objects.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HistoryCollection.truncatedTicks">
            <summary>
            Accumulates truncated Date ticks.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HistoryCollection.accumulatedValue">
            <summary>
            Accumulates truncated integral value against ticks.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HistoryCollection.parent">
            <summary>
            The parent ValueBase object of this collection.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.#ctor(Dundas.Gauges.WinControl.ValueBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Gauges.WinControl.HistoryCollection"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.OnClear">
            <summary>
            Overrides CollectionBase.OnClear(). Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            Overrides CollectionBase.OnRemove( int, object) in order
            to accumulate ticks and values.
            </summary>
            <param name="index">Index of the element that will be removed</param>
            <param name="value">Object that will be removed.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.Add(System.DateTime,System.Double)">
            <summary>
            Adds new HistoryEntry instance in the collection
            </summary>
            <param name="timeStamp">Time stamp of the new value.</param>
            <param name="value">Value to be added</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.LoadEntries(Dundas.Gauges.WinControl.HistoryCollection)">
            <summary>
            Loads history entries from another history to this history.
            </summary>
            <param name="sourceHistory">A reference to <see cref="T:Dundas.Gauges.WinControl.HistoryCollection"/>
            representing the source history collection.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.Truncate(Dundas.Gauges.WinControl.GaugeDuration)">
            <summary>
            Truncates <see cref="T:Dundas.Gauges.WinControl.HistoryCollection"/> depends on <see cref="T:Dundas.Gauges.WinControl.GaugeDuration"/>.
            </summary>
            <param name="d"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.Seek(System.DateTime)">
            <summary>
            Searches <see cref="T:Dundas.Gauges.WinControl.HistoryEntry"/> element with specified time stamp. 
            If the search is not successful the result is -1.
            </summary>
            <param name="timeStamp">Time stamp to be searched.</param>
            <returns>Returns -1 if not element is not found, otherwise the 
            index of the element in the collection.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.Locate(System.DateTime)">
            <summary>
            Searches <see cref="T:Dundas.Gauges.WinControl.HistoryEntry"/> element with specified date. 
            If the search is not successful the result is the index of 
            the <see cref="T:Dundas.Gauges.WinControl.HistoryEntry"/> element with the biggest date.
            </summary>
            <param name="timeStamp">The time stamp to be searched</param>
            <returns>Index of the element in the collection</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.SearchInternal(System.DateTime,System.Boolean)">
            <summary>
            Searches in the collection <see cref="T:Dundas.Gauges.WinControl.HistoryEntry"/> element with specified date.
            </summary>
            <param name="timeStamp">The time stamp for searching.</param>
            <param name="exact">Flag to perform exact search.</param>
            <returns>Returns index of the element if found, 
            or nearest bigger element if not found but exact is false, 
            or -1 if not found but exact is true</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.Select">
            <summary>
            Returns all collection elements into HistoryEntry[] array.
            </summary>
            <returns>The HistoryEntry[] array which contain the collection elements</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.Select(System.DateTime)">
            <summary>
            Returns all collection elements into HistoryEntry[] array 
            with HistoryEntry object which Date part is after specified date.
            </summary>
            <param name="timeStamp">Time stamp for selection</param>
            <returns>The HistoryEntry[] array with HistoryEntry.TimeStamp 
            objects after specified date.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.Select(System.DateTime,System.DateTime)">
            <summary>
            Returns all collection elements into HistoryEntry[] array 
            with HistoryEntry objects that Date part is between two dates.
            </summary>
            <param name="fromDate">The low date bound</param>
            <param name="toDate">The high date bound</param>
            <returns>The selected HistoryEntry[] array.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.Select(System.Int32)">
            <summary>
            Returns all collection elements into HistoryEntry[] array 
            with HistoryEntry objects that index is after specified index point.
            </summary>
            <param name="fromPoint">The start index.</param>
            <returns>The selected HistoryEntry[] array.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.Select(System.Int32,System.Int32)">
            <summary>
            Returns all collection elements into HistoryEntry[] array 
            with HistoryEntry objects that index is between two specified index point.
            </summary>
            <param name="fromPoint">The start index</param>
            <param name="toPoint">The end index</param>
            <returns>The selected HistoryEntry[] array.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.Select(Dundas.Gauges.WinControl.GaugeDuration,System.DateTime)">
            <summary>
            Returns all collection elements into HistoryEntry[] array 
            with HistoryEntry objects selected by specified GaugeDuration from currentDate point.
            </summary>
            <param name="duration">The GaugeDuration for select</param>
            <param name="currentDate">The date point for selection</param>
            <returns>The selected HistoryEntry[] array.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.ToDataTable">
            <summary>
            Converts all collection content in to DateTable object
            </summary>
            <returns>The DateTable object which contain this collection 
            content information.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.ToDataTable(System.DateTime)">
            <summary>
            Converts the collection content in to DateTable 
            object by specified DateTime point.
            </summary>
            <param name="toPoint">The DateTime point for selection</param>
            <returns>The DateTable object which contain this 
            collection content information.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.ToDataTable(System.Int32)">
            <summary>
            Converts the collection content in to DateTable 
            object by specified index.
            </summary>
            <param name="toPoint">Start index for selection</param>
            <returns>The DateTable object which contain this 
            collection content information.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HistoryCollection.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HistoryCollection.Item(System.Int32)">
            <summary>
            Gets HistoryEntry reference which corresponds to the provided index.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HistoryCollection.Top">
            <summary>
            Gets the last element in the collection.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HistoryCollection.AccumulatedValue">
            <summary>
            Gets the current AccumulatedValue integral value.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.NumericRangeCollection">
            <summary>
            Collection of <b>NumericRange</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.NumericRange"/>
            </summary>
            <remarks>
            This collection is exposed as the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Ranges"/> 
            property of <see cref="T:Dundas.Gauges.WinControl.NumericIndicator"/> objects.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericRangeCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericRangeCollection.Add(System.String)">
            <summary>
            Used by <b>NumericRangeCollection</b> to add an item to the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.NumericRangeCollection.Remove(Dundas.Gauges.WinControl.NumericRange)"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.NumericRange"/> object to be added 
            to the collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.NumericRange"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. Also, 
            the <i>name</i> argument is the <b>Name</b> property of the object 
            being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericRangeCollection.Add(Dundas.Gauges.WinControl.NumericRange)">
            <summary>
            Adds a <b>NumericRange</b> object to the end of the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.NumericRangeCollection.Remove(Dundas.Gauges.WinControl.NumericRange)"/>
            <seealso cref="T:Dundas.Gauges.WinControl.NumericRange"/>
            </summary>
            <param name="value">
            The <see cref="T:Dundas.Gauges.WinControl.NumericRange"/> object to be added to 
            the collection.
            </param>
            <returns>
            Returns the position in the collection of the newly added object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericRangeCollection.Remove(Dundas.Gauges.WinControl.NumericRange)">
            <summary>
            Removes the specified <b>NumericRange</b> object from the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.NumericRangeCollection.Add(System.String)"/>
            <seealso cref="T:Dundas.Gauges.WinControl.NumericRange"/>
            </summary>
            <param name="value">
            <see cref="T:Dundas.Gauges.WinControl.NumericRange"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericRangeCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericRangeCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericRangeCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns the NumericRange object
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericRangeCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>NumericRange</b> object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.HotRegion">
            <summary>
            This class presents item in 
            the collection of hot regions.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HotRegion.boundingRectangle">
            <summary>
            The bound rectangle of this element
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HotRegion.selectedObject">
            <summary>
            The reference to the element.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HotRegion.circularPinPoint">
            <summary>
            Pin point for circular gauge. It is used to calculate value of scale from absolute point.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HotRegion.relMatrix">
            <summary>
            Matrix for conversion from absolute to relative coord system.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HotRegion.absMatrix">
            <summary>
            Matrix for conversion from relative to absolute coord system.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HotRegion.pointsRect">
            <summary>
            Temporary array of PointF used by transformations.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HotRegion.pointsPoint">
            <summary>
            Temporary array of PointF used by transformations.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HotRegion.#ctor">
            <summary>
            Initializes a new instance of HotRegion class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HotRegion.BuildMatrices(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Generate relative and absolute matrices.
            </summary>
            <param name="g">The GaugeGraphics reference.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HotRegion.GetAbsRectangle(System.Drawing.RectangleF)">
            <summary>
            Converts relative rectangle to absolute.
            </summary>
            <param name="relRect">The relative rectangle.</param>
            <returns>The absolute rectangle.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HotRegion.GetRelRectangle(System.Drawing.RectangleF)">
            <summary>
            Converts absolute rectangle to relative.
            </summary>
            <param name="absRect">The absolute rectangle.</param>
            <returns>The relative rectangle.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HotRegion.GetAbsPoint(System.Drawing.PointF)">
            <summary>
            Converts relative point to absolute.
            </summary>
            <param name="relPoint">relative point.</param>
            <returns>absolute point</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HotRegion.GetRelPoint(System.Drawing.PointF)">
            <summary>
            Converts absolute point to relative.
            </summary>
            <param name="absPoint">absolute point.</param>
            <returns>relative point.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HotRegion.GetAbsSize(System.Drawing.SizeF)">
            <summary>
            Converts relative size to absolute.
            </summary>
            <param name="relSize">relative size.</param>
            <returns>absolute size.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HotRegion.GetRelSize(System.Drawing.SizeF)">
            <summary>
            Converts absolute size to relative.
            </summary>
            <param name="absSize">absolute size.</param>
            <returns>relative size.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HotRegion.Paths">
            <summary>
            Region is Graphics path.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HotRegion.BoundingRectangle">
            <summary>
            Bounding Rectangle of an shape.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HotRegion.SelectedObject">
            <summary>
            Object which is presented with this region.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HotRegion.PinPoint">
            <summary>
            Gets the pinpoint for the gauge.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HotRegion.AbsMatrix">
            <summary>
            Gets the matrix for conversion from relative to absolute coord system.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HotRegion.RelMatrix">
            <summary>
            Gets the matrix for conversion from absolute to relative coord system.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.HotRegionList">
            <summary>
            Represents collection of hot regions.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HotRegionList.list">
            <summary>
            ArrayList with HotRegion references
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HotRegionList.#ctor(System.Object)">
            <summary>
            Initializes a new instance of HotRegion class.
            </summary>
            <param name="parent">The parent object reference</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HotRegionList.LocateObject(System.Object)">
            <summary>
            Searches and returns HotRegion element which corresponds to selctedObject.
            </summary>
            <param name="selectedObject"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HotRegionList.SetHotRegion(System.Object,System.Drawing.Drawing2D.GraphicsPath[])">
            <summary>
            Adds/Replaces HotRegion into the List
            </summary>
            <param name="selectedObject"></param>
            <param name="paths"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HotRegionList.SetHotRegion(System.Object,System.Drawing.PointF,System.Drawing.Drawing2D.GraphicsPath[])">
            <summary>
            Adds/Replaces HotRegion into the List
            </summary>
            <param name="selectedObject"></param>
            <param name="pinPoint"></param>
            <param name="paths"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HotRegionList.CheckHotRegions(System.Int32,System.Int32)">
            <summary>
            This method checks if any hot region element contains point (x,y).
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HotRegionList.Clear">
            <summary>
            Clears the list of hot regions
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HotRegionList.List">
            <summary>
            Gets the array with hot regions
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CommonElements">
            <summary>
            This class contains reference to the GaugeCore, GaugeGraphics
            and other common classes.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CommonElements.container">
            <summary>
            Service Container
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CommonElements.processModePaint">
            <summary>
            Indicates painting mode
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CommonElements.processModeRegions">
            <summary>
            Indicates selection mode
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CommonElements.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Initializes a new instance of CommonElements class.
            </summary>
            <param name="container">Service container.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CommonElements.InvokePrePaint(System.Object)">
            <summary>
            Invokes before paint control event
            </summary>
            <param name="sender">The object to be painted</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CommonElements.InvokePostPaint(System.Object)">
            <summary>
            Invokes after paint control event 
            </summary>
            <param name="sender">The object just painted</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CommonElements.ParseDouble(System.String)">
            <summary>
            Converts string to double.
            </summary>
            <param name="stringToParse">String to convert.</param>
            <returns>Double result.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CommonElements.ParseFloat(System.String)">
            <summary>
            Converts string to double.
            </summary>
            <param name="stringToParse">String to convert.</param>
            <returns>Double result.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CommonElements.Size">
            <summary>
            Gets the Size of the Gauge
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CommonElements.ProcessModePaint">
            <summary>
            True if painting mode is active
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CommonElements.ProcessModeRegions">
            <summary>
            True if Hot region or image maps mode is active
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CommonElements.ImageLoader">
            <summary>
            Gets the object reference to the ImageLoader
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CommonElements.GaugeCore">
            <summary>
            Gets the object reference to the GaugeCore
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CommonElements.GaugeContainer">
            <summary>
            Gets the object reference to the GaugeContainer
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CommonElements.Graph">
            <summary>
            Gets the object reference to the GaugeGraphics
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CommonElements.ObjectLinker">
            <summary>
            Gets the object reference to the ObjectLinker
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CommonElements.Width">
            <summary>
            Width of the Gauge
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CommonElements.Height">
            <summary>
            Height of the Gauge 
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ObjectLinker">
            <summary>
            Helper class which handles with Parent NamedElement which exposes parent coordinate system.
            It's about Parent string property of all renderable objects.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ObjectLinker.invalidated">
            <summary>
            Flags which determine if there is changes if Gauge object's structure.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ObjectLinker.elements">
            <summary>
            Hashtable with IRenderable, NamedElement object references. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ObjectLinker.#ctor(System.Object)">
            <summary>
            Initializes a new instance of GaugeObject class.
            </summary>
            <param name="parent">The object reference to the parent element</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ObjectLinker.Invalidate">
            <summary>
            Sets invalidated flag to true. Called from GaugeCore during invalidating.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ObjectLinker.CollectValues">
            <summary>
            Collects all combination of names of elements in collections
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ObjectLinker.GetObjectNames(System.Object)">
            <summary>
            Collect the names of the objects that can be parents of the renderable gauge elements.
            Used in design time to show Names in list box.
            </summary>
            <param name="thisObject">the Element in edit mode</param>
            <returns>The names of the objects</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ObjectLinker.GetElement(System.String)">
            <summary>
            Returns NamedElement by name.
            </summary>
            <param name="name">The name of the NamedElement</param>
            <returns>The NamedElement</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ObjectLinker.IsParentElementValid(Dundas.Gauges.WinControl.IRenderable,System.Object,System.Boolean)">
            <summary>
            Checks if an IRenderable object reference can be used as Parent of defined object.
            </summary>
            <param name="r">The IRenderable object to check if can be used as Parent</param>
            <param name="startObject">The object reference which will use this IRenderable object as parent</param>
            <param name="raiseException">True to raise an exception</param>
            <returns>True if check is successful</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ObjectLinker.Elements">
            <summary>
            Gets the hashtable with IRenderable, NamedElement object references
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.IImageMapProvider">
            <summary>
            This interface provides the ability to access to the ImageMap information.
            Used in Gauge Web Component.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IImageMapProvider.GetToolTip">
            <summary>
            Returns the toop tip string.
            </summary>
            <returns>Returns the toop tip string.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IImageMapProvider.GetHref">
            <summary>
            Returns HRef string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IImageMapProvider.GetMapAreaAttributes">
            <summary>
            Returns additional map area attributes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularGaugeCollection">
             <summary>
             Collection of <b>CircularGauge</b> objects.
             <seealso cref="T:Dundas.Gauges.WinControl.CircularGauge"/>
             </summary>
             <remarks>
             Exposed as the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.CircularGauges"/> property.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGaugeCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGaugeCollection.Add(System.String)">
            <summary>
            Used by <b>CircularGaugeCollection</b> to add an item to the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularGauge"/>
            <seealso cref="M:Dundas.Gauges.WinControl.CircularGaugeCollection.Remove(Dundas.Gauges.WinControl.CircularGauge)"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> object to be added to the 
            collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. 
            The name argument is the <b>Name</b> property of the object being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGaugeCollection.Add(Dundas.Gauges.WinControl.CircularGauge)">
            <summary>
            Adds a <b>CircularGauge</b> object to the container's collection.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularGauge"/>
            <seealso cref="M:Dundas.Gauges.WinControl.CircularGaugeCollection.Remove(Dundas.Gauges.WinControl.CircularGauge)"/>
            </summary>
            <param name="value">
            <b>CircularGauge</b> object to be added to the collection. 
            </param>
            <returns>
            Position in the collection of the added object.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGaugeCollection.Remove(Dundas.Gauges.WinControl.CircularGauge)">
            <summary>
            Removes the specified <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> object from the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.CircularGaugeCollection.Add(Dundas.Gauges.WinControl.CircularGauge)"/>
            </summary>
            <param name="value">
            Object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGaugeCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularGaugeCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularGaugeCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns the CircularGauge object
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularGaugeCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns the <b>CircularGauge</b> object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ImageLoader">
            <summary>
            Loads images from files and Urls. Loaded images are stored in cache for future use.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageLoader.#ctor">
            <summary>
            Default constructor is not accessible.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageLoader.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Default public constructor.
            </summary>
            <param name="container">Service container.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageLoader.GetService(System.Type)">
            <summary>
            Returns Image Loader service object
            </summary>
            <param name="serviceType">Requested service type.</param>
            <returns>Image Loader service object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageLoader.Dispose">
            <summary>
            Dispose images in the hashtable
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageLoader.LoadImage(System.String)">
            <summary>
            Loads image from URL. Checks if image already loaded (cached).
            </summary>
            <param name="imageURL">Image URL name.</param>
            <returns>Image object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageLoader.LoadImage(System.String,System.Boolean)">
            <summary>
            Loads image from URL. Checks if image already loaded (cached).
            </summary>
            <param name="imageURL">Image URL name</param>
            <param name="saveImage">True if loaded image should be saved in cache</param>
            <returns>Image object</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageLoader.LoadFromFile(System.String)">
            <summary>
            Helper function which loads image from file.
            </summary>
            <param name="fileName">File name.</param>
            <returns>Loaded image or null.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.EmptyPointConverter">
            <summary>
            The purpose of this class is to extend the ExpandableObjectConverter in order to prevent it displaying the class name in the properties window.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BaseLocationUIEditor.#ctor">
            <summary>
            Initialize new instance of BaseLocationUIEditor class
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LocationUIControl">
            <summary>
            The LocationUIControl class displays drop down user control
            to edit location in property browser.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LocationUIControl.#ctor(Dundas.Gauges.WinControl.GaugeLocation,System.Single,System.Single,System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Initialize new instance of LocationUIControl Class
            </summary>
            <param name="editValue">GaugeLocation to edit</param>
            <param name="XBound">X bound</param>
            <param name="YBound">Y bound</param>
            <param name="context">ITypeDescriptorContext provided in design time</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LocationUIControl.InitializeComponent">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LocationUIControl.SetValue(Dundas.Gauges.WinControl.GaugeLocation)">
            <summary>
            Sets the edit result
            </summary>
            <param name="value">New GaugeLocation</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LocationUIControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the control
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LocationUIControl.SetValueByPos(System.Int32,System.Int32)">
            <summary>
            Converts relative point to GaugeLocation
            </summary>
            <param name="X"></param>
            <param name="Y"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LocationUIControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles OnMouseDown event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LocationUIControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles OnMouseMove event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LocationUIControl.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Handles keyboard
            </summary>
            <param name="keyData"></param>
            <returns>True if key is processed</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LocationUIControl.EditValue">
            <summary>
            Gets result of editing
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SizeUIControl">
            <summary>
            The SizeUIControl class displays drop down user control
            to edit GaugeSize in property browser.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SizeUIControl.#ctor(Dundas.Gauges.WinControl.GaugeSize,System.Single,System.Single,System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Initializes new instance of SizeUIControl Class
            </summary>
            <param name="editValue">GaugeSize to edit</param>
            <param name="XBound">Width bound </param>
            <param name="YBound">Height bound</param>
            <param name="context">Design time ITypeDescriptorContext</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SizeUIControl.SetValue(Dundas.Gauges.WinControl.GaugeLocation)">
            <summary>
            Sets the edit result
            </summary>
            <param name="value">new GaugeLocation</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SizeUIControl.EditValue">
            <summary>
            Gets the result of editing 
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ValueBase">
            <summary>
            ValueBase class is base class for InputValue and CalculatedValue 
            classes. The main functionality is - handling with data history
            monitoring value changes and raising events. 
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.IValueProvider">
            <summary>
            This interface provides the ability to access and change 
            a value provider object. The ValueBase class implements this interface.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IValueProvider.AttachConsumer(Dundas.Gauges.WinControl.IValueConsumer)">
            <summary>
            Registers new consumer of value data. 
            </summary>
            <param name="consumer">The consumer to register</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IValueProvider.DetachConsumer(Dundas.Gauges.WinControl.IValueConsumer)">
            <summary>
            Unregister previous registered consumer.
            </summary>
            <param name="consumer">The consumer to unregister</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IValueProvider.GetValue">
            <summary>
            Returns the current output value of this  IValueProvider instance.
            </summary>
            <returns>The current output value.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IValueProvider.GetDate">
            <summary>
            Returns the current output date stamp of 
            this  IValueProvider instance.
            </summary>
            <returns>The current output date stamp.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IValueProvider.GetValueProviderName">
            <summary>
            Returns the name of this IValueProvider.
            </summary>
            <returns>The name of this IValueProvider</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IValueProvider.GetData(Dundas.Gauges.WinControl.GaugeDuration,System.DateTime)">
            <summary>
            Returns data history of this IValueProvider and passes 
            the period needed and DateTime point.
            The IValueProvider uses this information to modify his history length.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IValueProvider.GetPlayBackMode">
            <summary>
            Returns true if this IValueProvider is in PlayBack mode.
            </summary>
            <returns>True if this IValueProvider is in PlayBack mode.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.IValueProvider.GetProvderState">
            <summary>
            Returns current ValueState of this IValueProvider.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ValueBase.historyDept">
            <summary>
            Exposes external history duration
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ValueBase.queryDept">
            <summary>
            Represents internal history duration.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ValueBase.valueLimit">
            <summary>
            Represents value limit for raising ValueLimitOverflow event
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ValueBase.inputValue">
            <summary>
            Represents current input value of ValueBase object
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ValueBase.inputDate">
            <summary>
            Represents current input date of ValueBase object
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ValueBase.outputValue">
            <summary>
            Represents current output value of ValueBase object
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ValueBase.outputDate">
            <summary>
            Represents current output date of ValueBase object
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ValueBase.history">
            <summary>
            Keeps history.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ValueBase.consumers">
            <summary>
            List with data consumers.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ValueBase.provderState">
            <summary>
            Keeps current <b>ProviderState</b> state. Possible states are
            --- Suspended, Playback, DataLoading, Interactive. --
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.#ctor">
            <summary>
            Initializes a new instance of ValueBase class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.ToString">
            <summary>
            Returns a string representation of the value's name.
            </summary>
            <returns>A string that represents the object's name.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.Reset">
            <summary>
            Resets the value, clears data history and reset consumers.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.SetValueInternal(System.Double)">
            <summary>
            Sets the value of the <see cref="T:Dundas.Gauges.WinControl.InputValue"/> element and records into the data history 
            under the current (system) date and time.
            </summary>
            <param name="value">Value to be set.</param>
            <remarks>
            You can use the <see cref="P:Dundas.Gauges.WinControl.InputValue.Value"/> property to achieve the same result.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.SetValueInternal(System.Double,System.DateTime)">
            <summary>
            Sets the value of the <see cref="T:Dundas.Gauges.WinControl.InputValue"/> element and records into the data history, 
            using the given date and time and performs calculations. 
            </summary>
            <param name="value">Value to be set.</param>
            <param name="timeStamp">Date and time for the historical record.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.GetValue">
            <summary>
            Returns the value.
            </summary>
            <returns>A double that represents the current output value.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.ClearUpHistory">
            <summary>
            Check and truncates history according history depth.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.AddToHistory">
            <summary>
            Appends to history the current inputValue and inputDate
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.AddToHistoryInt(System.Double,System.DateTime)">
            <summary>
            Appends to history
            </summary>
            <param name="value">Value to be added</param>
            <param name="timeStamp">The time stamp of the value.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.OnValueLimitOverflow(Dundas.Gauges.WinControl.ValueChangedEventArgs)">
            <summary>
            Fires OnValueLimitOverflow event
            </summary>
            <param name="e">ValueChangedEventArgs to pass as event parameter</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.CheckLimit">
            <summary>
            Checks value if exceed the valueLimit.
            Note: The method should be called before registering value into history.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.OnNameChanged">
            <summary>
            Overrides NamedElement.OnNameChanged(). Informs all consumers that the 
            object has changed its name.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.OnRemove">
            <summary>
            Overrides NamedElement.OnRemove().Informs all consumers that the object 
            has been removed from its parent collection. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.OnAdded">
            <summary>
            Overrides NamedElement.OnAdded(). Notifies all gauge elements for new value object. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.Recalculate(System.Double,System.DateTime)">
            <summary>
            Performs recalculation based on given input value/date pair.
            </summary>
            <param name="value">Input value</param>
            <param name="timeStamp">Input DateTime</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.CalculateValue(System.Double,System.DateTime)">
            <summary>
            Performs calculation based on given input value/date pair. 
            This method should be overridden by CalculatedValue object.
            </summary>
            <param name="value">The input value</param>
            <param name="timeStamp">The input DateTime</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.RefreshConsumers">
            <summary>
            Forces consumers to read output data again.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.Invalidate">
            <summary>
            Simulates output value/date change.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.OnDispose">
            <summary>
            OnDispose implementation; Clears data.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.Dundas#Gauges#WinControl#IValueProvider#AttachConsumer(Dundas.Gauges.WinControl.IValueConsumer)">
            <summary>
            Registers new consumer of value data. 
            </summary>
            <param name="consumer">The consumer to register</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.Dundas#Gauges#WinControl#IValueProvider#DetachConsumer(Dundas.Gauges.WinControl.IValueConsumer)">
            <summary>
            Unregister previous registered consumer.
            </summary>
            <param name="consumer">The consumer to unregister</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.Dundas#Gauges#WinControl#IValueProvider#GetValue">
            <summary>
            Returns the current output value of this  instance.
            </summary>
            <returns>The current output value.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.Dundas#Gauges#WinControl#IValueProvider#GetDate">
            <summary>
            Returns the current output date stamp of 
            this  instance.
            </summary>
            <returns>The current output date stamp.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.Dundas#Gauges#WinControl#IValueProvider#GetValueProviderName">
            <summary>
            Returns the name of current instance.
            </summary>
            <returns>The name of this ValueBase instance</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.Dundas#Gauges#WinControl#IValueProvider#GetData(Dundas.Gauges.WinControl.GaugeDuration,System.DateTime)">
            <summary>
            Returns data history of this IValueProvider and passes 
            the period needed and DateTime point.
            The ValueBase uses this information to modify the history length.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.Dundas#Gauges#WinControl#IValueProvider#GetPlayBackMode">
            <summary>
            Returns true if current instance is in PlayBack mode.
            </summary>
            <returns>True if current instance is in PlayBack mode.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.Dundas#Gauges#WinControl#IValueProvider#GetProvderState">
            <summary>
            Returns current ValueState of current instance.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueBase.CloneInternals(System.Object)">
            <summary>
            Initializes an object that is a copy of the current instance.
            </summary>
            <param name="copy">The object to initialize</param>
            <returns>Initialized copy of this current instance</returns>
        </member>
        <member name="E:Dundas.Gauges.WinControl.ValueBase.ValueChanged">
            <summary>
            Occurs when an input or playback value has changed.
            </summary>
        </member>
        <member name="E:Dundas.Gauges.WinControl.ValueBase.ValueLimitOverflow">
            <summary>
            Occurs when a value limit has overflowed.  The value limit is set by the InputValue.ValueLimit property.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ValueBase.History">
            <summary>
            Exposes the history collection.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ValueBase.Name">
            <summary>
            Represents the name of the value object. 
            </summary>
            <value>
            A string that represents the name of the value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ValueBase.Date">
            <summary>
            Represents the current date stamp of the value.
            </summary>
            <value>
            A <b>DateTime</b> object that represents the date/time stamp.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ValueBase.ValueLimit">
            <summary>
            Represents the limit for firing the <b>ValueLimitOverflow</b> event.		
            </summary>
            <value>
            A double that represents the limit at which point the 
            <b>ValueLimitOverflow</b> will be raised.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ValueBase.HistoryDeptInternal">
            <summary>
            Exposes private historyDepth value.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ValueBase.State">
            <summary>
            Exposes the provider state. Note that in playback mode current internal value state is  suspended.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ValueBase.IntState">
            <summary>
            Represents real value state for internal purposes.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ValueBase.IsPlayBackMode">
            <summary>
            Checks the current <b>ProviderState</b> and returns 
            <b>true</b> if the state is PlayBack. 
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ValueBase.IsEventsEnable">
            <summary>
            Checks current <b>ProviderState</b> and returns true is the state allows firing events
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValueMax">
            <summary>
            This class represents a maximum calculated value.
            </summary>
            <remarks>
            Maximum calculations have a period, which determines the range of data to be 
            used for the calculation. The period is always measured from the 
            present date/time, and goes back by the amount specified 
            by the <b>Period</b> and <b>PeriodType</b> properties.
            <p>
            A calculated value is owned by an <see cref="T:Dundas.Gauges.WinControl.InputValue"/> object, which has a 
            <see cref="P:Dundas.Gauges.WinControl.InputValue.CalculatedValues"/> collection.
            </p>	
            <p>
            Calculated values use the history of their input values as source data.
            </p>
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValue">
            <summary>
            A base class, used for the data engine which performs calculations.
            </summary>
            <remarks>
            It implements both <b>IValueConsumer</b> and <b>IValueProvider</b> interfaces. 
            In the Object model, this class is stored in the <b>CalculatedValues</b> collection 
            of <see cref="T:Dundas.Gauges.WinControl.InputValue"/> objects.
            <p>
            A calculated value is owned by an <see cref="T:Dundas.Gauges.WinControl.InputValue"/> object, which has a 
            <see cref="P:Dundas.Gauges.WinControl.InputValue.CalculatedValues"/> collection.
            </p>
            <p>
            Calculated values use the history of their input values as source data.
            </p>
            </remarks>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CalculatedValue.provider">
            <summary>
            Keeps reference to  provider.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CalculatedValue.timer">
            <summary>
            Used for autorefresh.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CalculatedValue.timerData">
            <summary>
            Used for autorefresh. Keeps and tracks timespans.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CalculatedValue.timerRefreshCall">
            <summary>
            Determine if calculations are performed under autorefresh mode or invoked by provider.
            If true, suppress restarting timer.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CalculatedValue.noMoreData">
            <summary>
            Flag which stops auto refreshes.  
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.OnDispose">
            <summary>
            Dispose implementation.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.InitTimer">
            <summary>
            Initializes timer, setups timer properties. The initialized timer is stopped.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.InitTimerData">
            <summary>
            Initializes the this.timerData field, interval part. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.StartTimer">
            <summary>
            Starts the timer in order to perform auto refreshes.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.StopTimer">
            <summary>
            Stops the timer.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.OnTimerRefresh(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Timer call back method, perform recurring recalculations, invoked by timer.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Object contain timer state.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.AttachToProvider">
            <summary>
            Perform attaching to input value provider by name.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.LocateProviderByName(System.String)">
            <summary>
            Locates value provider by name.
            </summary>
            <param name="name">Provider for locating.</param>
            <returns>Provider or null if not found.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.IsConnectedInCollecton">
            <summary>
            Checks if this instance is a member of collection and checks 
            if this collection has parent (e.g., collection is connected to the gauge control).
            </summary>
            <returns>Returns true is instance is part of the gauge</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.OnAdded">
            <summary>
            OnAdded into collection hook. The object tries to connect to provider.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.EndInit">
            <summary>
            Performs initialization.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.CloneInternals(System.Object)">
            <summary>
            Initialize cloning by copying/cloning internal fields.
            </summary>
            <param name="copy">Object to initialize.</param>
            <returns>Initialized object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.Recalculate(System.Double,System.DateTime)">
            <summary>
            Overrides ValueBase.Recalculate( double, DateTime) in order to clear noMoreData flag; 
            Performs recalculation based on given input value/date pair.
            </summary>
            <param name="value">Input value.</param>
            <param name="timeStamp">Input time stamp.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.CalculateValue(System.Double,System.DateTime)">
            <summary>
            Performs calculations when it is overridden. 
            Successors should modify input value and call 
            base.CalculateValue (value, date) to raise events and save in the history; 
            </summary>
            <param name="value">Input value</param>
            <param name="timeStamp">Input time stamp.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.Dundas#Gauges#WinControl#IValueConsumer#ProviderRemoved(Dundas.Gauges.WinControl.IValueProvider)">
            <summary>
            Invoked by provider when it is removed from the Gauge
            </summary>
            <param name="provider">Provider which is removed.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.Dundas#Gauges#WinControl#IValueConsumer#ProviderNameChanged(Dundas.Gauges.WinControl.IValueProvider)">
            <summary>
            Invoked by provider when its name has changed.
            </summary>
            <param name="provider">Provider which its name has changed</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.Dundas#Gauges#WinControl#IValueConsumer#InputValueChanged(System.Object,Dundas.Gauges.WinControl.ValueChangedEventArgs)">
            <summary>
            Invoked by provider (through event handler, from different thread) when its value has changed.
            </summary>
            <param name="sender"><see cref="T:Dundas.Gauges.WinControl.IValueProvider"/> as sender</param>
            <param name="e"><see cref="T:Dundas.Gauges.WinControl.ValueChangedEventArgs"/> parameter which contain value, date and provider state.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.Dundas#Gauges#WinControl#IValueConsumer#GetProvider">
            <summary>
            Returns current attached provider. Can be null.
            </summary>
            <returns>Returns current attached provider.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.Dundas#Gauges#WinControl#IValueConsumer#Reset">
            <summary>
            Performs reset of the IValueConsumer. 
            All history will be erased and current values will be set to Double.NaN;
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValue.Dundas#Gauges#WinControl#IValueConsumer#Refresh">
            <summary>
            Forces consumers to read output data again.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValue.RefreshRate">
            <summary>
            The maximum amount of time that can elapse before the calculated value is refreshed. 
            <seealso cref="P:Dundas.Gauges.WinControl.CalculatedValue.RefreshRateType"/>
            </summary>
            <value>
            A double that represents the refresh rate. Defaults to not set (Double.NaN).
            </value>
            <remarks>
            This property determines how often the calculated values are recalculated. It will only 
            have an effect if its associated <b>InputValue</b> object has not had its value 
            changed for the given refresh rate, at which point recalculation occurs.
            <p>
            If the refresh rate is not set then the calculated value will not be 
            automatically recalculated. 
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValue.RefreshRateType">
            <summary>
            Gets or sets <see cref="P:Dundas.Gauges.WinControl.CalculatedValue.PeriodType"/> of the refresh rate. 
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.CalculatedValue.PeriodType"/> value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValue.Period">
            <summary>
            Gets or sets the period for calculations (i.e. their interval).
            <seealso cref="P:Dundas.Gauges.WinControl.CalculatedValue.PeriodType"/>
            </summary>
            <value>
            The period, used for the calculated value interval. Defaults to zero.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValue.PeriodType">
            <summary>
            Gets or sets <see cref="T:Dundas.Gauges.WinControl.DurationType"/> type of <see cref="P:Dundas.Gauges.WinControl.CalculatedValue.Period"/>.
            <seealso cref="P:Dundas.Gauges.WinControl.CalculatedValue.Period"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.DurationType"/> value that determines the period type.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValue.TypeName">
            <summary>
            Gets a string representation of the calculated value type. 
            </summary>
            <value>
            A string that represents the type of the calculated value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValue.BaseValueName">
            <summary>
            Gets or sets the name of the<see cref="T:Dundas.Gauges.WinControl.InputValue"/> or <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> 
            object to be linked to.
            </summary>
            <value>
            A string that represents the base value name.
            </value>
            <remarks>
            Usually this is the name of the associated input value, however, it can 
            also be the name of another calculated value object.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValue.Value">
            <summary>
            Represents the current value. 
            </summary>
            <value>
            A double that represents the current value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValue.Common">
            <summary>
            Gets and sets CommonElements object. 
            The setter is used to force attaching to input value.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValue.RequiresDistinctValues">
            <summary>
            If this property is true the value is calculated only id the new value is 
            different than the current (the value changes).
            Default value is <c>true</c>.
            </summary>
            <remarks>This property was introduced as a BUGFIX(SG)#7849.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValue.InputValueObj">
            <summary>
            Returns base ( parent ) InputValue 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueMax.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Gauges.WinControl.CalculatedValueMin"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueMax.CalculateValue(System.Double,System.DateTime)">
            <summary>
            Calculates maximum for specified GaugeDuration.
            </summary>
            <param name="value">The input value</param>
            <param name="timeStamp">The input time stamp.</param>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValueMaxConverter">
            <summary>
            Design time type converter of the CalculatedValueMin class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueMaxConverter.#ctor">
            <summary>
            Initializes a new instance of the ConverterLinear class.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.InputValue">
            <summary>
            <b>InputValue</b> represents an input value of the gauge container, 
            and has an associated history that stores previous values along with a time stamp.
            </summary>
            <remarks>
            These input values are stored in the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Values"/> 
            collection property, and can be used as a value source for pointers, ranges, and 
            indicators via their <b>ValueSource</b> property.
            <p>
            The advantage to using input values is that their historical data can be used for 
            playback, as well as calculated values. They also provide a data binding mechanism.
            </p>
            <p>
            An input value can be used to perform data binding with external data sources. Data 
            binding is performed at design-time using the <see cref="P:Dundas.Gauges.WinControl.InputValue.DataMember"/>, 
            <see cref="P:Dundas.Gauges.WinControl.InputValue.DataSource"/> and <see cref="P:Dundas.Gauges.WinControl.InputValue.DateFieldMember"/> properties, or can be 
            performed at run-time using the <see cref="M:Dundas.Gauges.WinControl.InputValue.DataBind"/> method.
            </p>
            <p>
            An input value can have one more associated <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> objects, 
            which are stored in the <see cref="P:Dundas.Gauges.WinControl.InputValue.CalculatedValues"/> collection property.
            </p>
            <p>
            The <see cref="P:Dundas.Gauges.WinControl.InputValue.DateFieldMember"/> property is that field that has the date of the 
            historical record, and the <see cref="P:Dundas.Gauges.WinControl.InputValue.ValueFieldMember"/> is that field that has the 
            value of the historical record.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.#ctor">
            <summary>
            Initializes a new <b>InputValue</b> instance.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.IncValue">
            <summary>
            Increments the current value by 1.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.IncValue(System.Double)">
            <summary>
            Increments the current <see cref="P:Dundas.Gauges.WinControl.InputValue.Value"/> by the specified increment.
            </summary>
            <param name="increment">The increment value.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.SetValue(System.Double)">
            <summary>
            Sets the value of the <see cref="T:Dundas.Gauges.WinControl.InputValue"/> element and records into the data history 
            under the current (system) date and time.
            </summary>
            <param name="value">Value to be set.</param>
            <remarks>
            You can use the <see cref="P:Dundas.Gauges.WinControl.InputValue.Value"/> property to achieve the same result.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.SetValue(System.Double,System.DateTime)">
            <summary>
            Sets the value of the <see cref="T:Dundas.Gauges.WinControl.InputValue"/> element and records into the data history, 
            using the given date and time. 
            </summary>
            <param name="value">Value to be set.</param>
            <param name="timeStamp">The time stamp of the value.</param>
        </member>
        <member name="F:Dundas.Gauges.WinControl.InputValue.playBackValue">
            <summary>
            InputValue - cloning which performs the playback.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.InputValue.playBackTimer">
            <summary>
            Playback timer.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.InputValue.playBackMarker">
            <summary>
            Pointer to history index where is current playback data.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.InputValue.speedMultiplier">
            <summary>
            Represents current speed multiplier.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.InputValue.pointersInitialized">
            <summary>
            Flag which shows if the data consumers are notified about playback start.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.InputValue.paused">
            <summary>
            Pause flag
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.InitTimer">
            <summary>
            Initialize playBackTimer instance. The timer is stopped.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.OnPlayBackRefreshInternal">
            <summary>
            Performs one step of playback. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.OnPlayBackRefresh(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Timer call back method, perform recurring recalculations, invoked by timer.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.PlaybackReverse(System.Single,System.Int32)">
            <summary>
            Performs playback.
            </summary>
            <param name="speedMultiplier"></param>
            <param name="numberOfRecords">The start point from the history. 
            Zero (0) is from beginning. The max is Data.Count</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.Playback(System.Single)">
            <summary>
            Stops current visualization and performs history playback 
            using the specified speed.
            <seealso cref="M:Dundas.Gauges.WinControl.InputValue.Stop"/>
            <seealso cref="M:Dundas.Gauges.WinControl.InputValue.Pause"/>
            <seealso cref="M:Dundas.Gauges.WinControl.InputValue.Resume"/>
            </summary>
            <param name="speedMultiplier">Represents the speed for playback. Less 
            than 1 performs playback slower than normal, and greater than 1 is 
            faster than normal.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.Playback(System.Single,System.DateTime)">
            <summary>
            Stops current visualization and performs history playback 
            using the given speed and start time.
            <seealso cref="M:Dundas.Gauges.WinControl.InputValue.Stop"/>
            <seealso cref="M:Dundas.Gauges.WinControl.InputValue.Pause"/>
            <seealso cref="M:Dundas.Gauges.WinControl.InputValue.Resume"/>
            </summary>
            <param name="speedMultiplier">Represents the speed for playback. Less 
            than 1 performs playback slower than normal, and greater than 1 is 
            faster than normal.</param>
            <param name="startTime">Represents the start point in the history.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.Playback(System.Single,System.Int32)">
            <summary>
            Stops current visualization and performs history playback 
            using the given speed and displaying the given number of historical records.
            <seealso cref="M:Dundas.Gauges.WinControl.InputValue.Stop"/>
            <seealso cref="M:Dundas.Gauges.WinControl.InputValue.Pause"/>
            <seealso cref="M:Dundas.Gauges.WinControl.InputValue.Resume"/> 
            </summary>
            <param name="speedMultiplier">Represents the speed for playback. Less 
            than 1 performs playback slower than normal, and greater than 1 is 
            faster than normal.</param>
            <param name="numberOfRecords">The number of historical 
            records to be played back.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.Stop">
            <summary>
            Stops playback mode if it is active, and switches to normal mode.
            <seealso cref="M:Dundas.Gauges.WinControl.InputValue.Playback(System.Single)"/>
            <seealso cref="M:Dundas.Gauges.WinControl.InputValue.Pause"/>
            <seealso cref="M:Dundas.Gauges.WinControl.InputValue.Resume"/>
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.Pause">
            <summary>
            Pauses temporary current playback mode. The playback can be resumed later using 
            the <see cref="M:Dundas.Gauges.WinControl.InputValue.Resume"/> method.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.Resume">
            <summary>
            Resumes playback if it is active and has been stopped temporarily with the 
            <see cref="M:Dundas.Gauges.WinControl.InputValue.Pause"/> method.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.GetPlaybackValue">
            <summary>
            While in playback mode this method returns the current playback value.
            </summary>
            <returns>A <see cref="T:System.Double"/> representing the current
            playback value.
            If we are not in playback mode this method will return
            <see cref="F:System.Double.NaN"/></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.GetPlaybackTimeStamp">
            <summary>
            While in playback mode this method returns the time stamp of the 
            current playback value.
            </summary>
            <returns>A reference to <see cref="T:System.DateTime"/> representing the
            time stamp of the current playback value.
            If we are not in playback mode this method will return
            <see cref="F:System.DateTime.MaxValue"/>.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.IsPlaybackMode">
            <summary>
            Determines if this input value is in playback mode.
            </summary>
            <returns>A <code>boolean</code> which is true if this input value
            is in playback mode and false otherwise.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.GetData">
            <summary>
            Returns a <see cref="T:System.Data.DataTable"/> filled with data from the history. 
            </summary>
            <returns><see cref="T:System.Data.DataTable"/> object filled with data from the history.</returns>
            <remarks>
            The structure of this <see cref="T:System.Data.DataTable"/> is:
            <list type="table">
            <listheader><term>Column</term><description>Descriptions</description></listheader>
            <item><term>Value</term><description><see cref="T:System.Double"/> that represents the 
            value.</description></item>
            <item><term>DateStamp</term><description><see cref="T:System.DateTime"/> that represents the 
            time stamp.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.GetData(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Data.DataTable"/> filled with data from the history.
            </summary>
            <param name="toPoint">Specifies the maximum of records to return.</param>
            <returns><see cref="T:System.Data.DataTable"/> object filled with data from the history.</returns>
            <remarks>
            The structure of this <see cref="T:System.Data.DataTable"/> is:
            <list type="table">
            <listheader><term>Column</term><description>Descriptions</description></listheader>
            <item><term>Value</term><description><see cref="T:System.Double"/> that represents the 
            value.</description></item>
            <item><term>DateStamp</term><description><see cref="T:System.DateTime"/> that represents the 
            time stamp.</description></item>
            </list>
            <p>
            The result contains the bottom of the history, ie. from the oldest record.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.GetData(System.DateTime)">
            <summary>
            Returns a <see cref="T:System.Data.DataTable"/> filled with data from the history.
            </summary>
            <param name="toPoint">Specifies maximum of records to return.</param>
            <returns><see cref="T:System.Data.DataTable"/> object filled with data from history</returns>
            <remarks>
            The structure of this <see cref="T:System.Data.DataTable"/> is:
            <list type="table">
            <listheader><term>Column</term><description>Descriptions</description></listheader>
            <item><term>Value</term><description><see cref="T:System.Double"/> that represents the value.
            </description></item>
            <item><term>DateStamp</term><description><see cref="T:System.DateTime"/> that represents the 
            time stamp.</description></item>
            </list>
            <p>
            The result contains the bottom of the history, ie. from the oldest record.
            </p></remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.DataBind">
            <summary>
            Data binds the input value to a data source.
            </summary>
            <remarks>
            The <b>DataBind</b> method will bind the input value to the data source specified by the 
            <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.DataSource"/> property. 
            <p>
            In cases where a data source is set to an input value and no other data operations 
            are required, the <b>DataBind</b> method is not required to be explicitly called. 
            In these cases, the <b>GaugeContainer</b> itself will databind 
            all input values to the data source prior to rendering.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.DataBind(System.Object,System.String,System.String)">
            <summary>
            Performs databinding with historical data. The data source types should implement the 
            <b>IEnumerable</b> interface.
            </summary>
            <param name="dataSource">The data source which will be used to populate the history data.</param>
            <param name="valueFieldName">Field name which contains values information in the data source.</param>
            <param name="dateFieldName">Field name which contains date/time information in the datasource.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.DataBind(System.Object,System.String,System.String,System.String)">
            <summary>
            Performs databinding with historical data. The data source types should implement the 
            <b>IEnumerable</b> interface. Also takes a <i>dataMember</i> parameter, used 
            for multi-member data sources.
            </summary>
            <param name="dataSource">The data source which will be used to populate the history data.</param>
            <param name="valueFieldName">Field name which contains values information in the data source.</param>
            <param name="dateFieldName">Field name which contains date/time information in the data source.</param>
            <param name="dataMember">Data member name in a multi-member data source (e.g. table 
            name in multi-table data source).</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.AutoDataBind">
            <summary>
            Forces data binding if this.valueFieldMember is not empty
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.PerformDataBinding(System.Collections.IEnumerable)">
            <summary>
            Data binds to the provided IEnumerable.
            </summary>
            <param name="data">The data to bind to.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.GetDataSourceAsIEnumerable(System.Object,System.String,System.Boolean@,System.Data.IDbConnection@)">
            <summary>
            Check, casts, converts and return the data object as IEnumerable.
            </summary>
            <param name="data">The Data to be converted</param>
            <param name="dataMember">The DataMember name in case that the data is DataSet 
            with multiple tables.</param>
            <param name="closeDataReader">Output to flag which specified if the result is DataReader 
            and if it mast be close after data binding.</param>
            <param name="connection">Output to IDbConnection if is created one.</param>
            <returns>The IEnumerable instance.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.ConvertEnumerationItem(System.Object,System.String)">
            <summary>
            Convert enumeration item object from DataRow and DataRowView 
            to the actual value of specified column in row
            </summary>
            <param name="item">Enumeration item.</param>
            <param name="fieldName">Converted item.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.PlaybackComplete">
            <summary>
            Called internally when the playback is complete.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.BeginInit">
            <summary>
            Overrides NamedElement.BeginInit() in order to 
            call  BeginInit () to internal elements; 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.EndInit">
            <summary>
            Overrides NamedElement.EndInit() in order to 
            call  EndInit() to internal elements; 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.OnDispose">
            <summary>
            Overrides NamedElement.OnDispose() in order to 
            call  OnDispose() to internal elements; 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.Reset">
            <summary>
            Overrides ValueBase.Reset() in order to stop playback.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValue.CloneInternals(System.Object)">
            <summary>
            Initializes an object that is a copy of the current instance.
            </summary>
            <param name="copy">The object to initialize</param>
            <returns>Initialized copy of this current instance</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.InputValue.CalculatedValues">
            <summary>
            A collection of <b>CalculatedValue</b> objects.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.CalculatedValueCollection"/> object, which stores 
            <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> objects.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.InputValue.Value">
            <summary>
            Represents the current value of the input value. 
            </summary>
            <value>
            A double that represents the current value.
            </value>
            <remarks>
            When the property is set to a new value the previous value is saved as 
            historical data, along with a time stamp.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.InputValue.HistoryDepth">
            <summary>
            Gets or sets the history depth.
            <seealso cref="P:Dundas.Gauges.WinControl.InputValue.HistoryDepthType"/>
            </summary>
            <value>
            A long that represents the history depth.
            </value>
            <remarks>
            Represents how long previous values should be stored in the history. Measured 
            in units defined by the <see cref="P:Dundas.Gauges.WinControl.InputValue.HistoryDepthType"/> property.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.InputValue.HistoryDepthType">
            <summary>
            Gets or sets history depth type in <see cref="T:Dundas.Gauges.WinControl.DurationType"/> units. 
            <seealso cref="P:Dundas.Gauges.WinControl.InputValue.HistoryDepth"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.DurationType"/> value, that represents the duration type. Defaults 
            to <b>DurationType.Count</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.InputValue.DataMember">
            <summary>
            Gets or sets the specific data member in a multi-member data source to 
            bind to the history.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeContainer.DataSource"/>
            <seealso cref="P:Dundas.Gauges.WinControl.InputValue.DateFieldMember"/>
            <seealso cref="P:Dundas.Gauges.WinControl.InputValue.ValueFieldMember"/>
            </summary>
            <value>
            A data member from a multi-member data source. The default value is 
            <see cref="F:System.String.Empty"/>.
            </value>
            <remarks>
            Use the <b>DataMember</b> property to specify a member from a multi-member data 
            source to bind to the history. For example, if you have a data source with 
            more than one table (specified by the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.DataSource"/> property) use 
            this property to specify which table to bind to the history.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.InputValue.DataSource">
            <summary>
            Gets the source containing a list of values used to populate history data. 
            </summary>
            <value>
            An System.Collections.IEnumerable implemented object that contains a collection of values used to supply data to this control. 
            The default value is a null reference (Nothing in Visual Basic).
            </value>
            <remarks>
            Use the DataSource property to specify the source of values to bind to history data of this control. 
            The data source must be an object that implements the <see cref="T:System.Collections.IEnumerable"/> interface 
            (such as <see cref="T:System.Data.DataView"/>, <see cref="T:System.Collections.ArrayList"/>, and <see cref="T:System.Collections.Hashtable"/>) to bind to history data.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.InputValue.DateFieldMember">
            <summary>
            Gets or sets the field of the data source that provides the date content of the 
            historical items.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeContainer.DataSource"/>
            <seealso cref="P:Dundas.Gauges.WinControl.InputValue.DataMember"/>
            <seealso cref="P:Dundas.Gauges.WinControl.InputValue.ValueFieldMember"/>
            </summary>
            <value>
            A <see cref="T:System.String"/> value that specifies the field of the data source that 
            provides the date content of history items. The default is <see cref="F:System.String.Empty"/>.
            </value>
            <remarks>
            Use this property to specify a field in the data source with date information for loading and 
            binding history data.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.InputValue.ValueFieldMember">
            <summary>
            Gets or sets the field of the data source that provides the value content of 
            the history items.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeContainer.DataSource"/>
            <seealso cref="P:Dundas.Gauges.WinControl.InputValue.DataMember"/>
            <seealso cref="P:Dundas.Gauges.WinControl.InputValue.DateFieldMember"/>
            </summary>
            <value>
            A <see cref="T:System.String"/> that specifies the field of the data source that 
            provides the date content of history items. The default is <see cref="F:System.String.Empty"/>.
            </value>
            <remarks>
            Use this property to specify a field in the data source with value information for 
            loading and binding history data.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.InputValue.Common">
            <summary>
            Gets and sets the CommonElements instance
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.InputValue.SpeedMultiplier">
            <summary>
            Gets current speedMultiplier value.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.InputValueConverter">
            <summary>
            The TypeConverter of the InputValue class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValueConverter.#ctor">
            <summary>
            Initializes a new instance of the InputValueConverter class.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.DataSourceConverter">
            <summary>
            Gauge data source design-time converter. Displays list of available data sources.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataSourceConverter.FillList(System.Collections.ArrayList,System.ComponentModel.TypeConverter.StandardValuesCollection)">
            <summary>
            Synchronize the elements of two collections. 
            </summary>
            <param name="list1">The target collection</param>
            <param name="collection1"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of gauge type names.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values collection.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.DataMemberConverter">
            <summary>
            Gauge data source design-time converter. Displays list of available data source members.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataMemberConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataMemberConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataMemberConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of gauge type names.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values collection.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.DataFieldMemberConverter">
            <summary>
            Gauge data source design-time converter. Displays list of available data source members.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataFieldMemberConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataFieldMemberConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataFieldMemberConverter.GetDataSourceMemberNames(System.Object)">
            <summary>
            Gets an list of the data source member names.
            </summary>
            <param name="dataSource">Data source object to get the members for.</param>
            <returns>List of member names.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataFieldMemberConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of gauge type names.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values collection.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValueMin">
            <summary>
            This class represents an minimum calculated value.
            </summary>
            <remarks>
            Minimum calculations have a period, which determines the range of data to be 
            used for the calculation. The period is always measured from the present date/time, 
            and goes back by the amount specified by the <b>Period</b> and <b>PeriodType</b> 
            properties.
            <p>
            A calculated value is owned by an <see cref="T:Dundas.Gauges.WinControl.InputValue"/> object, which has a 
            <see cref="P:Dundas.Gauges.WinControl.InputValue.CalculatedValues"/> collection.
            </p>	
            <p>
            Calculated values use the history of their input values as source data.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueMin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Gauges.WinControl.CalculatedValueMin"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueMin.CalculateValue(System.Double,System.DateTime)">
            <summary>
            Calculates minimum for specified GaugeDuration.
            </summary>
            <param name="value">The input value.</param>
            <param name="timeStamp">The input time stamp.</param>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValueMinConverter">
            <summary>
            Design time type converter of the CalculatedValueMin class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueMinConverter.#ctor">
            <summary>
            Initializes a new instance of the ConverterLinear class.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularRange">
            <summary>
            Range for <b>CircularGauge</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularGauge"/>
            </summary>
            <remarks>
            All measurements of the range properties are measured as a 
            percentage of the circular scale radius.
            <p>
            Like pointers, ranges are assigned to an existing scale.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularRange.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularRange.ToString">
            <summary>
            Returns the name as a string.
            </summary>
            <returns>
            A string value that represents the name of the pointer.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularRange.GetGauge">
            <summary>
            Returns the gauge to which this range belongs.
            </summary>
            <returns>
            A reference to the <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> owner object.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularRange.GetScale">
            <summary>
            Returns the scale to which this range is assigned.
            </summary>
            <returns>A reference to CircularScale.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularRange.Render(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders the range.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularRange.CalculateRangeRectangle">
            <summary>
            This function calculates the rectangle that is to be passed to
            the GaugeGraphics.DrawCircularRange() method.
            </summary>
            <returns>The rectangle of the range in relative coordinates.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularRange.GetPath(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Returns the shadow graphics path of this range.
            </summary>
            <param name="g"></param>
            <param name="getShadowPath">True to get the shadow path, false to get the normal path.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularRange.Dundas#Gauges#WinControl#ISelectable#DrawSelection(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Render the selection of the given element.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularRange.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularRange.StartValue">
            <summary>
            The start value of the range.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularRange.EndValue"/>
            </summary>
            <value>
            An integer that represents the range's start value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularRange.EndValue">
            <summary>
            The end value of the range.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularRange.StartValue"/>
            </summary>
            <value>
            An integer that represents the range's end value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularRange.StartWidth">
            <summary>
            The width of the range at its start. Measured as a percent of the radius of the circular 
            gauge object that owns the range.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularRange.EndWidth"/>
            </summary>
            <value>
            A real number that represents the start width of the range. Defaults to 
            15 percent of the circular gauge object's radius.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularRange.EndWidth">
            <summary>
            The width of the range at its start. Measured as a percent of the radius of the circular 
            gauge object that owns the range.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularRange.StartWidth"/>
            </summary>
            <value>
            A real number that represents the start width of the range. Defaults to 
            30 percent of the linear gauge object's width. 
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularRange.DistanceFromScale">
            <summary>
            The distance from the range to the scale. Measured as a percent of the radius of the circular 
            gauge object that owns the range.
            </summary>
            <value>
            A real number that represents the distance from the range to the scale. Defaults to 30 percent.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularRange.Placement">
            <summary>
            Determines where the range should be placed, relative to the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularRange.DistanceFromScale"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.CircularRange.Placement"/> enumeration value. Defaults to 
            <b>Placement.Inside</b>.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.UIPropertyEditor">
            <summary>
            Implements dialog type UITypeEditor with property browser.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.UIPropertyEditor.currentContext">
            <summary>
            current ITypeDescriptorContext.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.UIPropertyEditor.ignoreChangedEvents">
            <summary>
            ignoreChangedEvents flag to suppress VS transactions
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.UIPropertyEditor.ignoreChangingEvents">
            <summary>
            ignoreChangingEvents flag to suppress VS transactions
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.UIPropertyEditor.itemIndex">
            <summary>
            index of item in case that editValue is IList
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditor.#ctor">
            <summary>
            Initializes and creates new instance of UIPropertyEditor object
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditor.CreateEditorForm">
            <summary>
            Initializes and creates new UIPropertyEditorForm
            </summary>
            <returns>An initialized UIPropertyEditorForm object</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the EditValue method. 
            </summary>
            <param name="context">An ITypeDescriptorContext that can be used to gain additional context information. </param>
            <returns>One of the UITypeEditorEditStyle values indicating the provided editing style.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditor.TransactionName(System.Object)">
            <summary>
            Builds readable transactiuon name wich appears in undo menu.
            </summary>
            <param name="value">The object that will be changed</param>
            <returns>A string represening transaction name</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value of the specified object using the editor style indicated by GetEditStyle. 
            </summary>
            <param name="context">An ITypeDescriptorContext that is used to gain additional context information. </param>
            <param name="provider">An IServiceProvider through which editing services may be obtained. </param>
            <param name="value">An instance of the value being edited. </param>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditor.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
            <summary>
            Process ChangeService OnComponentChanged event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditor.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)">
            <summary>
            Process ChangeService OnComponentChanging event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UIPropertyEditor.GetService(System.Type)">
            <summary>
            Gets the requested service, if it is available. 
            </summary>
            <param name="serviceType">Requested service type</param>
            <returns>service or null is not found</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.UIPropertyEditor.ItemIndex">
            <summary>
            Gets and sets the IList index
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.UIPropertyEditor.Context">
            <summary>
            Gets and sets the current ITypeDescriptorContext
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.XamlLayer">
            <summary>
            Represents a single layer, containing GDI+ graphics paths, brushes and pens.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.XamlLayer.Paths">
            <summary>
            Gets or sets the array of graphics paths.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.XamlLayer.Brushes">
            <summary>
            Gets or sets the array of brushes.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.XamlLayer.Pens">
            <summary>
            Gets or sets the array of pens.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.XamlLayer.InnerLayers">
            <summary>
            Gets or sets the array of inner layers.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.XamlRenderer">
            <summary>
            Helper class used to render xaml.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the XamlRenderer class and loads the xaml from the provided resource.
            </summary>
            <param name="xamlResource">The xaml resource to load.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.ParseXaml(System.Drawing.RectangleF,System.Drawing.Color[])">
            <summary>
            Parses the xaml and creates a layer for each canvas.
            </summary>
            <param name="viewportRect">The viewport rect.</param>
            <param name="layerHues">The layer hues.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.GetRootCanvasBoundingRectangle(System.Xml.XmlNode)">
            <summary>
            Retruns the bounding rectangle of the root canvas.
            </summary>
            <param name="rootCanvas">The root node.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.GetCanvasBoundingRectangle(System.Xml.XmlNode)">
            <summary>
            Gets the canvas bounding rectangle.
            </summary>
            <param name="canvasNode">The canvas node.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.ParseCanvas(System.Xml.XmlNode,System.Int32,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Creates the GDI+ objects.
            </summary>
            <param name="canvasNode">The canvas node.</param>
            <param name="layerIndex">Index of the layer.</param>
            <param name="fromBounds">From bounds.</param>
            <param name="toBounds">To bounds.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.GetSlicedBounds(System.Xml.XmlNode)">
            <summary>
            Gets the sliced bounds.
            </summary>
            <param name="canvasNode">The canvas node.</param>		
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.CreateBrush(System.Xml.XmlNode,System.Int32,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Creates an equivalent GDI+ brush according to the brush XAML node.
            </summary>
            <param name="brushNode">The brush node.</param>
            <param name="layerIndex">Index of the layer.</param>
            <param name="shapeRect">The shape rect.</param>
            <param name="originalShapeRect">The original shape rect.</param>
            <param name="fromBounds">From bounds.</param>
            <param name="toBounds">To bounds.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.ApplyTransform(System.Xml.XmlNode,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.Brush@)">
            <summary>
            Applies the Transform to the brush based on the provided XAML node.
            </summary>
            <param name="transformNode">The transform node.</param>
            <param name="shapeRect">Shape rect.</param>
            <param name="fromBounds">From bounds.</param>
            <param name="toBounds">To bounds.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.ApplyRelativeTransform(System.Xml.XmlNode,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.Brush@)">
            <summary>
            Applies the RelativeTransform to the brush  based on the provided XAML node.
            </summary>
            <param name="transformNode">The transform node.</param>
            <param name="originalShapeRect">Original shape rect.</param>
            <param name="shapeRect">The shape rect.</param>
            <param name="fromBounds">From bounds.</param>
            <param name="toBounds">To bounds.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.StretchBrushPoints(System.Single,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Stretches the brush points by the given factor.
            </summary>
            <param name="stretchFactor">The stretch factor.</param>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.CalculateStretchFactor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.RectangleF)">
            <summary>
            Calculates the stretch factor for a linear gradient brush based on the two end points and
            the shape rectangle.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <param name="shapeRect">The shape rect.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.CreateColorBlend(System.Xml.XmlNode,System.Int32,System.Single,System.Boolean)">
            <summary>
            Creates a color blend fromt he given XAML gradient stops node.
            </summary>
            <param name="gradientStopsNode">The gradient stops node.</param>
            <param name="layerIndex">Index of the layer.</param>
            <param name="stretchFactor">The stretch factor.</param>
            <param name="radialBrush">if set to <c>true</c> the brush is radial.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.GetStreamGeometryBounds(System.String[],System.Boolean)">
            <summary>
            Gets the bounding rectangle of the stream geometry.
            </summary>
            <param name="parts">The parts.</param>
            <param name="includeOrigin">Ff set to <c>true</c> the origin (0, 0) is included in te bounds.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.GetStreamGeometryParts(System.String)">
            <summary>
            Breaks the stream geometry into an array of strings.
            </summary>
            <param name="streamGeometry">The stream geometry.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.IntepretStreamGeometry(System.String[],System.Drawing.PointF,System.Single,System.Single,System.Boolean,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.Drawing2D.GraphicsPath@)">
            <summary>
            Inteprets the stream geometry using the StreamGeometry mini-language.
            </summary>
            <param name="parts">The stream geometry parts array.</param>
            <param name="shapeOffset">The shape offset.</param>
            <param name="stretchFactorX">The horizontal stretch factor.</param>
            <param name="stretchFactorY">The vertical stretch factor.</param>
            <param name="includeOrigin">if set to <c>true</c> [include origin].</param>
            <param name="fromBounds">From bounds.</param>
            <param name="toBounds">To bounds.</param>
            <param name="graphicsPath">The graphics path.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.RelativeToAbsolute(System.Drawing.PointF,System.Drawing.RectangleF)">
            <summary>
            Converts the relative to the rectangle point to absolute coodinates.
            </summary>
            <param name="relativePoint">The relative point.</param>
            <param name="relativeToRect">Relative to rect.</param>
            <returns>A PointF in absolute coordinates.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.AbsoluteToRelative(System.Drawing.PointF,System.Drawing.RectangleF)">
            <summary>
            Converts the absolute point to the relative to the rectangle coordinates.
            </summary>
            <param name="alsolutePoint">The alsolute point.</param>
            <param name="relativeToRect">The relative to rect.</param>
            <returns>A PointF in relative coordinates.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.FindFillNode(System.Xml.XmlNode)">
            <summary>
            Finds the fill node (Shape.Fill of |ParentName|.Fill.
            </summary>
            <param name="shapeNode">The shape node to search.</param>
            <returns>The fill node or null if the fill node is not found.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.FindStrokeNode(System.Xml.XmlNode)">
            <summary>
            Finds the stroke node (Shape.Stroke of |ParentName|.Stroke.
            </summary>
            <param name="shapeNode">The shape node to search.</param>
            <returns>The stroke node or null if the stroke node is not found.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.FindChildNode(System.Xml.XmlNode,System.String)">
            <summary>
            Finds the child node with the given name.
            </summary>
            <param name="parent">The parent node.</param>
            <param name="childName">Name of the child.</param>
            <returns>The child node or null if not found.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.CountChildNodes(System.Xml.XmlNode)">
            <summary>
            Counts the child nodes and excludes the comments.
            </summary>
            <param name="parentNode">The parent node.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.OffsetPoint(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Offsets the point by the given offset.
            </summary>
            <param name="point">The point.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.TransformPoint(System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Transforms the point from the first coordinate system to the second.
            </summary>
            <param name="point">The point.</param>
            <param name="fromBounds">From bounds.</param>
            <param name="toBounds">To bounds.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.TransformRectangle(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Transforms the rectangle from the first coordinate system to the second.
            </summary>
            <param name="rect">The rect.</param>
            <param name="fromBounds">From bounds.</param>
            <param name="toBounds">To bounds.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.TransformColor(System.Drawing.Color,System.Int32)">
            <summary>
            Transforms the given color based on the LayerHues array.
            </summary>
            <param name="color">The color.</param>
            <param name="layerIndex">Index of the layer.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XamlRenderer.ParsePoint(System.String)">
            <summary>
            Parses the string containing the point coordinates.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.XamlRenderer.Xaml">
            <summary>
            Gets the xaml as an XmlDocument object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.XamlRenderer.LayerHues">
            <summary>
            Gets the array of hues.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.XamlRenderer.Layers">
            <summary>
            Gets or sets the array of layers.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.BitWriter">
            <summary>
            Helper class used to write bits into the stream.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BitWriter.baseStream">
            <summary>
            Writer underlying stream object.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BitWriter.startOffset">
            <summary>
            Offset of the first written byte in the stream.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BitWriter.currentByte">
            <summary>
            Stores bits written into the last byte
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BitWriter.currentBitIndex">
            <summary>
            Current bit index, where new bits should be added
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BitWriter.#ctor">
            <summary>
            Initializes a new instance of the BitWriter class that writes to a stream.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BitWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the BitWriter class based on the supplied stream.
            </summary>
            <param name="stream">Stream used to write the bits.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BitWriter.Flush">
            <summary>
            Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BitWriter.Close">
            <summary>
            Closes underlying stream.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BitWriter.WriteBit(System.Boolean)">
            <summary>
            Writes one bit into the stream.
            </summary>
            <param name="bitValue">Indicates if 0 or 1 bit should be written.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BitWriter.WriteByte(System.Byte)">
            <summary>
            Writes single byte into the stream.
            </summary>
            <param name="byteValue">Byte value to write.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BitWriter.WriteBytes(System.Byte[])">
            <summary>
            Writes bytes array into the stream.
            </summary>
            <param name="byteValues">Bytes array.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BitWriter.WriteBits(System.Byte[],System.Int32)">
            <summary>
            Writes specified number of bits from byte array into the stream.
            </summary>
            <param name="byteValues">Byte array.</param>
            <param name="bitNumber">Number of bits to be written.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BitWriter.WriteSI32(System.Int32)">
            <summary>
            Writes specified unsigned integer value into the stream.
            </summary>
            <param name="intValue">Unsigned integer value to write.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BitWriter.WriteSI16(System.Int16)">
            <summary>
            Writes specified short value into the stream.
            </summary>
            <param name="shortValue">Short value to write.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BitWriter.WriteBitValue(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Writes specified number of bits from integer value into the stream.
            </summary>
            <param name="intValue">Integer value to write.</param>
            <param name="bitNumber">Number of bits used to store the value.</param>
            <param name="signed">Number of bits used to store the value.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BitWriter.SplitAndShiftByte(System.Byte,System.Int32)">
            <summary>
            Split byte into two using specified bit index.
            </summary>
            <param name="byteValue">Byte value to split.</param>
            <param name="splitIndex">Bit index.</param>
            <returns>Array of two bytes.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BitWriter.BaseStream">
            <summary>
            Gets the BitWriter's underlying stream.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BitWriter.BytesWritten">
            <summary>
            Returns number of bytes written into the stream.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.DurationType">
            <summary>
            Specifies the duration type of a given period.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.DurationType.Infinite">
            <summary>
            Duration is not defined.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.DurationType.Milliseconds">
            <summary>
            Duration is in milliseconds.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.DurationType.Seconds">
            <summary>
            Duration is in seconds.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.DurationType.Minutes">
            <summary>
            Duration is in minutes.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.DurationType.Hours">
            <summary>
            Duration is in hours.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.DurationType.Days">
            <summary>
            Duration is in days.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.DurationType.Count">
            <summary>
            Duration is the count of points.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.PeriodType">
            <summary>
            Specifies the period type.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PeriodType.Milliseconds">
            <summary>
            Period is in milliseconds.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PeriodType.Seconds">
            <summary>
            Period is in seconds.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PeriodType.Minutes">
            <summary>
            Period is in minutes.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PeriodType.Hours">
            <summary>
            Period is in hours.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PeriodType.Days">
            <summary>
            Period is in days.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ValueState">
            <summary>
            Specifies the <b>InputValue</b> state.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ValueState.Suspended">
            <summary>
            Suspended state. The <b>IValueProvider</b> interface can accept input data but 
            interactive consumers should ignore it.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ValueState.Playback">
             <summary>
            The <b>IValueProvider</b> interface performs Playback.
             </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ValueState.DataLoading">
            <summary>
            The <b>IValueProvider</b> interface performs data loading.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ValueState.Interactive">
            <summary>
            The <b>IValueProvider</b> interface is in normal mode.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.PlaybackState">
            <summary>
            Determines the state of the playback. This enumeration is used
            by the PlaybackChangedEventArgs class. It is to be used
            to determine the new playback state when the
            <b>GaugeContainer.PlaybackStateChanged</b> event is fired.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PlaybackState.Started">
            <summary>
            Indicates the playback has just started.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PlaybackState.Stopped">
            <summary>
            Indicates that the playback was stopped.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PlaybackState.Paused">
            <summary>
            Indicates that the playback was paused.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PlaybackState.Resumed">
            <summary>
            Indicates the playback was resumed.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PlaybackState.Complete">
            <summary>
            Indicates that the playback is complete. 
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ValueChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.ValueChanged"/> and 
            <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.ValueLimitOverflow"/> events.
            <seealso cref="E:Dundas.Gauges.WinControl.GaugeContainer.ValueLimitOverflow"/>
            <seealso cref="E:Dundas.Gauges.WinControl.GaugeContainer.ValueChanged"/>
            </summary>
            <remarks>
            The current value is obtained using the <see cref="P:Dundas.Gauges.WinControl.ValueChangedEventArgs.Value"/> property, and 
            the name of the object whose value changed is obtained using the <see cref="P:Dundas.Gauges.WinControl.ValueChangedEventArgs.SenderName"/> 
            property.
            <p>
            IMPORTANT: To validate and possibly cancel a new value of some gauge element (e.g. 
            pointer) use one of the pointer/scale related events.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueChangedEventArgs.#ctor(System.Double,System.DateTime,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="value">The current value that has been changed.</param>
            <param name="date">The date stamp of the change.</param>
            <param name="senderName">Name of event sender.</param>
            <param name="playBackMode">Flag that signals if the sender is in Playback mode or "real" mode.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ValueChangedEventArgs.Value">
            <summary>
            Gets the current value that has been changed.
            </summary>
            <value>
            A double that represents the value that has been changed.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ValueChangedEventArgs.Date">
            <summary>
            The DateTime stamp, that indicates the date/time that the value 
            change occurred.
            </summary>
            <value>
            A <see cref="T:System.DateTime"/> object that represents the time of the value change.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ValueChangedEventArgs.PlayBackMode">
            <summary>
            Gets the playback mode.
            </summary>
            <value>
            If <b>true</b> the gauge is in playback mode, if <b>false</b> it is 
            in normal mode.
            </value>
            <remarks>
            The gauge can either display the most recently added values, or it can display 
            values recorded and stored in the histories of input values. When historical 
            data is being displayed this is known as Playback mode.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ValueChangedEventArgs.SenderName">
            <summary>
            Gets the name of the sender object (object whose value changed).
            </summary>
            <value>
            String that represents the name of the sender.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.PlaybackStateChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.ValueChanged"/> and 
            <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.ValueLimitOverflow"/> events.
            <seealso cref="E:Dundas.Gauges.WinControl.GaugeContainer.ValueLimitOverflow"/>
            <seealso cref="E:Dundas.Gauges.WinControl.GaugeContainer.ValueChanged"/>
            </summary>
            <remarks>
            The current value is obtained using the <see cref="P:Dundas.Gauges.WinControl.PlaybackStateChangedEventArgs.Value"/> property, and 
            the name of the object whose value changed is obtained using the <see cref="P:Dundas.Gauges.WinControl.PlaybackStateChangedEventArgs.SenderName"/> 
            property.
            <p>
            IMPORTANT: To validate and possibly cancel a new value of some gauge element (e.g. 
            pointer) use one of the pointer/scale related events.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.PlaybackStateChangedEventArgs.#ctor(Dundas.Gauges.WinControl.PlaybackState,System.Double,System.DateTime,System.String)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="value">The current value of the playback.</param>
            <param name="date">The date stamp of the current value.</param>
            <param name="playbackState">Determines the new state of the playback.</param>
            <param name="senderName">Event sender name.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PlaybackStateChangedEventArgs.Value">
            <summary>
            Gets the current value of the playback.
            </summary>
            <value>
            A double that represents the current value of the playback.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PlaybackStateChangedEventArgs.Date">
            <summary>
            The DateTime stamp, that indicates the date/time that the value 
            change occurred.
            </summary>
            <value>
            A <see cref="T:System.DateTime"/> object that represents the time stamp of the playback state change.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PlaybackStateChangedEventArgs.PlaybackState">
            <summary>
            Gets the playback state.
            </summary>
            <value>
            One of <see cref="P:Dundas.Gauges.WinControl.PlaybackStateChangedEventArgs.PlaybackState"/> enumeration.
            </value>
            <remarks>
            Use this property to determine whether the playback has started,
            stopped, paused, resumed or if it is complete.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PlaybackStateChangedEventArgs.SenderName">
            <summary>
            Gets the name of the sender object.
            </summary>
            <value>
            String that represents the name of the sender.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.PointerPositionChangeArg">
            <summary>
            Provides data for the <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerPositionChange"/> event.
            <seealso cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerPositionChange"/>
            </summary>
            <remarks>
            The new value of the pointer whose value was changed 
            is obtained using the <see cref="P:Dundas.Gauges.WinControl.ValueChangedEventArgs.Value"/> property, and 
            the name of the pointer object whose value changed is obtained using the 
            <see cref="P:Dundas.Gauges.WinControl.ValueChangedEventArgs.SenderName"/> property.
            <p>
            To cancel the pointer being set to the new value set the <see cref="P:Dundas.Gauges.WinControl.PointerPositionChangeArg.Accept"/> 
            property to <b>false</b> in the event handler.
            </p>
            <p>
            This event is similar to <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.ValueChanged"/> event, the 
            difference being this event is only raised for pointer objects.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.PointerPositionChangeArg.#ctor(System.Double,System.DateTime,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="value">The new pointer value that has been changed.</param>
            <param name="date">The date stamp of the change.</param>
            <param name="senderName">Name of the pointer object whose value changed.</param>
            <param name="playBackMode">Flag that signals if the sender is in Playback mode or 
            "real" mode.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PointerPositionChangeArg.Accept">
            <summary>
            Gets or sets a flag that determines if the new value is accepted.
            </summary>
            <value>
            If <b>true</b> the pointer will be allowed to retain its new value, if <b>false</b> 
            the new value will be discarded and the old value will then be displayed.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ValueRangeEventArgs">
            <summary>
            Provides data for the <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeEnter"/>, 
            <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeLeave"/> and 
            <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeTimeOut"/> events.
            <seealso cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeEnter"/>
            <seealso cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeLeave"/>
            <seealso cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeTimeOut"/> 
            </summary>
            <remarks>
            The value of the pointer that is either entering, leaving or timing out in the range 
            is obtained using the <see cref="P:Dundas.Gauges.WinControl.ValueChangedEventArgs.Value"/> property, and 
            the name of the pointer object whose value changed is obtained using the 
            <see cref="P:Dundas.Gauges.WinControl.ValueChangedEventArgs.SenderName"/> property.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ValueRangeEventArgs.#ctor(System.Double,System.DateTime,System.String,System.Boolean,Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="value">The value of the pointer that is in the range.</param>
            <param name="date">The date stamp of the event.</param>
            <param name="senderName">Name of the sender object (the relevant range).</param>
            <param name="pointer">The pointer that is in the range.</param>
            <param name="playBackMode">Flag that signals if the sender is in Playback mode or "real" mode.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ValueRangeEventArgs.Pointer">
            <summary>
            Gets the name of the pointer that is in the range.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> object that represents the pointer that 
            is in the range.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugePaintEventArgs">
            <summary>
            Provides data for the <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PrePaint"/> and 
            <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PostPaint"/> events.
            <seealso cref="E:Dundas.Gauges.WinControl.GaugeContainer.PrePaint"/>
            <seealso cref="E:Dundas.Gauges.WinControl.GaugeContainer.PostPaint"/>
            </summary>
            <remarks>
            A reference to the relevant gauge container object can be obtained using the 
            <see cref="P:Dundas.Gauges.WinControl.GaugePaintEventArgs.Gauge"/> property, and for drawing a <see cref="T:Dundas.Gauges.WinControl.GaugeGraphics"/> object 
            can be used, which is exposed via the <see cref="P:Dundas.Gauges.WinControl.GaugePaintEventArgs.Graphics"/> property.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugePaintEventArgs.#ctor(Dundas.Gauges.WinControl.GaugeContainer,Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Constructor that creates a new instance of this class.
            </summary>
            <param name="gauge"><b>GaugeContainer</b> object for which the event 
            args are being used.</param>
            <param name="graphics"><b>GaugeGraphics</b> object, which encapsulates GDI+ 
            drawing routines.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugePaintEventArgs.Gauge">
            <summary>
            Returns a reference to the relevant <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> object.
            <seealso cref="T:Dundas.Gauges.WinControl.GaugeContainer"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> object.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugePaintEventArgs.Graphics">
            <summary>
            Returns a reference to a <b>GaugeGraphics</b> object, which is 
            used for drawing-related purposes.
            <seealso cref="T:Dundas.Gauges.WinControl.GaugeGraphics"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeGraphics"/> object, which encapsulates GDI+ gauge
            drawing functionality.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.RealTimeDataEventArgs">
            <summary>
            Defines event arguments for the RealTimeData event.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RealTimeDataEventArgs.#ctor">
            <summary>
            Constructor for RealTimeDataEventArgs class.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RealTimeDataEventArgs.RealTimeValues">
            <summary>
            A collection of real time values. When handling the
            RealTimeData event use this property
            to pass real time values.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugePeriod">
            <summary>
            Implements Duration and PeriodType pair as time span.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugePeriod.duration">
            <summary>
            Represents counts of the PeriodType
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugePeriod.periodType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugePeriod.timeSpan">
            <summary>
            Represents cached timespan.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugePeriod.ivalidated">
            <summary>
            Invalidate flag for  timeSpan cache
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugePeriod.#ctor">
            <summary>
            Initializes a new instance of the GaugePeriod class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugePeriod.#ctor(System.Double,Dundas.Gauges.WinControl.PeriodType)">
            <summary>
            Initializes a new instance of the GaugePeriod class.
            </summary>
            <param name="duration">The number of PeriodTypes.</param>
            <param name="periodType">The period type.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugePeriod.ToTimeSpan">
            <summary>
            Returns the TimeSpan representation of this instance. 
            </summary>
            <returns>The calculated TimeSpan</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugePeriod.ToGaugeDuration">
            <summary>
            Returns the GaugeDuration representation of this instance.  
            </summary>
            <returns>The calculated GaugeDuration</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugePeriod.PeriodToTimeSpan(System.Double,Dundas.Gauges.WinControl.PeriodType)">
            <summary>
            Converts count/PeriodType pair to TimeSpan.
            </summary>
            <param name="timeTicks">The count of PeriodType</param>
            <param name="period">The PeriodType</param>
            <returns>The calculated TimeSpan</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugePeriod.Clone">
            <summary>
            Creates a shallow copy of the current Object.
            </summary>
            <returns>A shallow copy of the current Object</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugePeriod.System#ICloneable#Clone">
            <summary>
            Creates a shallow copy of the current Object.
            </summary>
            <returns>A shallow copy of the current Object</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugePeriod.Duration">
            <summary>
            Gets and sets the number of PeriodType of this instance.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugePeriod.PeriodType">
            <summary>
            Gets and sets the PeriodType of this instance
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeDuration">
            <summary>
            Helper class to determine data history length. Contains DurationType/Count pair.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeDuration.durationType">
            <summary>
            The DurationType part
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeDuration.count">
            <summary>
            The number of DurationType.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeDuration.timeSpan">
            <summary>
            Represents cached timespan.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeDuration.ivalidated">
            <summary>
            Invalidate flag for  timeSpan cache
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDuration.#ctor">
            <summary>
            Initializes a new instance of the GaugeDuration class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDuration.#ctor(System.Double,Dundas.Gauges.WinControl.DurationType)">
            <summary>
            Initializes a new instance of the GaugeDuration class.
            </summary>
            <param name="count">The count of the GaugeDuration</param>
            <param name="durationType">The DurationType</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDuration.MapToPeriodType(Dundas.Gauges.WinControl.DurationType)">
            <summary>
            Perform limited conversion from DurationType to PeriodType.
            </summary>
            <param name="type">The DurationType to convert.</param>
            <returns>Converted PeriodType.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDuration.MapToDurationType(Dundas.Gauges.WinControl.PeriodType)">
            <summary>
            Perform limited conversion from PeriodType to DurationType. 
            </summary>
            <param name="type">The PeriodType to convert.</param>
            <returns>Converted DurationType.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDuration.ToTimeSpan">
            <summary>
            Returns the TimeSpan representation of this instance. 
            </summary>
            <returns>The calculated TimeSpan</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDuration.Extend(Dundas.Gauges.WinControl.GaugeDuration,System.DateTime,System.DateTime)">
            <summary>
            Equalize or extend this GaugeDuration instance 
            against other GaugeDuration instance and date period.
            </summary>
            <param name="extend">The GaugeDuration instance for comparison</param>
            <param name="topDate">The low bound DateTime</param>
            <param name="btmDate">The high bound DateTime</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDuration.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>New copy of this object</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeDuration.Count">
            <summary>
            Gets and sets the count of the GaugeDuration
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeDuration.DurationType">
            <summary>
            Gets and sets the DurationType of the GaugeDuration.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeDuration.IsTimeBased">
            <summary>
            Returns true if this GaugeDuration instance is time based -
            it is not DurationType.Count or DurationType.Infinite.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeDuration.IsCountBased">
            <summary>
            Returns true if this GaugeDuration instance represents DurationType.Count
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeDuration.IsInfinity">
            <summary>
            Returns true if this GaugeDuration instance  represents DurationType.Infinite
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeDuration.IsEmpty">
            <summary>
            Returns true if this GaugeDuration instance represents empty  duration.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ValueChangedEvent">
            <summary>
            Delegate that handles the <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.ValueChanged"/> and 
            <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.ValueLimitOverflow"/> events. 
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.PlaybackStateChangedEvent">
            <summary>
            Delegate that handles the <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PlaybackStateChanged"/> event. 
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ValueRangeEvent">
            <summary>
            Delegate that handles the <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeEnter"/>, 
            <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeLeave"/> and 
            <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeTimeOut"/> events.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.PointerPositionChangeEvent">
            <summary>
            Delegate that handles the <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerPositionChange"/> event.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugePaintEvent">
            <summary>
            Delegate that handles the <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PrePaint"/> and 
            <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PostPaint"/> events.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.StateIndicatorStyle">
            <summary>
            Enumeration defining state indicator styles.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.StateIndicatorStyle.RectangularLed">
            <summary>
            The state indicator is a rectangular LED.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.StateIndicatorStyle.CircularLed">
            <summary>
            The state indicator is a circular LED.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.StateIndicatorStyle.RoundedRectangularLed">
            <summary>
            The state indicator is a rectangular LED with rounded corners.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.StateIndicatorStyle.Text">
            <summary>
            The state indicator is represented as a text string.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.StateIndicator">
            <summary>
            Represents a state indicator.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeContainer.StateIndicators"/>
            <seealso cref="T:Dundas.Gauges.WinControl.State"/>
            </summary>
            <remarks>
            State indicators are stored in the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.StateIndicators"/> 
            collection property.
            <p>
            A state indicator has a collection of states that are stored in the 
            <see cref="P:Dundas.Gauges.WinControl.StateIndicator.States"/> collection property. If the value of the state 
            indicator falls within the start and end range of one of these states then that 
            state is considered to be activated. If not the indicator is in its default state.
            </p>
            <p>
            An activated <see cref="T:Dundas.Gauges.WinControl.State"/> object has appearance properties, which determine the appearance 
            of its state indicator when that state is activated.
            </p>
            </remarks>
        </member>
        <member name="F:Dundas.Gauges.WinControl.StateIndicator.data">
            <summary>
            Data linker to input/calculated value
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.StateIndicator.internalValue">
            <summary>
            Represents the state indicator position. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicator.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicator.ShouldSerializeStyle">
            <summary>
            Used by VS designer - prevents the obsolete property from
            serialization.
            </summary>
            <returns>
            <b>false</b> to prevent the property from serialization.
            </returns>
        </member>
        <member name="F:Dundas.Gauges.WinControl.StateIndicator.defaultParent">
            <summary>
            This flag determines if the Parent property has been changed from its
            default value.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicator.ToString">
            <summary>
            Gets the name of the indicator. 
            </summary>
            <returns>
            A string that represents the name of the indicator.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicator.GetPath(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.State)">
            <summary>
            This function returns the graphics path of the state indicator.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="currentState">A reference to the current state.</param>
            <returns>A reference to GraphicsPath.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicator.GetBrush(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.State,System.Drawing.RectangleF)">
            <summary>
            This function returns the fill brush of the state indicator.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="currentState">A reference to the current state.</param>
            <param name="rect">Input rectangle.</param>
            <returns>A reference to Brush.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicator.GetPen(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.State)">
            <summary>
            This function returns the pen of the state indicator.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="currentState">The current state.</param>
            <returns>A reference to Pen.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicator.DrawImage(Dundas.Gauges.WinControl.GaugeGraphics,System.String,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            Draws the image if the state indicator.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="imageName">The name of the image to draw.</param>
            <param name="imageTransColor">Transparent color of the image.</param>
            <param name="imageHueColor">Hue color of the image.</param>
            <param name="drawShadow">If true, only draw the shadow of the image.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicator.GetCurrentState">
            <summary>
            Returns the current state or null is the current state is the
            default state.
            </summary>
            <returns>A reference to State.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicator.IsCircular">
            <summary>
            Determines if the state indicator is circular based on its style.
            </summary>
            <returns>True if it is circular.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicator.OnDispose">
            <summary>
            Handle disposal of this instance.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicator.Dundas#Gauges#WinControl#ISelectable#DrawSelection(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Render the selection of the given element.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicator.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.States">
            <summary>
            Represents the indicator's collection of states.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.StateCollection"/> object, which stores the indicator's 
            states.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.ParentObject">
            <summary>
            Gets an object reference to the parent object. If there is no valid parent 
            element the result is <b>null</b>.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> object.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.Parent">
            <summary>
            Determines the parent element, which affects the indicator's coordinate system.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.ZOrder">
            <summary>
            Determines the Z order of the indicator in the gauge container.
            </summary>
            <value>
            An integer that represents the Z order.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.ToolTip">
            <summary>
            The tool tip to be displayed when the cursor is over the indicator.
            </summary>
            <value>
            A string that represents the tool tip.
            </value>
            <remarks>
            The user can format the tool tip using #INPUTVALUE, #INPUTVALUE1, etc. 
            The value from the GaugeContainer.Values collection will then be displayed. 
            #INDICATORVALUE can also be used to show the current value of the indicator.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.Name">
            <summary>
            The name of the indicator.
            </summary>
            <value>
            String that represents the name of the indicator.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.Style">
            <summary>
            NOTE: This property is obsolete in Dundas Gauge 2.0. IndicatorStyle is supposed to be used instead. <see cref="P:Dundas.Gauges.WinControl.StateIndicator.IndicatorStyle"/>
            Determines the style of the state indicator.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.StateIndicatorStyle"/> value that represents the 
            indicator's style. Defaults to <b>StateIndicatorStyle.CircularLed</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.IndicatorStyle">
            <summary>
            Determines the style of the state indicator.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.StateIndicatorStyle"/> value that represents the 
            indicator's style. Defaults to <b>StateIndicatorStyle.CircularLed</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.Location">
            <summary>
            The location of the indicator inside the gauge container. The coordinates are 
            measured as a percentage of the container's width/height.
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.Size"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeLocation"/> object, which represents the indicator's location inside 
            its container.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.Size">
            <summary>
            The size of the indicator inside the gauge container. The coordinates are 
            measured as a percentage of the container's width/height.
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.Location"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeSize"/> object, which represents the indicator's size inside 
            its container.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.Visible">
            <summary>
            Determines the visibility of the state indicator.
            </summary>
            <value>
            If <b>true</b> the indicator is visible, if <b>false</b> it is not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.Font">
            <summary>
            Specifies the font used for the indicator's default state.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.StateIndicator.Font"/> object, used for the default state.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.BorderColor">
            <summary>
            The color of the state indicator's border when the indicator is in its default state.
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.BorderStyle"/>
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.BorderWidth"/>
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.FillColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> object that represents the state indicator's border 
            color. Defaults to <b>Color.Black</b>.
            </value>
            <remarks>
            Setting this property will only have an effect if the state indicator border 
            width is set to a value greater than 0.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.BorderStyle">
            <summary>
            The line style of the state indicator's border when the indicator is in its default state.
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.BorderColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.BorderWidth"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeDashStyle"/> value that represents the state indicator's border 
            style. Defaults to <b>GaugeDashStyle.Solid</b>.
            </value>
            <remarks>
            Setting this property will only have an effect if the border 
            width is set to a value greater than 0.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.BorderWidth">
            <summary>
            The line width of the state indicator's border when the indicator is in its default 
            state. Measured in pixels.
            </summary>
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.BorderStyle"/>
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.BorderColor"/>
            <value>
            An integer that represents the line width. Defaults 
            to 0 pixels.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.FillColor">
            <summary>
            The fill color of the state indicator's border when the indicator is in its default state.
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.FillGradientEndColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.FillGradientType"/>
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.FillHatchStyle"/>
            </summary>
            <value>
            A color that represents the 
            fill color. The default value is <b>Color.LawnGreen</b>.
            </value>
            <remarks>
            This property represents the fill color of the state indicator when the 
            indicator is in its default state. 
            If a gradient is set via the 
            <see cref="P:Dundas.Gauges.WinControl.StateIndicator.FillGradientType"/> property this color will be used 
            as the start color for the gradient. Furthermore if a hatch style is 
            set via the <see cref="P:Dundas.Gauges.WinControl.StateIndicator.FillHatchStyle"/> property this color 
            will be used as the background color for the hatch.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.FillGradientType">
            <summary>
            The primary fill gradient type of the state indicator when it is in its default state.
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.FillGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GradientType"/> object that represents the 
            gradient style. The default value is <b>GradientType.Center</b>.
            </value>
            <remarks>
            If a gradient is specified then the <see cref="P:Dundas.Gauges.WinControl.StateIndicator.FillColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.StateIndicator.FillGradientEndColor"/> properties determine the colors used.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.FillGradientEndColor">
            <summary>
            The end color of the state indicator when it is in its default state.
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.FillGradientType"/>
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.FillHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            gradient end color. The default value is <b>Color.DarkGreen</b>.
            </value>
            <remarks>
            This property represents the end color of the fill gradient. 
            It is used if the <see cref="P:Dundas.Gauges.WinControl.StateIndicator.FillGradientType"/>property
            has a valid gradient. In addition to that it is also used as the 
            hatch foreground color in case a hatch style is set via 
            the <see cref="P:Dundas.Gauges.WinControl.StateIndicator.FillHatchStyle"/> property.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.FillHatchStyle">
            <summary>
            The primary fill hatch style of the state indicator when it is in its default state.
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.FillGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeHatchStyle"/> object that represents the 
            hatch style. The default value is <b>GaugeHatchStyle.None</b>.
            </value>
            <remarks>
            If hatching is specified then the <see cref="P:Dundas.Gauges.WinControl.StateIndicator.FillColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.StateIndicator.FillGradientEndColor"/> properties determine the colors used.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.Value">
            <summary>
            The value of the state indicator.
            </summary>
            <value>
            A double that represents the indicator's value.
            </value>
            <remarks>
            A state indicator has a collection of states that are stored in the 
            <see cref="P:Dundas.Gauges.WinControl.StateIndicator.States"/> collection property. If the value of the state 
            indicator falls within the start and end range of one of these states then that 
            state is considered to be activated. If not the indicator is in its default state.
            <p>
            The value of an indicator can also be set using the <see cref="P:Dundas.Gauges.WinControl.StateIndicator.ValueSource"/> property, 
            which allows for the display of calculated values, and also results in a history being 
            created.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.ValueSource">
            <summary>
            Specifies the name of the input or calculated value.
            </summary>
            <remarks>
            If <b>ValueSource</b> is used as the value source a history will be created, which 
            can be used for calculated values and playback.
            <p>
            A state indicator has a collection of states that are stored in the 
            <see cref="P:Dundas.Gauges.WinControl.StateIndicator.States"/> collection property. If the value of the state 
            indicator falls within the start and end range of one of these states then that 
            state is considered to be activated. If not the indicator is in its default state.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.Text">
            <summary>
            The text of the state indicator when it is in its default state.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.Image">
            <summary>
            The image to be used when the state indicator is in its default state.
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.ImageTransColor"/>
            </summary>
            <value>
            A string that represents the pathname of an image saved to disk, or the 
            name of a named image stored in the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.NamedImages"/> 
            collection property.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.ImageTransColor">
            <summary>
            The transparent color of the state image.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> object that represents the color 
            that will be displayed as transparent. Defaults to <b>Color.Empty</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.ImageHueColor">
            <summary>
            Gets or sets the hue color to be applied to the state image.
            <seealso cref="P:Dundas.Gauges.WinControl.StateIndicator.Image"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            hue color to be applied to the state image. The default value is 
            <b>Color.Empty</b>.
            </value>
            <remarks>
            The hue color is applied to the entire image in order to modify its hue.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.CurrentState">
            <summary>
            Read-only property that represents the name of the current state.
            </summary>
            <value>
            A string that represents the name of the current state.
            </value>
            <remarks>
            If no state is active (i.e. indicator is in its default state) then 
            an empty string will be returned.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.ShadowOffset">
            <summary>
            Determines how far to the right and down the shadow will appear.
            </summary>
            <value>
            An integer that represents the shadow offset. Defaults to 1 pixel.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.Angle">
            <summary>
            The angle of rotation (0 to 360 degrees).
            </summary>
            <value>
            A float that represents the amount by which the indicator is rotated. Defaults 
            to 0 degrees.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.ResizeMode">
            <summary>
            Determines if the font will be automatically resized so that the text will 
            always fit. This property is used only if the state indicator style is text.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.StateIndicator.ResizeMode"/> value, which determines how resizing occurs.
            </value>
            <remarks>
            If ResizeMode is set to <b>None</b> then the <see cref="P:Dundas.Gauges.WinControl.StateIndicator.Font"/> and <see cref="P:Dundas.Gauges.WinControl.StateIndicator.FontUnit"/> properties determine the size of the text.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.ImageTransparency">
            <summary>
            Determines the transparency of the image. This property is only used
            if the <see cref="P:Dundas.Gauges.WinControl.StateIndicator.Image"/> property is set.
            </summary>
            <value>
            A real number that represents the transparency percentage.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.FontUnit">
            <summary>
            Determines if the font size is measured as a percentage of the parent or in units 
            specified by the <b>Font.Unit</b> property.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.StateIndicator.FontUnit"/> object, which determines the font units.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.Selected">
            <summary>
            Determines if the state indicator visually appears selected.
            </summary>
            <value>
            If <b>true</b> the state indicator appears selected. Default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.Position">
            <summary>
            This is a wrapper property for location and size.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.Common">
            <summary>
            Gets and sets CommonElements. 
            Setting this property cause set of the Common to the internal DataAttributes object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicator.InternalValue">
            <summary>
            Gets and sets the pointer position. Setting this property cause Refresh in win control.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.Position">
            <summary>
            The position class is simply a wrapper class for Location and Size.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.Position.location">
            <summary>
            The location part of this position
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.Position.size">
            <summary>
            The size part of this position
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.Position.locationAlignment">
            <summary>
            The ContentAlignment type.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Position.#ctor(Dundas.Gauges.WinControl.GaugeLocation,Dundas.Gauges.WinControl.GaugeSize,System.Drawing.ContentAlignment)">
            <summary>
            Initializes new instance of Position class
            </summary>
            <param name="location">The location of this position</param>
            <param name="size">The size of this position</param>
            <param name="locationAlignment">The ContentAlignment type.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Position.X">
            <summary>
            Gets X coordinate of this position
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Position.Y">
            <summary>
            Gets Y coordinate of this position
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Position.Width">
            <summary>
            Gets Width of this position
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Position.Height">
            <summary>
            Gets Height of this position
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Position.DefaultValues">
            <summary>
            Gets if this position is default or changed
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Position.Rectangle">
            <summary>
            Returns bound rectangle the Position instance as RectangleF.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.NumericIndicatorCollection">
            <summary>
            Collection of <b>NumericIndicator</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.NumericIndicator"/>
            </summary>
            <remarks>
            This collection is exposed as the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.NumericIndicators"/> 
            property of the root <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> object.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicatorCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicatorCollection.Add(System.String)">
            <summary>
            Adds a <b>NumericIndicator</b> object to the end of the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.NumericIndicatorCollection.Remove(Dundas.Gauges.WinControl.NumericIndicator)"/>
            <seealso cref="T:Dundas.Gauges.WinControl.NumericIndicator"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.NumericIndicator"/> object to be added to the collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.NumericIndicator"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. 
            The name argument is the <b>Name</b> property of the object being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicatorCollection.Add(Dundas.Gauges.WinControl.NumericIndicator)">
            <summary>
            Adds a <b>NumericIndicator</b> object to the end of the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.NumericIndicatorCollection.Remove(Dundas.Gauges.WinControl.NumericIndicator)"/>
            <seealso cref="T:Dundas.Gauges.WinControl.NumericIndicator"/>
            </summary>
            <param name="value">
            The <see cref="T:Dundas.Gauges.WinControl.NumericIndicator"/> object to be added to 
            the collection.
            </param>
            <returns>
            Returns the position in the collection of the newly added object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicatorCollection.Remove(Dundas.Gauges.WinControl.NumericIndicator)">
            <summary>
            Removes the specified <b>NumericIndicator</b> object from the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.NumericIndicatorCollection.Add(System.String)"/>
            <seealso cref="T:Dundas.Gauges.WinControl.NumericIndicator"/>
            </summary>
            <param name="value">
            <see cref="T:Dundas.Gauges.WinControl.NumericIndicator"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicatorCollection.GetDefaultElementName(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicatorCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericIndicatorCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            We override this function in order to automatically adjust the
            position of newly inserted elements. Also we set a parent to either
            the default circular gauge or default linear gauge if they exist. 
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicatorCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicatorCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns the NumericIndicator object
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericIndicatorCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>NumericIndicator</b> object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SvgParameters">
            <summary>
            This class is used as an abstract class to define 
            necessary attributes for SVG drawing. This file is 
            used in two products: Dundas Diagram and Dundas 
            Chart. This class is base class for all SVG classes.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgParameters.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgParameters.GetX(System.Double)">
            <summary>
            Returns string presentation of X coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="x">X value which should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgParameters.GetY(System.Double)">
            <summary>
            Returns string presentation of Y coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="y">Y value which should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgParameters.GetX(System.Drawing.PointF)">
            <summary>
            Returns string presentation of X coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="point">Point which X value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgParameters.GetX(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of X coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Rectangle which X value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgParameters.GetWidth(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of Width in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Rectangle which Width value should be converted to string</param>
            <returns>Result string with size and measurement units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgParameters.GetHeight(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of Height coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Rectangle which Height value should be converted to string</param>
            <returns>Result string with size and measurement units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgParameters.GetY(System.Drawing.PointF)">
            <summary>
            Returns string presentation of Y coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="point">Point which Y value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgParameters.GetY(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of Y coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Point which Y value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgParameters.BrushColor">
            <summary>
            Gets the color of the Solid brush or 
            the first color of Gradient brush
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgParameters.TextColor">
            <summary>
            Gets the color of the Text Color
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgParameters.BrushSecondColor">
            <summary>
            Gets the second color of Gradient Brush
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgParameters.GradientType">
            <summary>
            Gets determine direction for filling gradient.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgParameters.FillType">
            <summary>
            Gets the Fill Type. The fill type could be 
            solid color, gradient, etc .
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgParameters.FillMode">
            <summary>
            Gets the Fill Mode. Specifies how the interior 
            of a closed path is filled.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgParameters.ImageWrapMode">
            <summary>
            Gets the Image Wrap Mode. Specifies how an image is tiled when 
            it is smaller than the area being filled.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgParameters.PenColor">
            <summary>
            Gets the color used for drawing lines and curves.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgParameters.PenWidth">
            <summary>
            Gets the width of this Pen.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgParameters.SvgLineCap">
            <summary>
            Gets the Line Cap Style.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgParameters.DashStyle">
            <summary>
            Gets the style used for dashed lines drawn with this Pen.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgParameters.Transform">
            <summary>
            Gets the Matrix object which represents matrix 
            transformation elements
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgParameters.Font">
            <summary>
            Gets a Font object which defines a particular format 
            for text, including font face, size, and style attributes.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgParameters.StringFormat">
            <summary>
            Gets String format which encapsulates text layout information (such as 
            alignment and line spacing), display manipulations (such as ellipsis 
            insertion and national digit substitution) and OpenType features.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgParameters.PictureSize">
            <summary>
            Gets or Set Picture size
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SvgParameters.SvgLineCapStyle">
            <summary>
            This enumeration defines how start or finish point of a line is drawn
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgLineCapStyle.Butt">
            <summary>
            Specifies a flat line cap.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgLineCapStyle.Round">
            <summary>
            Specifies a round line cap.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgLineCapStyle.Square">
            <summary>
            Specifies a square line cap.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle">
            <summary>
            This enumeration defines pattern for solid and blank sequences
            for rendering a line
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle.Dash">
            <summary>
            Line consisting of dashes
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle.DashDot">
            <summary>
            Line consisting of a repeating pattern of dash-dot
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle.DashDotDot">
            <summary>
            Line consisting of a repeating pattern of dash-dot-dot
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle.DashDashDot">
            <summary>
            Line consisting of a repeating pattern of dash-dash-dot
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle.Doubledash">
            <summary>
            Line consisting of doubledashes
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle.DoubledashHalfdash">
            <summary>
            Line consisting of a repeating pattern of doubledash-halfdash-halfdash
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle.DoubledashHalfdashHalfdash">
            <summary>
            Line consisting of a repeating pattern of doubledash-halfdash
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle.DoubledashDoubledashHalfdash">
            <summary>
            Line consisting of a repeating pattern of doubledash-doubledash-halfdash
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle.Halfdash">
            <summary>
            Line consisting of halfdashes
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle.HalfdashDot">
            <summary>
            Line consisting of a repeating pattern of halfdash-dot
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle.HalfdashDotDot">
            <summary>
            Line consisting of a repeating pattern of halfdash-dot-dot
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle.HalfdashHalfdashDot">
            <summary>
            Line consisting of a repeating pattern of halfdash-halfdash-dot
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle.Dot">
            <summary>
            Line consisting of dots
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle.Custom">
            <summary>
            Custom pattern
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle.Solid">
            <summary>
            Solid line
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SvgParameters.SvgFillType">
            <summary>
            This enumeration defines the type of filling 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgFillType.Solid">
            <summary>
            Solid fill 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgFillType.Hatch">
            <summary>
            Hatch fill 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgFillType.Image">
            <summary>
            Image fill 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgFillType.Gradient">
            <summary>
            Gradient fill 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgFillType.None">
            <summary>
            No fill 
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SvgParameters.SvgGradientType">
            <summary>
            This enumeration defines the type of gradient 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgGradientType.None">
            <summary>
            Disabled
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgGradientType.LeftRight">
            <summary>
            Specifies a gradient from Left to Right.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgGradientType.TopBottom">
            <summary>
            Specifies a gradient from Top to Bottom.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgGradientType.Center">
            <summary>
            Specifies a gradient from Center.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgGradientType.DiagonalLeft">
            <summary>
            Specifies a gradient from Top Left to Bottom Right.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgGradientType.DiagonalRight">
            <summary>
            Specifies a gradient from Top Right to Bottom Left.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgGradientType.HorizontalCenter">
            <summary>
            Specifies a gradient from Center to Left and Right.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgGradientType.VerticalCenter">
            <summary>
            Specifies a gradient from Center to Top and Bottom.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SvgParameters.SvgImageWrapMode">
            <summary>
            This enumeration defineshow image is tiled when it is larger than the area being filled
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgImageWrapMode.ClampScaled">
            <summary>
            Scaled to fill available area 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgImageWrapMode.Tile">
            <summary>
            Tiles
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgImageWrapMode.TileFlipX">
            <summary>
            Reverses the image horizontally and then tiles it
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgImageWrapMode.TileFlipY">
            <summary>
            Reverses the image vertically and then tiles it
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgImageWrapMode.TileFlipXY">
            <summary>
            Reverses the image horizontally and vertically and then tiles it
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgParameters.SvgImageWrapMode.ClampUnscaled">
            <summary>
            Fill available area without scaling
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.DoubleNanValueConverter">
            <summary>
            Designer converter class
            Converts Double.NaN values to/from "Not set".
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleNanValueConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleNanValueConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleNanValueConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of predefined values.
            </summary>
            <param name="context">Descriptor context.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleNanValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert double.NaN to string "Not set"
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Conversion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleNanValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert minimum or maximum values from string
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.DoubleAutoValueConverter">
            <summary>
            Designer converter class
            Converts Double.NaN values to/from "Auto".
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleAutoValueConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleAutoValueConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleAutoValueConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of predefined values.
            </summary>
            <param name="context">Descriptor context.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleAutoValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert double.NaN to string "Not set"
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Conversion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleAutoValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert minimum or maximum values from string
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.DoubleConverterHint">
            <summary>
            Represents attribute used along with DoubleInfinityConverter
            to add values in it.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleConverterHint.#ctor(System.Double)">
            <summary>
            Initialize new instance of DoubleConverterHint class.
            </summary>
            <param name="bound"></param>
        </member>
        <member name="T:Dundas.Gauges.WinControl.DoubleInfinityConverter">
            <summary>
            Designer converter class
            Converts Double.NaN values to/from "Auto" and additional 
            specified by DoubleConverterHint attribute .
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleInfinityConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleInfinityConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleInfinityConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of predefined values.
            </summary>
            <param name="context">Descriptor context.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleInfinityConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert double.NaN to string "Not set"
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Conversion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DoubleInfinityConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert minimum or maximum values from string
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearPinLabel">
            <summary>
            Represents a maximum or minimum pin label of a linear scale.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPinLabel.#ctor">
            <summary>
            Initializes new instance of LinearPinLabel class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPinLabel.#ctor(System.Object)">
            <summary>
            Constructor that takes a named parent object.
            </summary>
            <param name="parent">
            A <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> parent object.
            </param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPinLabel.Text">
            <summary>
            The text to be displayed.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearPinLabel.Font"/>
            <seealso cref="P:Dundas.Gauges.WinControl.LinearPinLabel.TextColor"/>
            </summary>
            <value>
            A string that represents the position's text.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPinLabel.Font">
            <summary>
            Determines the font of the position.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearPinLabel.Text"/>
            <seealso cref="P:Dundas.Gauges.WinControl.LinearPinLabel.TextColor"/>
            </summary><value>
            A <see cref="P:Dundas.Gauges.WinControl.LinearPinLabel.Font"/> object. Defaults to 'Microsoft Sans Serif, 12 pt'.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPinLabel.FontUnit">
            <summary>
            Determines if the font size is measured as a percentage of the parent or in units 
            specified by the <b>Font.Unit</b> property.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearPinLabel.Font"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.LinearPinLabel.FontUnit"/> object, which determines the font units.
            </value>
            <remarks>
            If <b>ResizeMode</b> is set to AutoFit then FontUnit does not determine the size of the font.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPinLabel.TextColor">
            <summary>
            The text color of the position.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> object, that represents the text color. Defaults 
            to <b>Color.Black</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPinLabel.Placement">
            <summary>
            Determines the placement of the position's label, relative to the scale.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.LinearPinLabel.Placement"/> value. Defaults to <b>Placement.Inside</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPinLabel.FontAngle">
            <summary>
            An additional, fixed amount in degrees by which the position label will 
            be rotated.
            </summary>
            <value>
            A float that represents the degrees of additional rotation. Defaults to 
            zero.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPinLabel.DistanceFromScale">
            <summary>
            A value by which the position's label will be offset from its normal position.
            </summary>
            <value>
            A float that determines how far away the labels will be from the scale. Defaults to 0.
            </value>
            <remarks>
            This is measured as a percentage of the width or height of the associated scale's 
            parent object.
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularPinLabel">
            <summary>
            Represents a maximum or minimum pin label of a circular scale.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPinLabel.#ctor">
            <summary>
            Initializes new instance of CircularPinLabel class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPinLabel.#ctor(System.Object)">
            <summary>
            Constructor that takes a named parent object.
            </summary>
            <param name="parent">
            A <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> parent object.
            </param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPinLabel.RotateLabel">
            <summary>
            Determines if the position label is rotated along with the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularPinLabel.AllowUpsideDown"/>
            </summary>
            <value>
            If <b>true</b> the position's label will be rotated along with its scale, 
            if <b>false</b> it will not be. Defaults to <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPinLabel.AllowUpsideDown">
            <summary>
            Determines if the position's label can be rotated by more than 90 degrees.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularPinLabel.RotateLabel"/>
            </summary>
            <value>
            If <b>true</b> the position's label may be displayed upside down, 
            if <b>false</b> it cannot. Defaults to <b>false</b>.
            </value>
            <remarks>
            If a label is rotated by more than 90 degrees it will appear 
            upside down.
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SpecialPosition">
            <summary>
            This base class represents the minimum and maximum stop pins for 
            gauge scales.
            </summary>
            <remarks>
            <b>SpecialPosition</b> exposes a union between a custom tick mark and a custom label 
            of a scale.
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.PinMajorTickMark">
            <summary>
            Represents a pin major tickmark.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CustomTickMark">
            <summary>
            Serves as the base class for all derived tick mark-related classes.
            <seealso cref="T:Dundas.Gauges.WinControl.TickMark"/>
            <seealso cref="T:Dundas.Gauges.WinControl.CircularMinorTickMark"/>
            <seealso cref="T:Dundas.Gauges.WinControl.CircularMajorTickMark"/>
            <seealso cref="T:Dundas.Gauges.WinControl.LinearMinorTickMark"/>
            <seealso cref="T:Dundas.Gauges.WinControl.LinearMajorTickMark"/>
            </summary>
            <remarks>
            Scales and their pins all have associated tick marks.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CustomTickMark.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CustomTickMark.#ctor(System.Object)">
            <summary>
            Constructor that takes a parent object.
            </summary>
            <param name="parent">
            Parent object.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CustomTickMark.#ctor(System.Object,Dundas.Gauges.WinControl.MarkerStyle,System.Single,System.Single)">
            <summary>
            Constructor that takes a parent object, marker style, length and width.
            </summary>
            <param name="parent">
            Parent object.
            </param>
            <param name="shape">
            A <see cref="T:Dundas.Gauges.WinControl.MarkerStyle"/> object that determines the tick mark's shape.
            </param>
            <param name="length">
            A float that represents the tick marks's length.
            </param>
            <param name="width">
            A float that represents the tick marks's width.
            </param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomTickMark.Visible">
            <summary>
            Determines whether or not to show the tick marks.
            </summary>
            <value>
            <b>true</b> if the cap is visible, <b>false</b> if it is not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomTickMark.Placement">
            <summary>
            Determines if the tick mark should touch the scale bar on the 
            inside or the outside.
            <seealso cref="P:Dundas.Gauges.WinControl.CustomTickMark.Placement"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.CustomTickMark.Placement"/> enumeration value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomTickMark.BorderColor">
            <summary>
            The color of the tick mark's border.
            <seealso cref="P:Dundas.Gauges.WinControl.CustomTickMark.BorderWidth"/>
            <seealso cref="P:Dundas.Gauges.WinControl.CustomTickMark.FillColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> object that represents the tick mark's border 
            color. Defaults to <b>Color.Black</b>.
            </value>
            <remarks>
            Setting this property will only have an effect if the tick mark border 
            width is set to a value greater than 0.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomTickMark.BorderWidth">
            <summary>
            The width of the tick mark's border.
            <seealso cref="P:Dundas.Gauges.WinControl.CustomTickMark.BorderColor"/>
            </summary>
            <value>
            An integer that represents the tick mark's 
            width. Defaults to 1.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomTickMark.FillColor">
            <summary>
            Gets or sets the fill color of the tick mark.
            <seealso cref="P:Dundas.Gauges.WinControl.CustomTickMark.EnableGradient"/>
            <seealso cref="P:Dundas.Gauges.WinControl.CustomTickMark.GradientDensity"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            fill color. The default value is <b>Color.WhiteSmoke</b>.
            </value>
            <remarks>
            This property represents the fill color of the tick mark. 
            A gradient will only be displayed if the <see cref="P:Dundas.Gauges.WinControl.CustomTickMark.EnableGradient"/> 
            property is set to <b>true</b>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomTickMark.EnableGradient">
            <summary>
            Determines whether or not a gradient effect is used for the tick mark.
            </summary>
            <value>
            <b>true</b> if the gradient is enabled, <b>false</b> if it is not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomTickMark.GradientDensity">
            <summary>
            Determines the density of the gradient effect. Allowable values are 
            between 0 and 100 percent.
            </summary>
            <value>
            A float that represents the percentage of gradient density.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomTickMark.DistanceFromScale">
            <summary>
            The distance from the tick mark to the scale. Measured as a percent.
            </summary>
            <value>
            A real number that represents the offset of the tick mark from its normal position. 
            Defaults to 0 percent.
            </value>
            <remarks>
            For tick marks for circular scales this is measured as a percent of the radius of the circular 
            scale. For tick marks for linear scales it is measured as a percentage of the associated 
            linear gauge's width or height.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomTickMark.Shape">
            <summary>
            Determines the shape of the tick mark.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.MarkerStyle"/> value that determines the tick mark 
            shape. Defaults to <b>MarkerStyle.Trapezoid</b>. 
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomTickMark.Length">
            <summary>
            Determines the length of the tick mark, measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.CustomTickMark.Width"/>
            </summary>
            <value>
            A float that represents the tick mark length. Defaults 
            to 5 pixels.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomTickMark.Width">
            <summary>
            Determines the width of the tick mark, measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.CustomTickMark.Length"/>
            </summary>
            <value>
            A float that represents the tick mark width. Defaults 
            to 3 pixels.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomTickMark.Image">
            <summary>
            The image to be used as a custom tick mark.
            <seealso cref="P:Dundas.Gauges.WinControl.CustomTickMark.ImageTransColor"/>
            </summary>
            <value>
            A string that represents either the pathname of an image saved to 
            disk, or a named image, stored in the container's <b>NamedImages</b> 
            collection.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomTickMark.ImageTransColor">
            <summary>
            The transparent color of the tick mark image.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value that represents 
            the color of the image that will be displayed as transparent.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomTickMark.ImageHueColor">
            <summary>
            Gets or sets the hue color to be applied to the tick mark image.
            <seealso cref="P:Dundas.Gauges.WinControl.CustomTickMark.Image"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            hue color to be applied to the tick mark image. The default value is 
            <b>Color.Empty</b>.
            </value>
            <remarks>
            The hue color is applied to the entire image in order to modify its hue.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.PinMajorTickMark.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.PinMajorTickMark.#ctor(System.Object)">
            <summary>
            Constructor that takes a parent object.
            </summary>
            <param name="parent">
            A parent object.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.PinMajorTickMark.#ctor(System.Object,Dundas.Gauges.WinControl.MarkerStyle,System.Single,System.Single)">
            <summary>
            Constructor that takes a parent object, marker style, length and width.
            </summary>
            <param name="parent">
            Parent object.
            </param>
            <param name="shape">
            A <see cref="T:Dundas.Gauges.WinControl.MarkerStyle"/> object that determines the tick mark's shape.
            </param>
            <param name="length">
            A float that represents the tick marks's length.
            </param>
            <param name="width">
            A float that represents the tick marks's width.
            </param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PinMajorTickMark.Shape">
            <summary>
            Determines the shape of the tick mark.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.MarkerStyle"/> value that determines the tick mark 
            shape. Defaults to <b>MarkerStyle.Circle</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PinMajorTickMark.Length">
            <summary>
            Determines the length of the tick mark, measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.PinMajorTickMark.Width"/>
            </summary>
            <value>
            A float that represents the tick mark length. Defaults 
            to 6 pixels.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PinMajorTickMark.Width">
            <summary>
            Determines the width of the tick mark, measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.PinMajorTickMark.Length"/>
            </summary>
            <value>
            A float that represents the tick mark width. Defaults 
            to 6 pixels.
            </value>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SpecialPosition.#ctor">
            <summary>
            Initialize new instance of SpecialPosition class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SpecialPosition.#ctor(System.Object)">
            <summary>
            Constructor that takes a named parent object.
            </summary>
            <param name="parent">
            A <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> parent object.
            </param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SpecialPosition.Enable">
            <summary>
            Determines whether the position is enabled.
            </summary>
            If <b>true</b> the position is enabled, if 
            <b>false</b> it is not. Defaults to <b>false</b>.
        </member>
        <member name="P:Dundas.Gauges.WinControl.SpecialPosition.Location">
            <summary>
            Determines the location of the position, relative to the start or 
            the end of the scale.
            </summary>
            <value>
            A float that represents the position's location.
            </value>
            <remarks>
            Measured in either degrees or as a percentage.
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearSpecialPosition">
            <summary>
            This class represents the minimum and maximum stop pins for 
            linear gauge scales.
            </summary>
            <remarks>
            <b>LinearSpecialPosition</b> exposes a union between a custom tick mark and a custom label 
            of a scale.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearSpecialPosition.#ctor">
            <summary>
            Initializes new instance of LinearSpecialPosition class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearSpecialPosition.#ctor(System.Object)">
            <summary>
            Constructor that takes a named parent object.
            </summary>
            <param name="parent">
            A <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> parent object.
            </param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearSpecialPosition.LabelStyle">
            <summary>
            Label style of the position.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.LinearPinLabel"/> object, that represents the labels' style.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularSpecialPosition">
            <summary>
            This class represents the minimum and maximum stop pins for 
            circular gauge scales.
            </summary>
            <remarks>
            <b>CircularSpecialPosition</b> exposes a union between a custom tick mark and a custom label 
            of a scale.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularSpecialPosition.#ctor">
            <summary>
            Initializes new instance of CircularSpecialPosition class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularSpecialPosition.#ctor(System.Object)">
            <summary>
            Constructor that takes a named parent object.
            </summary>
            <param name="parent">
            A <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> parent object.
            </param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularSpecialPosition.LabelStyle">
            <summary>
            Label style of the pin label.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.CircularPinLabel"/> object.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearScaleCollection">
            <summary>
            Collection of <b>LinearScale</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearScale"/>
            </summary>
            <remarks>
            This collection is exposed as the <see cref="P:Dundas.Gauges.WinControl.LinearGauge.Scales"/> 
            property of <see cref="T:Dundas.Gauges.WinControl.LinearGauge"/> objects.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScaleCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScaleCollection.Add(System.String)">
            <summary>
            Adds a <b>LinearScale</b> object specified by name to the end of the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearScale"/>
            <seealso cref="M:Dundas.Gauges.WinControl.LinearScaleCollection.Remove(Dundas.Gauges.WinControl.LinearScale)"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.LinearScale"/> object to be added to 
            the collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.LinearScale"/> object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScaleCollection.Add(Dundas.Gauges.WinControl.LinearScale)">
            <summary>
            Adds a <b>LinearScale</b> object to the end of the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearScale"/>
            <seealso cref="M:Dundas.Gauges.WinControl.LinearScaleCollection.Remove(Dundas.Gauges.WinControl.LinearScale)"/>
            </summary>
            <param name="value">
            The <see cref="T:Dundas.Gauges.WinControl.LinearScale"/> object to be added to 
            the collection.
            </param>
            <returns>
            Returns the position in the collection of the newly added object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScaleCollection.Remove(Dundas.Gauges.WinControl.LinearScale)">
            <summary>
            Removes the specified <b>LinearScale</b> object from the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.LinearScaleCollection.Add(System.String)"/>
            </summary>
            <param name="value">
            <see cref="T:Dundas.Gauges.WinControl.LinearScale"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScaleCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearScaleCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearScaleCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns the LinearScale object
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearScaleCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>LinearScale</b> object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeLabelCollection">
            <summary>
            Collection of <b>GaugeLabel</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.GaugeLabel"/>
            </summary>
            <remarks>
            This collection is exposed as the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Labels"/> 
            property of the root <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> object.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLabelCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLabelCollection.Add(System.String)">
            <summary>
            Adds a <b>GaugeLabel</b> object to the end of the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeLabelCollection.Remove(Dundas.Gauges.WinControl.GaugeLabel)"/>
            <seealso cref="T:Dundas.Gauges.WinControl.GaugeLabel"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.GaugeLabel"/> object to be added to the collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.GaugeLabel"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. 
            The name argument is the <b>Name</b> property of the object being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLabelCollection.Add(Dundas.Gauges.WinControl.GaugeLabel)">
            <summary>
            Adds a <b>GaugeLabel</b> object to the end of the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeLabelCollection.Remove(Dundas.Gauges.WinControl.GaugeLabel)"/>
            <seealso cref="T:Dundas.Gauges.WinControl.GaugeLabel"/>
            </summary>
            <param name="value">
            The <see cref="T:Dundas.Gauges.WinControl.GaugeLabel"/> object to be added to 
            the collection.
            </param>
            <returns>
            Returns the position in the collection of the newly added object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLabelCollection.Remove(Dundas.Gauges.WinControl.GaugeLabel)">
            <summary>
            Removes the specified <b>GaugeLabel</b> object from the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeLabelCollection.Add(System.String)"/>
            <seealso cref="T:Dundas.Gauges.WinControl.GaugeLabel"/>
            </summary>
            <param name="value">
            <see cref="T:Dundas.Gauges.WinControl.GaugeLabel"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLabelCollection.GetDefaultElementName(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overriden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLabelCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overriden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLabelCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            We override this function in order to automatically adjust the
            position of newly inserted elements. Also we set a parent to either
            the default circular gauge or default linear gauge if they exist. 
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabelCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabelCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns the GaugeLabel object
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabelCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>GaugeLabel</b> object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeLabel">
            <summary>
            Represents a gauge label, which can be displayed anywhere within the gauge container.
            </summary>
            <remarks>
            This class is stored in the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Labels"/> property of the 
            root <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> class.
            <p>
            These labels can have a parent element, which effects their coordinate system.
            </p>
            <p>
            Note that there are also custom labels available, which are used by scales (i.e. 
            a different type of label).
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLabel.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeLabel.defaultParent">
            <summary>
            This flag determines if the Parent property has been changed from its
            default value.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLabel.ToString">
            <summary>
            Gets the name of the label.
            </summary>
            <returns>
            A string that represents the label's name.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLabel.GetBackPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            This function returns the graphics path of the gauge label.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <returns>A reference to GraphicsPath.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLabel.GetTextPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            This function returns the graphics path of the gauge label text.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <returns>A reference to GraphicsPath.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLabel.GetBackBrush(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            This function returns the fill brush of the gauge label.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <returns>A reference to Brush.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLabel.GetPen(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            This function returns the pen of the gauge label.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <returns>A reference to Pen.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLabel.Dundas#Gauges#WinControl#ISelectable#DrawSelection(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Render the selection of the given element.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeLabel.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.Parent">
            <summary>
            Determines the parent element of the label, which effects its coordinate system.
            </summary>
            <value>
            String value that represents the parent element of the label.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.ZOrder">
            <summary>
            Determines the Z order of the gauge label in the gauge container.
            </summary>
            <value>
            Integer that represents the Z order of the label.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.ToolTip">
            <summary>
            The tool tip to be displayed when the cursor is over the gauge label. 
            </summary>
            <value>
            String that represents the label's tool tip.
            </value>
            <remarks>
            The user can format the tool tip using #INPUTVALUE, #INPUTVALUE1, etc. 
            The value from the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Values"/> collection will then 
            be displayed.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.Name">
            <summary>
            The name of the gauge label.
            </summary>
            <value>
            String value that represents the name of the label.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.Location">
            <summary>
            The location of the gauge label inside the gauge container. The coordinates are 
            measured as a percentage of the container's width and height.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeLocation"/> object, which represents the location of the gauge 
            label.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.Size">
            <summary>
            The size of the gauge label inside the gauge container. The coordinates are 
            measured as a percentage of the container's width and height.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeSize"/> object, which represents the size of the gauge 
            label.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.TextAlignment">
            <summary>
            Determines how the text is aligned within the gauge label.
            </summary>
            <value>
            A <see cref="T:System.Drawing.ContentAlignment"/> value, which represents the alignment of the 
            label's text.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.Visible">
            <summary>
            Determines the visibility of the gauge label.
            </summary>
            <value>
            If <b>true</b> the label is visible, if <b>false</b> it is not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.Font">
            <summary>
            Specifies the font of the gauge label.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.FontUnit"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.GaugeLabel.Font"/> object, which represents the label's font.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.ResizeMode">
            <summary>
            Determines if the font will be automatically resized so that the text will 
            always fit.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.GaugeLabel.ResizeMode"/> value, which determines how resizing occurs.
            </value>
             <remarks>
            If ResizeMode is set to <b>None</b> then the <see cref="P:Dundas.Gauges.WinControl.GaugeLabel.Font"/> and <see cref="P:Dundas.Gauges.WinControl.GaugeLabel.FontUnit"/> properties determine the size of the text.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.FontUnit">
            <summary>
            Determines if the font size is measured as a percentage of the parent or in units 
            specified by the <b>Font.Unit</b> property.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.GaugeLabel.FontUnit"/> object, which determines the font units.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.BorderColor">
            <summary>
            Gets or sets the color of the gauge label's border.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.BorderWidth"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.BorderStyle"/>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> object that represents the 
            color of the gauge label's border. The default value is <b>Color.Black</b>.
            </value>
            <remarks>
            This property represents the color of the gauge label's border. 
            This property will not have any effect if the <see cref="P:Dundas.Gauges.WinControl.GaugeLabel.BorderWidth"/> 
            property is set to 0.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.BorderStyle">
            <summary>
            The line style of the gauge label's border.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.BorderWidth"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.BorderColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeDashStyle"/> object that represents the 
            style of the gauge label's border. The default value is <b>GaugeDashStyle.Solid</b>.
            </value>
            <remarks>
            This property represents the style of the gauge label's border. 
            This property will not have any effect if the <see cref="P:Dundas.Gauges.WinControl.GaugeLabel.BorderWidth"/> 
            property is set to 0.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.BorderWidth">
            <summary>
            The line width of the gauge label's border, measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.BorderStyle"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.BorderColor"/>
            </summary>
            <value>
            An integer that represents the width of the label's border. Defaults 
            to 0.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.BackColor">
            <summary>
            Gets or sets the back color of the gauge label.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> object that represents the
            back color. The default value is <b>Color.Empty</b>
            </value>
            <remarks>
            This property represents the background color.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.TextColor">
            <summary>
            Gets or sets the text color of the gauge label.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> object that represents the 
            the text color. The default value is <b>Color.White</b>.
            </value>
            <remarks>
            This property represents the text color of the gauge label.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.BackGradientType">
            <summary>
            The gradient type of the gauge label's background.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.BackColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GradientType"/> value that determines the gradient type. Defaults 
            to <b>GradientType.None</b>.
            </value>
            <remarks>
            Colors used are determined by the <see cref="P:Dundas.Gauges.WinControl.GaugeLabel.BackGradientEndColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.GaugeLabel.BackColor"/> properties.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.BackGradientEndColor">
            <summary>
            Gets or sets the end color of the label's background gradient.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.BackGradientType"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.BackHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> object that represents the 
            end color of the label's back gradient. 
            The default value is <b>Color.Empty</b>.
            </value>
            <remarks>
            This property represents end color of the label's back gradient, and 
            is used if the <see cref="P:Dundas.Gauges.WinControl.GaugeLabel.BackGradientType"/>property 
            is a valid gradient. In addition to that it is also used as the 
            hatch foreground color in case a hatch style is selected via 
            the <see cref="P:Dundas.Gauges.WinControl.GaugeLabel.BackHatchStyle"/> property.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.BackHatchStyle">
            <summary>
            The hatch style of the gauge label back.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.BackGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeHatchStyle"/> value, which represents the label's 
            hatch style. Defaults to <b>GaugeHatchStyle.None</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.Text">
            <summary>
            The text to be displayed for the gauge label.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.Font"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.FontUnit"/>
            </summary>
            <value>
            A string that represents the label's text.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.BackShadowOffset">
            <summary>
            Determines how far to the right and down the back shadow will be. 
            Measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.TextShadowOffset"/>
            </summary>
            <value>
            A integer that represents the shadow offset, in pixels. Defaults to 0.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.TextShadowOffset">
            <summary>
            Determines how far to the right and down the text shadow will be.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeLabel.BackShadowOffset"/>
            </summary>
            <value>
            A integer that represents the text shadow offset, in pixels. Defaults to 0.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.Angle">
            <summary>
            The angle of rotation (0 to 360 degrees).
            </summary>
            <value>
            A real number that represents the angle of rotation. Defaults 
            to 0 degrees.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.Selected">
            <summary>
            Determines if the gauge label visually appears selected.
            </summary>
            <value>
            If <b>true</b> the gauge label appears selected. Default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.Position">
            <summary>
            This is a wrapper property for location and size.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeLabel.ParentObject">
            <summary>
            Gets object reference to the parent object. If there is not valid parent element the result is null.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeImageCollection">
            <summary>
            Collection of <b>GaugeImage</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.GaugeImage"/>
            </summary>
            <remarks>
            This collection is exposed as the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Images"/> 
            property of the root <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> object.
            <p>
            These images can be either images saved to disk, or a <see cref="T:Dundas.Gauges.WinControl.NamedImage"/> object 
            that has been added to the container's <b>NamedImages</b> collection.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeImageCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeImageCollection.Add(System.String)">
            <summary>
            Used by <b>GaugeImageCollection</b> to add an item to the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.GaugeImage"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeImageCollection.Remove(Dundas.Gauges.WinControl.GaugeImage)"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.GaugeImage"/> object to be added to the 
            collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.GaugeImage"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. 
            The name argument is the <b>Name</b> property of the object being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeImageCollection.Add(Dundas.Gauges.WinControl.GaugeImage)">
            <summary>
            Adds a <b>GaugeImage</b> object to the end of the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.GaugeImage"/>
            </summary>
            <param name="value">
            The <see cref="T:Dundas.Gauges.WinControl.GaugeImage"/> object to be added to 
            the collection.
            </param>
            <returns>
            Returns the position in the collection of the newly added object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeImageCollection.Remove(Dundas.Gauges.WinControl.GaugeImage)">
            <summary>
            Removes the specified <b>GaugeImage</b> object from the collection.
            </summary>
            <param name="value">
            <see cref="T:Dundas.Gauges.WinControl.GaugeImage"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeImageCollection.GetDefaultElementName(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeImageCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeImageCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            We override this function in order to automatically adjust the
            position of newly inserted elements. Also we set a parent to either
            the default circular gauge or default linear gauge if they exist. 
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImageCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImageCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns the GaugeImage object
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImageCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>GaugeImage</b> object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeDashStyle">
            <summary>
            Gauge line style enumeration.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeDashStyle.NotSet">
            <summary>
            Style not set.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeDashStyle.Dash">
            <summary>
            Specifies a line consisting of dashes. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeDashStyle.DashDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeDashStyle.DashDotDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot-dot. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeDashStyle.Dot">
            <summary>
            Specifies a line consisting of dots. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeDashStyle.Solid">
            <summary>
            Specifies a solid line. 
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeImageAlign">
            <summary>
            Gauge image alignment type.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageAlign.TopLeft">
            <summary>
            Image aligned to the top-left corner.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageAlign.Top">
            <summary>
            Image aligned to the top boundary.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageAlign.TopRight">
            <summary>
            Image aligned to the top-right corner.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageAlign.Right">
            <summary>
            Image aligned to the right boundary.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageAlign.BottomRight">
            <summary>
            Image aligned to the bottom-right corner.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageAlign.Bottom">
            <summary>
            Image aligned to the bottom boundary.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageAlign.BottomLeft">
            <summary>
            Image aligned to the bottom-left corner.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageAlign.Left">
            <summary>
            Image aligned to the left boundary.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageAlign.Center">
            <summary>
            Image aligned in the center.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeImageWrapMode">
            <summary>
            Specifies how a texture or gradient is tiled when 
            it is larger than the area being filled.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageWrapMode.Scaled">
            <summary>
            Clamps the texture or gradient to the object boundary.
            </summary>		
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageWrapMode.Tile">
            <summary>
            Tiles the gradient or texture.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageWrapMode.TileFlipX">
            <summary>
            Reverses the texture or gradient horizontally and 
            then tiles the texture or gradient.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageWrapMode.TileFlipXY">
            <summary>
            Reverses the texture or gradient horizontally and 
            vertically and then tiles the texture or gradient.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageWrapMode.TileFlipY">
            <summary>
            Reverses the texture or gradient vertically and 
            then tiles the texture or gradient.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageWrapMode.Unscaled">
            <summary>
            Unscaled.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeHatchStyle">
            <summary>
            Gauge hatching style.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.None">
            <summary>
            No hatching.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.BackwardDiagonal">
            <summary>
            Backward and diagonal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Cross">
            <summary>
            Cross.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.DarkDownwardDiagonal">
            <summary>
            Dark downward and diagonal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.DarkHorizontal">
            <summary>
            Dark and horizontal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.DarkUpwardDiagonal">
            <summary>
            Dark, upward and diagonal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.DarkVertical">
            <summary>
            Dark and vertical.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.DashedDownwardDiagonal">
            <summary>
            Dashed, downward and diagonal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.DashedHorizontal">
            <summary>
            Dashed and horizontal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.DashedUpwardDiagonal">
            <summary>
            Dashed, upward and diagonal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.DashedVertical">
            <summary>
            Dashed and vertical.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.DiagonalBrick">
            <summary>
            Diagonal brick.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.DiagonalCross">
            <summary>
            Diagonal cross.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Divot">
            <summary>
            Divot.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.DottedDiamond">
            <summary>
            Dotted diamond.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.DottedGrid">
            <summary>
            Dotted grid.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.ForwardDiagonal">
            <summary>
            Forward and diagonal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Horizontal">
            <summary>
            Horizontal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.HorizontalBrick">
            <summary>
            Horizontal brick.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.LargeCheckerBoard">
            <summary>
            Large checker board.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.LargeConfetti">
            <summary>
            Large confetti.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.LargeGrid">
            <summary>
            Large grid.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.LightDownwardDiagonal">
            <summary>
            Light, downward and diagonal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.LightHorizontal">
            <summary>
            Light and horizontal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.LightUpwardDiagonal">
            <summary>
            Light, upward and diagonal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.LightVertical">
            <summary>
            Light vertical.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.NarrowHorizontal">
            <summary>
            Narrow horizontal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.NarrowVertical">
            <summary>
            Narrow vertical.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.OutlinedDiamond">
            <summary>
            Outlined diamond.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Percent05">
            <summary>
            Percentage, 05.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Percent10">
            <summary>
            Percentage, 10.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Percent20">
            <summary>
            Percentage, 20.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Percent25">
            <summary>
            Percentage, 25.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Percent30">
            <summary>
            Percentage, 30.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Percent40">
            <summary>
            Percentage, 40.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Percent50">
            <summary>
            Percentage, 50.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Percent60">
            <summary>
            Percentage, 60.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Percent70">
            <summary>
            Percentage, 70.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Percent75">
            <summary>
            Percentage, 75.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Percent80">
            <summary>
            Percentage, 80.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Percent90">
            <summary>
            Percentage, 90.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Plaid">
            <summary>
            Plaid.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Shingle">
            <summary>
            Shingle.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.SmallCheckerBoard">
            <summary>
            Small checker board.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.SmallConfetti">
            <summary>
            Small confetti.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.SmallGrid">
            <summary>
            Small grid.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.SolidDiamond">
            <summary>
            Solid diamond.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Sphere">
            <summary>
            Sphere.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Trellis">
            <summary>
            Trellis.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Vertical">
            <summary>
            Vertical.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Wave">
            <summary>
            Wave.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.Weave">
            <summary>
            Weave.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.WideDownwardDiagonal">
            <summary>
            Wide, downward and diagonal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.WideUpwardDiagonal">
            <summary>
            Wide, upward and diagonal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeHatchStyle.ZigZag">
            <summary>
            Zig zag.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.AntiAlias">
            <summary>
            Anti aliasing mode.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.AntiAlias.On">
            <summary>
            Anti aliasing is enabled.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.AntiAlias.Off">
            <summary>
            Anti aliasing is disabled.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.TextAntiAliasingQuality">
            <summary>
            Text anti aliasing quality.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.TextAntiAliasingQuality.Normal">
            <summary>
            Normal anti aliasing quality.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.TextAntiAliasingQuality.High">
            <summary>
            High anti aliasing quality.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.TextAntiAliasingQuality.SystemDefault">
            <summary>
            System default anti aliasing quality.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.AntiAliasing">
            <summary>
            Anti aliasing flags.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.AntiAliasing.None">
            <summary>
            No anti aliasing.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.AntiAliasing.Text">
            <summary>
            Use anti aliasing when drawing text.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.AntiAliasing.Graphics">
            <summary>
            Use anti aliasing when drawing graphics primitives (lines, rectangle, ...)
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.AntiAliasing.All">
            <summary>
            Use anti alias for everything.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GradientType">
            <summary>
            Gradient types.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GradientType.None">
            <summary>
            Disabled.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GradientType.LeftRight">
            <summary>
            Specifies a gradient from Left to Right.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GradientType.TopBottom">
            <summary>
            Specifies a gradient from Top to Bottom.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GradientType.Center">
            <summary>
            Specifies a gradient from Center.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GradientType.DiagonalLeft">
            <summary>
            Specifies a gradient from Top Left to Bottom Right.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GradientType.DiagonalRight">
            <summary>
            Specifies a gradient from Top Right to Bottom Left.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GradientType.HorizontalCenter">
            <summary>
            Specifies a gradient from Center to Left and Right.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GradientType.VerticalCenter">
            <summary>
            Specifies a gradient from Center to Top and Bottom.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.RangeGradientType">
            <summary>
            Gradient types.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RangeGradientType.None">
            <summary>
            Disabled.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RangeGradientType.StartToEnd">
            <summary>
            Specifies a gradient from the range start to the range end.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RangeGradientType.LeftRight">
            <summary>
            Specifies a gradient from Left to Right.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RangeGradientType.TopBottom">
            <summary>
            Specifies a gradient from Top to Bottom.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RangeGradientType.Center">
            <summary>
            Specifies a gradient from Center.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RangeGradientType.DiagonalLeft">
            <summary>
            Specifies a gradient from Top Left to Bottom Right.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RangeGradientType.DiagonalRight">
            <summary>
            Specifies a gradient from Top Right to Bottom Left.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RangeGradientType.HorizontalCenter">
            <summary>
            Specifies a gradient from Center to Left and Right.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RangeGradientType.VerticalCenter">
            <summary>
            Specifies a gradient from Center to Top and Bottom.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.Placement">
            <summary>
            Placement enumeration.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.Placement.Inside">
            <summary>
            The item is on the inside of the scale.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.Placement.Outside">
            <summary>
            The item is on the outside of the scale.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.Placement.Cross">
            <summary>
            The item is right on the scale bar.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ImageType">
            <summary>
            Enumeration of supported image types.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ImageType.Bmp">
            <summary>
            BMP image format.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ImageType.Jpeg">
            <summary>
            Jpeg image format.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ImageType.Png">
            <summary>
            Png image format.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ImageType.Emf">
            <summary>
            Enhanced Meta File (Emf) image format.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.RenderType">
            <summary>
            Image rendering type.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RenderType.ImageTag">
            <summary>
            An image is rendered as image tag.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RenderType.InputTag">
            <summary>
            An image is rendered as an input tag with type=image.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RenderType.BinaryStreaming">
            <summary>
            An image is streamed back directly.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RenderType.ImageMap">
            <summary>
            An image map is rendered.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RenderType.RealTimeStreaming">
            <summary>
            The image is streamed directly and is updated at a specified interval.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeOrientation">
            <summary>
            Represents a linear gauge orientation.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeOrientation.Horizontal">
            <summary>
            The linear gauge is horizontal.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeOrientation.Vertical">
            <summary>
            The linear gauge is vertical.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeOrientation.Auto">
            <summary>
            The orientation is automatically determined based on the 
            width and the height of the gauge.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularPointerType">
            <summary>
            Types of circular pointers, associated with circular gauges.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CircularPointerType.Needle">
            <summary>
            The pointer looks like a standard gauge needle, which
            also contains a needle cap. The needle cap can be made
            invisible by setting the <see cref="P:Dundas.Gauges.WinControl.CircularPointer.NeedleCapVisible"/>
            property to <b>false</b>.There
            are several properties that only apply to a Needle style. They all
            have the "Needle" prefix.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CircularPointerType.Marker">
            <summary>
            The pointer is a marker. The shape of the marker can be selected
            using the <see cref="P:Dundas.Gauges.WinControl.CircularPointer.MarkerStyle"/> property. There
            are several properties that only apply to a Marker style. They all
            have the "Marker" prefix.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CircularPointerType.Bar">
            <summary>
            The pointer is a bar. The bar can either start at 0 or at the
            beginning of the scale. There are several properties that only apply to
            a bar style.  All have the "Bar" prefix.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.BackFrameStyle">
            <summary>
            Frame styles.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameStyle.None">
            <summary>
            There is no frame.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameStyle.Simple">
            <summary>
            Very simple frame.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameStyle.Edged">
            <summary>
            A frame with a single edge.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.BackFrameShape">
            <summary>
            Shapes of frames.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.Circular">
            <summary>
            The shape of the frame is a circle.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.Rectangular">
            <summary>
            The shape of the frame is a rectangle.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.RoundedRectangular">
            <summary>
            The shape of the frame is a rounded rectangle.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.AutoShape">
            <summary>
            The shape of the frame is automatically determined 
            in such a way that it would encompass all the 
            elements of the gauge or gauge container.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomCircular1">
            <summary>
            A custom circular shape.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomCircular2">
            <summary>
            A custom circular shape.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomCircular3">
            <summary>
            A custom circular shape.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomCircular4">
            <summary>
            A custom circular shape.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomCircular5">
            <summary>
            A custom circular shape.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomCircular6">
            <summary>
            A custom circular shape.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomCircular7">
            <summary>
            A custom circular shape.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomCircular8">
            <summary>
            A custom circular shape.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomCircular9">
            <summary>
            A custom circular shape.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomCircular10">
            <summary>
            A custom circular shape.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomCircular11">
            <summary>
            A custom circular shape.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomCircular12">
            <summary>
            A custom circular shape.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomCircular13">
            <summary>
            A custom circular shape.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomCircular14">
            <summary>
            A custom circular shape.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomCircular15">
            <summary>
            A custom circular shape.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularN1">
            <summary>
            A semi-circular custom shape facing north.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularN2">
            <summary>
            A semi-circular custom shape facing north.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularN3">
            <summary>
            A semi-circular custom shape facing north.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularN4">
            <summary>
            A semi-circular custom shape facing north.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularS1">
            <summary>
            A semi-circular custom shape facing south.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularS2">
            <summary>
            A semi-circular custom shape facing south.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularS3">
            <summary>
            A semi-circular custom shape facing south.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularS4">
            <summary>
            A semi-circular custom shape facing south.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularE1">
            <summary>
            A semi-circular custom shape facing east.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularE2">
            <summary>
            A semi-circular custom shape facing east.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularE3">
            <summary>
            A semi-circular custom shape facing east.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularE4">
            <summary>
            A semi-circular custom shape facing east.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularW1">
            <summary>
            A semi-circular custom shape facing west.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularW2">
            <summary>
            A semi-circular custom shape facing west.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularW3">
            <summary>
            A semi-circular custom shape facing west.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomSemiCircularW4">
            <summary>
            A semi-circular custom shape facing west.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularNE1">
            <summary>
            A quarter-circular custom shape facing north-east.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularNE2">
            <summary>
            A quarter-circular custom shape facing north-east.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularNE3">
            <summary>
            A quarter-circular custom shape facing north-east.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularNE4">
            <summary>
            A quarter-circular custom shape facing north-east.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularNW1">
            <summary>
            A quarter-circular custom shape facing north-west.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularNW2">
            <summary>
            A quarter-circular custom shape facing north-west.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularNW3">
            <summary>
            A quarter-circular custom shape facing north-west.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularNW4">
            <summary>
            A quarter-circular custom shape facing north-west.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularSE1">
            <summary>
            A quarter-circular custom shape facing south-east.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularSE2">
            <summary>
            A quarter-circular custom shape facing south-east.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularSE3">
            <summary>
            A quarter-circular custom shape facing south-east.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularSE4">
            <summary>
            A quarter-circular custom shape facing south-east.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularSW1">
            <summary>
            A quarter-circular custom shape facing south-west.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularSW2">
            <summary>
            A quarter-circular custom shape facing south-west.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularSW3">
            <summary>
            A quarter-circular custom shape facing south-west.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrameShape.CustomQuarterCircularSW4">
            <summary>
            A quarter-circular custom shape facing south-west.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CapStyle">
            <summary>
            Used to determine the style of the needle cap.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CapStyle.Simple">
            <summary>
            Simple needle cap where the user can set the fill gradient or fill hatch style.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CapStyle.CustomCap1">
            <summary>
            A custom needle cap.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CapStyle.CustomCap2">
            <summary>
            A custom needle cap.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CapStyle.CustomCap3">
            <summary>
            A custom needle cap.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CapStyle.CustomCap4">
            <summary>
            A custom needle cap.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CapStyle.CustomCap5">
            <summary>
            A custom needle cap.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CapStyle.CustomCap6">
            <summary>
            A custom needle cap.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CapStyle.CustomCap7">
            <summary>
            A custom needle cap.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CapStyle.CustomCap8">
            <summary>
            A custom needle cap.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.PinPointPosition">
            <summary>
            Determines which point will remain pinned when an element's size changes.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PinPointPosition.TopLeft">
            <summary>
            The top-left point will be pinned.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PinPointPosition.TopCenter">
            <summary>
            The top-center point will be pinned.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PinPointPosition.Center">
            <summary>
            The center point will be pinned.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PinPointPosition.TopRight">
            <summary>
            The top-right point will be pinned.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PinPointPosition.CenterLeft">
            <summary>
            The center-left point will be pinned.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PinPointPosition.CenterRight">
            <summary>
            The center-right point will be pinned.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PinPointPosition.BottomLeft">
            <summary>
            The bottom-left point will be pinned.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PinPointPosition.BottomCenter">
            <summary>
            The bottom-center point will be pinned.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.PinPointPosition.BottomRight">
            <summary>
            The bottom-right point will be pinned.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.FontUnit">
            <summary>
            Represents various font units.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.FontUnit.Percent">
            <summary>
            The font size is a percentage.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.FontUnit.Default">
            <summary>
            The font size in units specified by the <b>Font.Unit</b> property.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MessageType.NamedElementAdded">
            <summary>
            A NamedElement was added to a collection.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MessageType.NamedElementRemove">
            <summary>
            A NamedElement is about to be removed from a collection.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MessageType.NamedElementRename">
            <summary>
            A NamedElement is about to be renamed.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MessageType.DataInvalidated">
            <summary>
            A data need to be invalidated.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MessageType.PrepareSnapShot">
            <summary>
            Prepare for snapshot.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ResizeMode">
            <summary>
            Represents resize modes.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ResizeMode.None">
            <summary>
            The content will not be resized. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ResizeMode.AutoFit">
            <summary>
            The content will be resized so that it fits in the 
            available space.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ThermometerStyle">
            <summary>
            Represents the style of a thermometer.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ThermometerStyle.Standard">
            <summary>
            The thermometer has a standard look with a circular bulb.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ThermometerStyle.Flask">
            <summary>
            The thermometer looks like a flask.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GlassEffect">
            <summary>
            Represents the glass effect of the frame.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GlassEffect.None">
            <summary>
            There is no glass effect.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GlassEffect.Simple">
            <summary>
            The glass effect is a simple reflection.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.AutoBool">
            <summary>
            Three state boolean (true, false, auto).
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.AutoBool.Auto">
            <summary>
            Auto mode.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.AutoBool.True">
            <summary>
            True.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.AutoBool.False">
            <summary>
            False.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeCursor">
            <summary>
            An enumeration of cursors which is identical to the collection provided by the
            <see cref="T:System.Windows.Forms.Cursors"/> class. This enumeration is used to specify
            the cursor appearance for pointers and knobs when the Dundas Gauge for ASP.NET
            is rendered as a Windows Forms control in a web browser.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.AppStarting">
            <summary>
            The cursor that appears when an application starts.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.Arrow">
            <summary>
            The arrow cursor. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.Cross">
            <summary>
            The crosshair cursor.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.Default">
            <summary>
            The default cursor, which is usually an arrow cursor.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.Hand">
            <summary>
            The hand cursor, typically used when hovering over a Web link.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.Help">
            <summary>
            The Help cursor, which is a combination of an arrow and a question mark.
            </summary>	
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.HSplit">
            <summary>
            The cursor that appears when the mouse is positioned over a horizontal splitter bar.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.IBeam">
            <summary>
            The I-beam cursor, which is used to show where the text cursor appears when the mouse is clicked.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.No">
            <summary>
            The cursor that indicates that a particular region is invalid for the current operation. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.NoMove2D">
            <summary>
            The cursor that appears during wheel operations when the mouse is not moving, but the window can be scrolled in both a horizontal and vertical direction.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.NoMoveHoriz">
            <summary>
            The cursor that appears during wheel operations when the mouse is not moving, but the window can be scrolled in a horizontal direction.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.NoMoveVert">
            <summary>
            The cursor that appears during wheel operations when the mouse is not moving, but the window can be scrolled in a vertical direction. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.PanEast">
            <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally to the right. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.PanNE">
            <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically upward and to the right. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.PanNorth">
            <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling vertically in an upward direction. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.PanNW">
            <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically upward and to the left. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.PanSE">
            <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically downward and to the right. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.PanSouth">
            <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling vertically in a downward direction. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.PanSW">
            <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally and vertically downward and to the left. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.PanWest">
            <summary>
            The cursor that appears during wheel operations when the mouse is moving and the window is scrolling horizontally to the left. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.SizeAll">
            <summary>
            The four-headed sizing cursor, which consists of four joined arrows that point north, south, east, and west. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.SizeNESW">
            <summary>
            The two-headed diagonal (northeast/southwest) sizing cursor.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.SizeNS">
            <summary>
            The two-headed vertical (north/south) sizing cursor. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.SizeNWSE">
            <summary>
            The two-headed diagonal (northwest/southeast) sizing cursor.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.SizeWE">
            <summary>
            The two-headed horizontal (west/east) sizing cursor. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.UpArrow">
            <summary>
            The up arrow cursor, typically used to identify an insertion point.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.VSplit">
            <summary>
            The cursor that appears when the mouse is positioned over a vertical splitter bar.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCursor.WaitCursor">
            <summary>
            The wait cursor, typically an hourglass shape.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CustomLabel">
            <summary>
            Represents a custom label, which is associated with a scale.
            </summary>
            <remarks>
            Custom labels are stored in the <b>Scale.CustomLabels</b> 
            collection.
            <p>
            Custom labels can be used by both <see cref="T:Dundas.Gauges.WinControl.LinearScale"/> and 
            <see cref="T:Dundas.Gauges.WinControl.CircularScale"/> objects.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CustomLabel.#ctor">
            <summary>
            Initializes a new instance of CustomLabel class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CustomLabel.ToString">
            <summary>
            Returns the name of the object as a string.
            </summary>
            <returns>
            String that represents the name of the object.
            </returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabel.Name">
            <summary>
            The name of this custom label.
            </summary>
            <value>
            String value that represent's the label's name.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabel.Value">
            <summary>
            The position along the scale where the custom label will be displayed.
            </summary>
            <value>
            Double that represents the label's position along a scale. Defaults to zero.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabel.TickMarkStyle">
            <summary>
            The tick mark attributes for this custom label.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.CustomTickMark"/> enumeration value.
            </value>
            <remarks>
            The tick marks used by the associated scale at the location 
            where the custom label is displayed can be overridden 
            using this property.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabel.Text">
            <summary>
            The text to be displayed for the custom label.
            <seealso cref="P:Dundas.Gauges.WinControl.CustomLabel.TextColor"/>
            </summary>
            <value>
            String representing the custom label's text.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabel.Font">
            <summary>
            Specifies the font of this custom label.
            </summary>
            <value>
            <see cref="P:Dundas.Gauges.WinControl.CustomLabel.Font"/> object to be used for the font.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabel.FontUnit">
            <summary>
            Determines if the font size is measured as a percentage of the parent or in units 
            specified by the <b>Font.Unit</b> property.
            <seealso cref="P:Dundas.Gauges.WinControl.CustomLabel.Font"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.CustomLabel.FontUnit"/> object, which determines the font units.
            </value>
            <remarks>
            If ResizeMode is set to <b>None</b> then the <see cref="P:Dundas.Gauges.WinControl.CustomLabel.Font"/> and <see cref="P:Dundas.Gauges.WinControl.CustomLabel.FontUnit"/> properties determine the size of the text.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabel.TextColor">
            <summary>
            Gets or sets the text color of the custom label.
            <seealso cref="P:Dundas.Gauges.WinControl.CustomLabel.Text"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value that represents the 
            the text color. The default value is <b>Color.Black</b>.
            </value>
            <remarks>
            This property represents the text color of the custom label.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabel.Visible">
            <summary>
            Determines the visibility of the label.
            </summary>
            <value>
            <b>true</b> if the label is visible, otherwise <b>false.</b>  Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabel.Placement">
            <summary>
            Determines the placement of the label, relative to its scale.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.CustomLabel.Placement"/> value. Can be inside, cross, etc.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabel.RotateLabel">
            <summary>
            Determines if the label is rotated along with the scale. 
            </summary>
            <value>
            If <b>true</b> the label will be rotated along with the scale. Defaults 
            to <b>false</b>.
            </value>
            <remarks>
            If <b>true</b> for a linear scale the label will be rotated 
            by 90 degrees, relative to the scale.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabel.AllowUpsideDown">
            <summary>
            Determines if the label can be rotated by more than 90 degrees.
            </summary>
            <value>
            If <b>true</b> the label can be displayed upside down, if <b>false</b> it 
            cannot. Defaults to <b>false</b>.
            </value>
            <remarks>
            If the label is rotated by more than 90 degrees it will be displayed 
            upside down.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabel.FontAngle">
            <summary>
            An additional, fixed amount in degrees by which the label will 
            be rotated.
            </summary>
            <value>
            A float that represents the degrees of additional rotation. Defaults to 
            zero.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabel.DistanceFromScale">
            <summary>
            The amount by which the label will be offset from its normal position. Measured 
            as a percentage.
            </summary>
            <value>
            A float, that represents the distance of the label from its associated scale.
            </value>
            <remarks>
            If used for a linear scale the offset is measured as a percentage of the width or 
            height of the scale, whichever is smaller. If used for a circular scale it is measured as 
            a percentage of the scale radius.
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CustomLabelConverter">
            <summary>
            The type converter implementation of the CustomLabel class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CustomLabelConverter.#ctor">
            <summary>
            Initializes a new instance of Converter class.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LocationConverter">
            <summary>
            Element location converter.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LocationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertFrom method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="sourceType">Conversion source type.</param>
            <returns>Indicates if conversion is possible.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LocationConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="destinationType">Destination type.</param>
            <returns>Indicates if conversion is possible.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LocationConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Conversion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LocationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Overrides the ConvertFrom method of TypeConverter.
            Converts from string with comma separated values.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Indicates if conversion is possible.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SizeConverter">
            <summary>
            Element location converter.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertFrom method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="sourceType">Conversion source type.</param>
            <returns>Indicates if conversion is possible.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="destinationType">Destination type.</param>
            <returns>Indicates if conversion is possible.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Conversion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Overrides the ConvertFrom method of TypeConverter.
            Converts from string with comma separated values.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Indicates if conversion is possible.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ImageUIDialog">
            <summary>
            The is a Windows Form which is dialog 
            for manipulation with Gauge NamedImages
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageUIDialog.#ctor">
            <summary>
            Initializes new instance of ImageUIDialog class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageUIDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageUIDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageUIDialog.btnAdd_Click(System.Object,System.EventArgs)">
            <summary>
            Handless "Add" button to add images into NamedImages collection.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageUIDialog.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Deletes selected NamedImage from Gauge, NamedImages collection
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageUIDialog.Execute(Dundas.Gauges.WinControl.GaugeCore,System.String)">
            <summary>
            Main method for using this dialog
            </summary>
            <param name="gauge"></param>
            <param name="selectedValue"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageUIDialog.InitImages">
            <summary>
            Initialize the ImageList.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ImageUIDialog.SelectedImage">
            <summary>
            Gets the selected image name
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.RealTimeValue">
            <summary>
            The RealTimeValue class is used by the GaugeContainer.RealTimeData
            event to allow the server component to pass real time data to the Windows
            Forms control that is hosted in a web browser. It has properties for specifying
            the name of the <see cref="T:Dundas.Gauges.WinControl.InputValue"/> object, the actual value as well
            as a time stamp.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RealTimeValue.#ctor">
            <summary>
            Creates a new instance of the RealTimeValue class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RealTimeValue.#ctor(System.String,System.Double,System.DateTime)">
            <summary>
            Creates a new instance of the RealTimeValue class and sets all properties
            to the specified values.
            </summary>
            <param name="inputValueName">Specifies the name of the <see cref="T:Dundas.Gauges.WinControl.InputValue"/>
            object from the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Values"/> collection,
            which will receive this real-time value.</param>
            <param name="value">Specifies the actual value.</param>
            <param name="timeStamp">Specifies the time stamp of the real-time value.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RealTimeValue.InputValueName">
            <summary>
            Specifies the name of the <see cref="T:Dundas.Gauges.WinControl.InputValue"/>
            object from the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Values"/> collection,
            which will receive this real-time value.
            </summary>
            <value>A string representing the name. The default value is
            <b>"Default"</b>.</value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RealTimeValue.Value">
            <summary>
            Specifies the actual value.
            </summary>
            <value>A <b>double</b> representing the value. Defaults to 0.</value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RealTimeValue.TimeStamp">
            <summary>
            Specifies the time stamp of the real-time value.
            </summary>
            <value>
            A <see cref="T:System.DateTime"/> representing the time stamp. The
            default value is <see cref="P:System.DateTime.Now"/>, which represents
            the time when the RealTimeValue class was created.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.RealTimeValueCollection">
            <summary>
            The RealTimeValueCollection class is used by the GaugeContainer.RealTimeData
            event to allow the server component to pass real time data to the Windows
            Forms control that is hosted in a web browser. This class is one of the arguments
            passed when the GaugeContainer.RealTimeData event if handled.
            In order for the user to provide real time data, he/she must add objects of type
            <see cref="T:Dundas.Gauges.WinControl.RealTimeValue"/> to this collection.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RealTimeValueCollection.#ctor">
            <summary>
            Creates a new instance of the RealTimeValueCollection class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RealTimeValueCollection.Add(System.String,System.Double)">
            <summary>
            Adds a real time value to the collection.
            </summary>
            <param name="inputValueName">
            Specifies the name of the <see cref="T:Dundas.Gauges.WinControl.InputValue"/>
            object from the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Values"/> collection,
            which will receive this real-time value.
            </param>
            <param name="value">Specifies the actual value.</param>
            <returns>An integer representing the index of the newlly added value.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RealTimeValueCollection.Add(Dundas.Gauges.WinControl.RealTimeValue)">
            <summary>
            Add an instance of <see cref="T:Dundas.Gauges.WinControl.RealTimeValue"/> to this collection.
            </summary>
            <param name="value">The object of type <see cref="T:Dundas.Gauges.WinControl.RealTimeValue"/>
            that is to be added to this collection.</param>
            <returns>An integer representing the index of the newlly added value.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RealTimeValueCollection.Add(System.String,System.Double,System.DateTime)">
            <summary>
            Adds a real time value to the collection.
            </summary>
            <param name="inputValueName">
            Specifies the name of the <see cref="T:Dundas.Gauges.WinControl.InputValue"/>
            object from the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Values"/> collection,
            which will receive this real-time value.
            </param>
            <param name="value">Specifies the actual value.</param>
            <param name="timeStamp">Specifies the time stamp of the real-time value.</param>
            <returns>An integer representing the index of the newlly added value.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RealTimeValueCollection.Remove(Dundas.Gauges.WinControl.RealTimeValue)">
            <summary>
            Removes the specified object from the collection. 
            </summary>
            <param name="value">The object of type <see cref="T:Dundas.Gauges.WinControl.RealTimeValue"/>
            that is to be removed from this collection.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RealTimeValueCollection.Item(System.Int32)">
            <summary>
            Integer indexer of this collection.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValueCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> elements.
            </summary>
            <remarks>
            <b>CalculatedValueCollection</b> provides an <see cref="T:System.Collections.ArrayList"/> 
            that is strongly typed for <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> elements.
            <p>
            The <b>CalculatedValue.Name</b> property of the 
            <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> class can be used as a key 
            to locate elements in the <b>CalculatedValueCollection</b>.
            </p>
            <p>
            The collection cannot contain multiple identical keys. Access by key 
            is an O(<em>N</em>) operation, where <em>N</em> is the current value of the 
            <b>CalculatedValueCollection.Count</b> property.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Initializes new CalculatedValueCollection reference
            </summary>
            <param name="parent">Parent object</param>
            <param name="common"><see cref="T:Dundas.Gauges.WinControl.CommonElements"/> object</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueCollection.Add(System.String)">
            <summary>
            Used by <b>InputValueCollection</b> to add an item to the collection.
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> object to be added to the collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. 
            The name argument is the <b>Name</b> property of the object being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueCollection.Add(Dundas.Gauges.WinControl.CalculatedValue)">
            <summary>
            Adds a <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> object to the end of the 
            collection.
            </summary>
            <param name="value">
            The <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> object 
            to be added to the end of the <see cref="T:Dundas.Gauges.WinControl.CalculatedValueCollection"/>.
            </param>
            <returns>
            The <see cref="T:Dundas.Gauges.WinControl.CalculatedValueCollection"/> index at which the 
            <paramref name="value"/> has been added.
            </returns>
            <exception cref="T:System.ArgumentException">
            <p>
            The <b>CalculatedValueCollection</b> already contains the specified
            <paramref name="value"/>, and the <b>CalculatedValueCollection</b>
            ensures that all elements are unique.
            </p>
            </exception>
            <remarks>
            Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for details.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueCollection.Insert(System.Int32,Dundas.Gauges.WinControl.CalculatedValue)">
            <summary>
            Inserts a <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> element into the 
            collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/> 
            should be inserted.</param>
            <param name="value">The <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> object 
            to insert into the <see cref="T:Dundas.Gauges.WinControl.CalculatedValueCollection"/>.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is greater than <b>Count</b>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            <p>The <b>CalculatedValueCollection</b> already contains the specified
            <paramref name="value"/>, and the <b>CalculatedValueCollection</b>
            ensures that all elements are unique.</p></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueCollection.IsUniqueName(System.String)">
            <summary>
            Checks collection if the 
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueCollection.Item(System.Object)">
            <summary>
            Gets or sets the <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> element at the specified index.
            </summary>
            <param name="obj">The <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> object to get or set.
            </param>
            <value>
            The <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="obj"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="obj"/> is equal to or greater than <b>Count</b>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            <para>The <b>CalculatedValueCollection</b> already contains the specified
            <paramref name="value"/>, and the <b>CalculatedValueCollection</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> element associated with the first
            occurrence of the specified <b>CalculatedValue.Name</b> value.
            </summary>
            <param name="name">
            The <b>CalculatedValue.Name</b> value whose element to get.</param>
            <value>The <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> element associated with 
            the specified <paramref name="Name"/>, if found; otherwise,
            <see cref="T:System.ArgumentException"/> will be thrown.
            </value>
            <remarks>
            This indexer has the same effect as the <see cref="M:Dundas.Gauges.WinControl.NamedCollection.GetIndex(System.String)"/> method.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> element to get or set.</param>
            <value>
            The <see cref="T:Dundas.Gauges.WinControl.CalculatedValue"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than <b>Count</b>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            <para>The <b>CalculatedValueCollection</b> already contains the specified
            <paramref name="value"/>, and the <b>CalculatedValueCollection</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearRangeCollection">
            <summary>
            Collection of <b>LinearRange</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularRange"/>
            </summary>
            <remarks>
            This collection is exposed as the <see cref="P:Dundas.Gauges.WinControl.CircularGauge.Ranges"/> 
            property of <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> objects.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearRangeCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearRangeCollection.Add(System.String)">
            <summary>
            Used by <b>LinearRangeCollection</b> to add an item to the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.LinearRangeCollection.Remove(Dundas.Gauges.WinControl.LinearRange)"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.LinearRange"/> object to be added 
            to the collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.LinearRange"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. Also, 
            the <i>name</i> argument is the <b>Name</b> property of the object 
            being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearRangeCollection.Add(Dundas.Gauges.WinControl.LinearRange)">
            <summary>
            Adds a <b>LinearRange</b> object to the end of the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearRange"/>
            <seealso cref="M:Dundas.Gauges.WinControl.LinearRangeCollection.Remove(Dundas.Gauges.WinControl.LinearRange)"/>
            </summary>
            <param name="value">
            The <see cref="T:Dundas.Gauges.WinControl.LinearRange"/> object to be added to 
            the collection.
            </param>
            <returns>
            Returns the position in the collection of the newly added object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearRangeCollection.Remove(Dundas.Gauges.WinControl.LinearRange)">
            <summary>
            Removes the specified <b>LinearRange</b> object from the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.LinearRangeCollection.Add(System.String)"/>
            </summary>
            <param name="value">
            <see cref="T:Dundas.Gauges.WinControl.LinearRange"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearRangeCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearRangeCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearRangeCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns the LinearRange object
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearRangeCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>LinearRange</b> object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeImage">
            <summary>
            Represents a gauge image, stored in the <b>Images</b> collection 
            property of the container.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeContainer.Images"/>
            </summary>
            <remarks>
            These images can be displayed anywhere within the container.
            <p>
            The source of the image is set by the <see cref="P:Dundas.Gauges.WinControl.GaugeImage.Name"/> property, 
            which can be a pathname to an image saved to disk, or the name of a 
            <see cref="T:Dundas.Gauges.WinControl.NamedImage"/> object that has been added to the container's 
            <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.NamedImages"/> collection.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeImage.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImage.defaultParent">
            <summary>
            This flag determines if the Parent property has been changed from its
            default value.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeImage.ToString">
            <summary>
            Returns the name of the gauge image as a string.
            </summary>
            <returns>
            String value that represents the image's name.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeImage.DrawImage(Dundas.Gauges.WinControl.GaugeGraphics,System.String,System.Boolean)">
            <summary>
            Draws the image if the gauge image.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="imageName">The name of the image to draw.</param>
            <param name="drawShadow">If true, only draw the shadow of the image.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeImage.GetTextPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            This function returns the graphics path of the "No Image" text.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <returns>A reference to GraphicsPath.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeImage.GetBackPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            This function returns the graphics path of the image when there is no image.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <returns>A reference to GraphicsPath.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeImage.Dundas#Gauges#WinControl#ISelectable#DrawSelection(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Render the selection of the given element.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeImage.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.Parent">
            <summary>
            The name of the parent element, which affects its coordinate system.
            </summary>
            <value>
            A string value that represents the name of the image's parent object.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.ZOrder">
            <summary>
            Determines the Z order of the gauge image in the gauge container.
            </summary>
            <value>
            An integer that represents the image's Z order.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.ToolTip">
            <summary>
            The tool tip to be displayed when the cursor is over the gauge image.
            </summary>
            <value>
            A string that represents the image's tool tip.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.Name">
            <summary>
            The name of the gauge image.
            </summary>
            <value>
            A string that represents the name of the gauge image.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.Location">
            <summary>
            The location of the gauge image inside the gauge container. The coordinates are 
            measured as a percentage of the container's width and height.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeLocation"/> object, which represents the location of the gauge 
            image.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.Size">
            <summary>
            The size of the gauge image inside the gauge container. The coordinates are 
            measured as a percentage of the container's width and height.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeSize"/> object, which represents the size of the gauge 
            image.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.Visible">
            <summary>
            Determines the visibility of the gauge image.
            </summary>
            <value>
            If <b>true</b> the gauge image is visible, if <b>false</b> it is not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.ResizeMode">
            <summary>
            Determines whether or not the image will be stretched to fit the 
            specified size.
            </summary>
            <value>
            If <b>true</b> the gauge image will be stretched to fit the given size, 
            if <b>false</b> it will not. Defaults to <b>true</b>.
            </value>
            <remarks>
            If ResizeMode is set to <b>None</b> then the <see cref="T:System.Drawing.Font"/> and <see cref="T:Dundas.Gauges.WinControl.FontUnit"/> properties determine the size of the text.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.Image">
            <summary>
            The path image to be used for the default state.
            </summary>
            <value>
            A string that represents the image to be displayed in the default state.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.ImageTransColor">
            <summary>
            Gets or sets the transparent color of the state image.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeImage.Image"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            transparent color of the state image. The default value is 
            <b>Color.Empty</b>.
            </value>
            <remarks>
            If you have a state image with a yellow background 
            and you would like to make the background transparent set this property 
            to <b>Color.Yellow</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.ShadowOffset">
            <summary>
            Determines how far to the right and down the image's shadow will appear.
            </summary>
            <value>
            A real number that represents the shadow offset. Defaults to 1 pixel.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.Angle">
            <summary>
            The angle of rotation (0 to 360 degrees).
            </summary>
            <value>
            A real number that represents the angle of rotation. Defaults to 0 degrees.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.Transparency">
            <summary>
            Determines the transparency of the image. Measured as a percentage.
            </summary>
            <value>
            A real number that represents the transparency percentage.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.Selected">
            <summary>
            Determines if the gauge image visually appears selected.
            </summary>
            <value>
            If <b>true</b> the gauge image appears selected. Default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.Position">
            <summary>
            This is a wrapper property for location and size.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeImage.ParentObject">
            <summary>
            Gets object reference to the parent object. If there is not valid parent element the result is null.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ChartParameters">
            <summary>
            This class is used to prepare attributes for use 
            with Svg Rendering class. Svg rendering class is 
            used in two products: Dundas Chart and Dundas 
            Diagram, and it cannot use internally any definition 
            from these two products.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ChartParameters.chartBrushColor">
            <summary>
            Brush Color
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ChartParameters.chartBrushSecondColor">
            <summary>
            Second Brush Color used for gradient
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ChartParameters.chartMatrix">
            <summary>
            Encapsulates a 3-by-3 affine matrix that represents a geometric transform.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ChartParameters.chartFont">
            <summary>
            Defines a particular format for text, including font face, 
            size, and style attributes.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ChartParameters.chartStringFormat">
            <summary>
            Encapsulates text layout information (such as alignment and line spacing), 
            display manipulations (such as ellipsis insertion and national digit 
            substitution) and OpenType features.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ChartParameters.chartSvgGradientType">
            <summary>
            Gradient types used in SVG Rendering class
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ChartParameters.chartPictureSize">
            <summary>
            The size of the chart picture
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ChartParameters.imageWrapMode">
            <summary>
            Specifies how an image texture is tiled when it is larger than 
            the area being filled.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ChartParameters.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ChartParameters.ToUSString(System.Single)">
            <summary>
            This method will replace comma wit dot when the 
            number is converted to the string. In some 
            European countries comma is used as decimal 
            point separator.
            </summary>
            <param name="number">Floating point number</param>
            <returns>The string which represents the number</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ChartParameters.ToUSString(System.Double)">
            <summary>
            This method will replace comma wit dot when the 
            number is converted to the string. In some 
            European countries comma is used as decimal 
            point separator.
            </summary>
            <param name="number">Double number</param>
            <returns>The string which represents the number</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ChartParameters.GetX(System.Double)">
            <summary>
            Returns string presentation of X coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="x">X value which should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ChartParameters.GetY(System.Double)">
            <summary>
            Returns string presentation of Y coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="y">Y value which should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ChartParameters.GetX(System.Drawing.PointF)">
            <summary>
            Returns string presentation of X coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="point">Point which X value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ChartParameters.GetX(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of X coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Rectangle which X value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ChartParameters.GetWidth(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of Width in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Rectangle which Width value should be converted to string</param>
            <returns>Result string with size and measurement units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ChartParameters.GetHeight(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of Height coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Rectangle which Height value should be converted to string</param>
            <returns>Result string with size and measurement units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ChartParameters.GetY(System.Drawing.PointF)">
            <summary>
            Returns string presentation of Y coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="point">Point which Y value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ChartParameters.GetY(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of Y coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Point which Y value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ChartParameters.SetBrush">
            <summary>
            Set brush which defines how to fill the interiors of graphical 
            shapes such as rectangles, ellipses, pies, polygons, and paths.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ChartParameters.SetPen">
            <summary>
            Set private fields which define Pen attributes.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.BrushColor">
            <summary>
            Gets the color of the Solid brush or 
            the first color of Gradient brush
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.Brush">
            <summary>
            Sets the color of the Solid brush or 
            the first color of Gradient brush
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.Pen">
            <summary>
            Sets the color, width and style 
            for drawing 
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.BrushSecondColor">
            <summary>
            Gets the second color of Gradient Brush
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.GradientType">
            <summary>
            Gets determine direction for filling gradient.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.FillType">
            <summary>
            Gets the Fill Type. The fill type could be 
            solid color, gradient, etc .
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.PenColor">
            <summary>
            Gets the color used for drawing lines and curves.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.PenWidth">
            <summary>
            Gets the width of this Pen.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.DashStyle">
            <summary>
            Gets the style used for dashed lines drawn with this Pen.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.Transform">
            <summary>
            Gets the Matrix object which represents matrix 
            transformation elements
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.Font">
            <summary>
            Gets a Font object which defines a particular format 
            for text, including font face, size, and style attributes.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.StringFormat">
            <summary>
            Gets String format which encapsulates text layout information (such as 
            alignment and line spacing), display manipulations (such as ellipsis 
            insertion and national digit substitution) and OpenType features.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.PictureSize">
            <summary>
            Gets Picture size
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.FillMode">
            <summary>
            Gets or sets the flag that specifies the filling mode used during 
            filling operations
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.SvgLineCap">
            <summary>
            Gets the Line Cap Style.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.ImageWrapMode">
            <summary>
            Gets the Image Wrap Mode. Specifies how an image is tiled when 
            it is smaller than the area being filled.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ChartParameters.TextColor">
            <summary>
            Gets the color of the Text Color
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeContainer">
            <summary>
            <b>GaugeContainer</b> is the root object of Dundas Gauge.
            </summary>
            <remarks>
            The gauge container may contain the following:
            <list type="bullet">
            <item>Circular gauges, stored in the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.CircularGauges"/> collection.</item>
            <item>Linear gauges, stored in the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.LinearGauges"/> collection.</item>
            <item>State indicators, stored in the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.StateIndicators"/> collection.</item>
            <item>Numeric indicators, stored in the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.NumericIndicators"/> collection.</item>
            <item>Input values, stored in the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Values"/> collection.</item>
            </list>
            <p>
            The gauge coordinate system provides the basis for positioning and sizing of all 
            elements contained in the container. The origin is the upper-left corner with the 
            X axis pointing to the right and the Y axis pointing down. Coordinate values 
            are between 0 and 100 percent, and all measurements are represented as a percentage of 
            the parent object's width and height. <b>If a gauge element has a parent object 
            then its coordinate system is relative to its parent, and not the gauge 
            container</b>.
            </p>
            <p>
            The gauge container exposes all gauge-related events.
            </p>
            <p>
            An important property is the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Values"/> collection, which stores 
            <see cref="T:Dundas.Gauges.WinControl.InputValue"/> objects. Input values can be used as source values for other 
            gauge elements that have a value (e.g. pointers, indicators, etc.) by using their 
            <b>ValueSource</b> property. The advantage to using input values is that their 
            historical data (a history is created that stores previous values) can be used for 
            playback, as well as calculated values. They also provide a data binding mechanism.
            </p>
            <p>
            Serialization can be accomplished using the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Serializer"/> property, which 
            gets a <see cref="T:Dundas.Gauges.WinControl.GaugeSerializer"/> object.
            </p>
            </remarks>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeContainer.license">
            <summary>
            Control license
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeContainer.invalidLicense">
            <summary>
            Indicates that control license is invalid
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeContainer.savedCursor">
            <summary>
            Holds the original cursor of the control.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeContainer.toolTipTimer">
            <summary>
            Timer used for tooltips
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeContainer.toolTipString">
             <summary>
            Stores the tooltip string.
             </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeContainer.internalBackgroundPaint">
            <summary>
            This flag is set to true when the background paint is
            initialized from within the gauge render methods. The idea is
            to have the base implementation of the control transfer parent's
            image over the control's background when the backcolor has transparency.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.HitTest(System.Int32,System.Int32)">
            <summary>
            Call this method to determine the gauge element, 
            if any, that is located at a point defined by given X and Y coordinates.
            <seealso cref="T:Dundas.Gauges.WinControl.HitTestResult"/>
            </summary>
            <param name="x">The X coordinate for the point in question. 
            Often obtained from a parameter in an event 
            (e.g. the X parameter value in the MouseDown event).
            </param>
            <param name="y">The Y coordinate for the point in question. 
            Often obtained from a parameter in an event 
            (e.g. the Y parameter value in the MouseDown event).
            </param>
            <returns>A <see cref="T:Dundas.Gauges.WinControl.HitTestResult"/> object, 
            which provides information concerning the gauge element 
            (if any) that is at the specified location. </returns>
            <remarks>Call this method to determine the gauge element 
            (if any) that is located at a specified point. Often this method is used in 
            some mouse-related event (e.g. MouseDown) 
            to determine what gauge element the end-user clicked on. 
            The X and Y mouse coordinates obtained from the 
            event parameters are then used for the X and Y parameter 
            values of this method call.	The returned <see cref="T:Dundas.Gauges.WinControl.HitTestResult"/> object's properties 
            can then be used to determine what gauge element was clicked on, 
            and also provides an instance of the actual object selected (if any).</remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.SaveAsImage(System.String,Dundas.Gauges.WinControl.GaugeImageFormat)">
            <summary>
            Saves a gauge image to disk using the specified path and filename.
            </summary>
            <param name="fileName">The pathname of the image to be saved to disk.</param>
            <param name="format">The image <see cref="T:Dundas.Gauges.WinControl.GaugeImageFormat"/> to be used when 
            saving to disk.</param>
            <remarks>
            You can save all gauge pictures to disk, regardless of the rendering type used. 
            <p>
            The <i>imageFileName</i> argument must use a full pathname (e.g. c:\MyGauge.svg). 
            Note that you must also specify the file extension.
            </p>  
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.SaveAsImage(System.String,Dundas.Gauges.WinControl.GaugeImageFormat,System.Int32)">
            <summary>
            Saves a gauge image to disk using the specified path and filename.
            </summary>
            <param name="fileName">The pathname of the image to be saved to disk.</param>
            <param name="format">The image <see cref="T:Dundas.Gauges.WinControl.GaugeImageFormat"/> to be used when saving to 
            disk.</param>
            <param name="compression">The amount of compression for the generated image. 
            Use zero (0) for an uncompressed, high quality image. Compression is used only for JPEGS.
            </param>
            <remarks>
            You can save all gauge pictures to disk, regardless of the rendering type used. 
            <p>
            The <i>imageFileName</i> argument must use a full pathname (e.g. c:\MyGauge.svg). 
            Note that you must also specify the file extension.
            </p>   
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.SaveAsImage(System.IO.Stream,Dundas.Gauges.WinControl.GaugeImageFormat)">
            <summary>
            Saves a gauge image to stream.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> used to save the gauge picture.</param>
            <param name="format">The image <see cref="T:Dundas.Gauges.WinControl.GaugeImageFormat"/> to be used when saving to 
            the stream.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.SaveAsImage(System.IO.Stream,Dundas.Gauges.WinControl.GaugeImageFormat,System.Int32)">
            <summary>
            Saves a gauge image to stream.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> used to save the gauge picture.</param>
            <param name="format">The image <see cref="T:Dundas.Gauges.WinControl.GaugeImageFormat"/> to be used when saving 
            to the stream.</param>
            <param name="compression">The amount of compression for the generated image. 
            Use zero (0) for an uncompressed, high quality image. Compression is used only for JPEGS.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.ResetAutoValues">
            <summary>
            Resets all values that are calculated automatically.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.DataBind">
            <summary>
            Forces data binding of the control to the selected data source. Used only to 
            force data binding if using the data binding-related properties (instead of 
            the <see cref="M:Dundas.Gauges.WinControl.InputValue.DataBind"/> method).
            </summary>
            <remarks>
            If using the data binding-related properties (e.g. <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.DataSource"/>, 
            <see cref="P:Dundas.Gauges.WinControl.InputValue.DateFieldMember"/> and <see cref="P:Dundas.Gauges.WinControl.InputValue.ValueFieldMember"/>) 
            instead of the <see cref="M:Dundas.Gauges.WinControl.InputValue.DataBind"/> method, binding of the data can (and should) 
            be forced using this <b>GaugeContainer.DataBind</b> method.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.GetSelectedElements">
            <summary>
            Returns an array of all selected elements.
            </summary>
            <returns>An array of <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> which contains
            a reference to all selected elements.</returns>
            <remarks>This method returns an array of all elements that are selected.
            An element is selected if its Selected property is set to <b>true</b>. This
            method will also return selected elements that are not visible.</remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.GetAbsRectangle(Dundas.Gauges.WinControl.NamedElement,System.Drawing.RectangleF)">
            <summary>
            Returns a rectangle that has its coordinates changed from relative percentages to 
            absolute pixels.
            </summary>
            <param name="element"><see cref="T:Dundas.Gauges.WinControl.NamedElement"/> object whose coordinate system to use.</param>
            <param name="relRect">Rectangle object to be converted.</param>
            <returns><see cref="T:System.Drawing.RectangleF"/> object that has absolute coordinates in pixels.</returns>
            <remarks>
            Absolute coordinates are useful for mouse-related events, custom drawing, etc.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.GetRelRectangle(Dundas.Gauges.WinControl.NamedElement,System.Drawing.RectangleF)">
            <summary>
            Returns a rectangle that has its coordinates changed from absolute pixels to 
            relative percentages.
            </summary>
            <param name="element"><see cref="T:Dundas.Gauges.WinControl.NamedElement"/> object whose coordinate system to use.</param>
            <param name="absRect">Rectangle object to be converted.</param>
            <returns><see cref="T:System.Drawing.RectangleF"/> object that has relative coordinates as percentages.</returns>
            <remarks>
            Absolute coordinates are useful for mouse-related events, custom drawing, etc.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.GetAbsPoint(Dundas.Gauges.WinControl.NamedElement,System.Drawing.PointF)">
            <summary>
            Returns a point that has its coordinates changed from relative percentages to 
            absolute pixels.
            </summary>
            <param name="element"><see cref="T:Dundas.Gauges.WinControl.NamedElement"/> object whose coordinate system to use.</param>
            <param name="relPoint">Point object to be converted.</param>
            <returns><see cref="T:System.Drawing.PointF"/> object that has absolute coordinates in pixels.</returns>
            <remarks>
            Absolute coordinates are useful for mouse-related events, custom drawing, etc.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.GetRelPoint(Dundas.Gauges.WinControl.NamedElement,System.Drawing.PointF)">
            <summary>
            Returns a point that has its coordinates changed from absolute pixels to 
            relative percentages.
            </summary>
            <param name="element"><see cref="T:Dundas.Gauges.WinControl.NamedElement"/> object whose coordinate system to use.</param>
            <param name="absPoint">Point object to be converted.</param>
            <returns><see cref="T:System.Drawing.RectangleF"/> object that has relative coordinates as percentages.</returns>
            <remarks>
            Absolute coordinates are useful for mouse-related events, custom drawing, etc.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.GetAbsSize(Dundas.Gauges.WinControl.NamedElement,System.Drawing.SizeF)">
            <summary>
            Returns a size that has its coordinates changed from relative percentages to 
            absolute pixels.
            </summary>
            <param name="element"><see cref="T:Dundas.Gauges.WinControl.NamedElement"/> object whose coordinate system to use.</param>
            <param name="relSize">Size object to be converted.</param>
            <returns><see cref="T:System.Drawing.SizeF"/> object that has absolute coordinates in pixels.</returns>
            <remarks>
            Absolute coordinates are useful for mouse-related events, custom drawing, etc.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.GetRelSize(Dundas.Gauges.WinControl.NamedElement,System.Drawing.SizeF)">
            <summary>
            Returns a size that has its coordinates changed from absolute pixels to 
            relative percentages.
            </summary>
            <param name="element"><see cref="T:Dundas.Gauges.WinControl.NamedElement"/> object whose coordinate system to use.</param>
            <param name="absSize">Size object to be converted.</param>
            <returns><see cref="T:System.Drawing.SizeF"/> object that has relative coordinates as percentages.</returns>
            <remarks>
            Absolute coordinates are useful for mouse-related events, custom drawing, etc.
            </remarks>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeContainer.dragPointer">
            <summary>
            Holds a reference to the interactive pointer that is currently
            being dragged.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.IsDesignMode">
            <summary>
            Checks if control is in design mode.
            </summary>
            <returns>True if control is in design mode.</returns>		
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides OnPaint event
            </summary>
            <param name="pe"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handle PaintBackground event.
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.OnPaintBackgroundInternal(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handle PaintBackground event.
            </summary>
            <param name="pevent">The graphics object that is passed along
            with this event information is for the double buffering bitmap.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.OnBackColorChanged(System.EventArgs)">
            <summary>
            Handle BackColor change event.
            </summary>
            <param name="e">Event argument.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Handle RightToLeft change event.
            </summary>
            <param name="e">Event argument.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.OnResize(System.EventArgs)">
            <summary>
            Handle Resize event.
            </summary>
            <param name="e">Event argument.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.OnFontChanged(System.EventArgs)">
            <summary>
            Handle Font changed event.
            </summary>
            <param name="e">Event argument.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>
            Needed so that the GaugeCore class can fire the OnInvalidated event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle MouseDown event.
            </summary>
            <param name="e">Event argument.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle MouseMove event.
            </summary>
            <param name="e">Event argument.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeContainer.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle MouseUp event.
            </summary>
            <param name="e">Event argument.</param>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeContainer.toolTipChildControlCreated">
            <summary>
            A flag to determine if a child control for the tooltip has been created.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.Values">
            <summary>
            Gets a collection containing all input values of the control.
            <seealso cref="T:Dundas.Gauges.WinControl.InputValue"/>
            </summary>
            <value>An <see cref="T:Dundas.Gauges.WinControl.InputValueCollection"/> object that contains all input values 
            in the container.</value>
            <remarks>The input values in this collection can be accessed either by index or by name.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.CircularGauges">
            <summary>
            Gets a collection containing all circular gauges of the control.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularGauge"/>
            </summary>
            <value>A <see cref="T:Dundas.Gauges.WinControl.CircularGaugeCollection"/> object that contains all circular gauges in 
            the container.</value>
            <remarks>The circular gauges in this collection can be accessed either by index or by name.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.LinearGauges">
            <summary>
            Gets a collection containing all linear gauges of the control.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearGauge"/>
            </summary>
            <value>A <see cref="T:Dundas.Gauges.WinControl.LinearGaugeCollection"/> object that contains all linear gauges in 
            the container.</value>
            <remarks>The linear gauges in this collection can be accessed either by index or by name.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.NumericIndicators">
            <summary>
            Gets a collection containing all numeric indicators of the control.
            <seealso cref="T:Dundas.Gauges.WinControl.NumericIndicator"/>
            </summary>
            <value>A <see cref="T:Dundas.Gauges.WinControl.NumericIndicatorCollection"/> object that contains all numeric indicators in 
            the container.</value>
            <remarks>The numeric indicators in this collection can be accessed either by index or by name.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.StateIndicators">
            <summary>
            Gets a collection containing all state indicators of the control.
            <seealso cref="T:Dundas.Gauges.WinControl.StateIndicator"/>
            </summary>
            <value>A <see cref="T:Dundas.Gauges.WinControl.StateIndicatorCollection"/> object that contains all state indicators in 
            the container.</value>
            <remarks>The state indicators in this collection can be accessed either by index or by name.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.Images">
            <summary>
            Gets a collection containing gauge images of the control.
            <seealso cref="T:Dundas.Gauges.WinControl.GaugeImage"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeContainer.TopImage"/>
            </summary>
            <value>A <see cref="T:Dundas.Gauges.WinControl.GaugeImageCollection"/> that contains gauge images in 
            the container.</value>
            <remarks>
            The gauge images in this collection can be accessed either by index or by name, and 
            can be displayed anywhere within the container.
            <p>
            Note that these are not named images, which are stored as a resource via the 
            <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.NamedImages"/> collection property.
            </p>
            <p>
            A top image can be displayed on top of the container using the 
            <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.TopImage"/> property.
            </p>
            <p>
            Various other gauge elements may also use images (e.g. a pointer can have an image, used 
            as a custom pointer and set via the pointer's <b>Image</b> property).
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.Labels">
            <summary>
            Gets a collection containing the labels of the control.
            <seealso cref="T:Dundas.Gauges.WinControl.GaugeLabel"/>
            </summary>
            <value>A <see cref="T:Dundas.Gauges.WinControl.GaugeLabelCollection"/> object that contains labels of 
            the container.</value>
            <remarks>
            The labels in this collection can be accessed either by index or by name, and 
            can be displayed anywhere within the container.
            <p>
            Note that these are not scale labels (a scale has standard and custom labels).
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.NamedImages">
            <summary>
            Gets a collection containing all named images in the control.
            <seealso cref="T:Dundas.Gauges.WinControl.NamedImage"/>
            </summary>
            <value>A <see cref="T:Dundas.Gauges.WinControl.NamedImageCollection"/> object that contains all 
            named images in the container.</value>
            <remarks>
            The named images in this collection can be accessed either by index or by name.
            <p>
            A named image added to the container can be used at any time as the source 
            for any image property of the gauge, and the named image is saved as a 
            resource.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.RefreshRate">
            <summary>
            Gets or sets the refresh rate of the entire gauge container in redraws per 
            second.
            </summary>
            <value>A <b>double</b> that represents how many times per second the gauge 
            container is to be redrawn. The default value is 30.</value>
            <exception cref="T:System.ArgumentException">An <b>ArgumentException</b> will be thrown if the 
            value is less than 0.</exception>
            <remarks>This property determines how many times per second the gauge 
            container should be refreshed. Decreasing this value might improve 
            performance, but the motion of the pointers may become choppy.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.AutoLayout">
            <summary>
            Determines if the location and size of all circular and linear gauges is to be 
            calculated automatically for the best fit.
            </summary>
            <value>
            If <b>true</b> the gauge location/sizes are automatically calculated, if 
            <b>false</b> they are not. Defaults to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.ShadowIntensity">
            <summary>
            Gets or sets the intensity of all shadows, measured as a percentage.
            </summary>
            <value>A <b>float</b> that can range from 0 to 100. The default value is 25.</value>
            <exception cref="T:System.ArgumentException">An <b>ArgumentException</b> will be thrown if the value 
            is not between 0 and 100.</exception>
            <remarks>This property represents the intensity of all shadows in the 
            entire gauge container. Ranges from 0 to 100. At 100 the shadow will be 
            completely black.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.BackFrame">
            <summary>
            Gets or sets the frame attributes of the gauge container.
            </summary>
            <value>A <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.BackFrame"/> which contains all attributes of the gauge container's frame.
             </value>
            <remarks>The <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.BackFrame"/> contains all of the visual attributes of the 
            gauge container's frame, such as shape, style, colors, etc.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.TopImage">
            <summary>
            Gets or sets the image to be displayed on top of the gauge container.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeContainer.TopImageTransColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeContainer.Images"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeContainer.NamedImages"/>
            </summary>
            <value>A <b>string</b> representing the name of the top image. Can be an image 
            saved to disk, or a named image.</value>
            <remarks>The image must exist in the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.NamedImages"/>
            collection. The string that is specified here is the name of the image
            as specified by the <b>NamedImage.Name</b> property.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.TopImageTransColor">
            <summary>
            Get or sets the transparent color of the top image.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeContainer.TopImage"/>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> representing the transparent 
            color of the top image. The default value is <b>Color.Empty</b>.</value>
            <remarks>The color specified by this property will be treated as the 
            transparent color of the top image and will not be shown.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.TopImageHueColor">
            <summary>
            Gets or sets the hue color to be applied to the top image.
            <seealso cref="T:System.Drawing.Image"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            hue color to be applied to the top image. The default value is 
            <b>Color.Empty</b>.
            </value>
            <remarks>
            The hue color is applied to the entire image in order to modify its hue.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.AntiAliasing">
            <summary>
            Gets or sets the smoothing (antialiasing) mode for all elements in the 
            gauge container.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeContainer.TextAntiAliasingQuality"/>
            </summary>
            <value>An <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.AntiAliasing"/> value. The default is 
            <b>AntiAliasing.All</b>.</value>
            <remarks>This property affects all gauge container elements.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.TextAntiAliasingQuality">
            <summary>
             Gets or sets the quality of text antialiasing.
             <seealso cref="P:Dundas.Gauges.WinControl.GaugeContainer.AntiAliasing"/>
            </summary>
            <value>One of the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.TextAntiAliasingQuality"/> values. The default is 
            <b>TextAntiAliasingQuality.High</b>.</value>
            <remarks>This property affects the rendering of all text.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.DataSource">
            <summary>
            Gets or sets the source containing a list of values used to populate history data. 
            </summary>
            <value>
            A <b>System.Collections.IEnumerable</b> implemented object that contains a collection 
            of values used to supply data to this control. The default value is a <b>null</b> reference 
            (<b>Nothing</b> in Visual Basic).
            </value>
            <remarks>
            Use the <b>DataSource</b> property to specify the source of values to bind to history data of 
            the control. The data source must be an object that implements the 
            <see cref="T:System.Collections.IEnumerable"/> interface (such as 
            <see cref="T:System.Data.DataView"/>, <see cref="T:System.Collections.ArrayList"/>, and 
            <see cref="T:System.Collections.Hashtable"/>) to bind to history data.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.Serializer">
            <summary>
            Gets the gauge serializer object that can be used to load 
            or save all attributes of the gauge container and its children.
            </summary>
            <value>A <see cref="T:Dundas.Gauges.WinControl.GaugeSerializer"/> object.</value>
            <remarks>The <see cref="T:Dundas.Gauges.WinControl.GaugeSerializer"/> object provides methods 
            to load and save the entire contents of the gauge container to an XML 
            or a binary file.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.Printing">
            <summary>
            Gauge printing object, used to perform all printing of the gauge.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.PrintingManager"/> object, used for printing.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.SelectionMarkerColor">
            <summary>
            Determines the fill color of the markers of a selected element.
            </summary>
            <value>
            The default value is <b>Color.LightBlue</b>.
            </value>
            <remarks>A gauge element can be selected by setting its Selected
            property to <b>true</b>.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.SelectionBorderColor">
            <summary>
            Determines the border color of the selection.
            </summary>
            <value>
            The default value is <b>Color.Black</b>.
            </value>
            <remarks>A gauge element can be selected by setting its Selected
            property to <b>true</b>.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.Text">
            <summary>
            This property is not implemented.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.Font">
            <summary>
            This property is not implemented.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.BackgroundImage">
            <summary>
            <b>BackgroundImage</b> should not used.
            </summary>
            <value>
            An <see cref="T:System.Drawing.Image"/> object.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.ForeColor">
            <summary>
            <b>ForeColor</b> should not used. Use <b>BackColor</b> instead.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> object.
            </value>
        </member>
        <member name="E:Dundas.Gauges.WinControl.GaugeContainer.ValueChanged">
            <summary>
            Occurs after a value of some Gauge element has changed.
            <seealso cref="T:Dundas.Gauges.WinControl.ValueChangedEvent"/>
            <seealso cref="T:Dundas.Gauges.WinControl.ValueChangedEventArgs"/>
            </summary>
            <remarks>
            To perform validation of a pointer (so that its value 
            change can optionally be cancelled) use the 
            <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerPositionChange"/> event instead.
            <para>
            Note that this event will not fire if the value of
            a pointer, for example, is changed explicitly through code. The ValueChanged
            event will fire though if a gauge element's value is manipulated interactively or if
            an InputValuesCollection's value has changed.
            </para>
            </remarks>
        </member>
        <member name="E:Dundas.Gauges.WinControl.GaugeContainer.PlaybackStateChanged">
            <summary>
            Occurs after playback starts, stops, pauses and resumes.  It also occurs when playback complete.
            <seealso cref="T:Dundas.Gauges.WinControl.PlaybackStateChangedEventArgs"/>
            </summary>
            <remarks>
            This event is used to detect if playback has been started, stopped,
            paused or resumed.  It will also be fired when playback has completed.
            <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerPositionChange"/> event instead.
            </remarks>
        </member>
        <member name="E:Dundas.Gauges.WinControl.GaugeContainer.ValueLimitOverflow">
            <summary>
            Occurs when the limit of some value is reached.
            <seealso cref="T:Dundas.Gauges.WinControl.ValueChangedEvent"/>
            <seealso cref="T:Dundas.Gauges.WinControl.ValueChangedEventArgs"/>
            </summary>
        </member>
        <member name="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeEnter">
            <summary>
            Occurs when a pointer enters a range.
            <seealso cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeLeave"/>
            <seealso cref="T:Dundas.Gauges.WinControl.ValueRangeEvent"/>
            <seealso cref="T:Dundas.Gauges.WinControl.ValueRangeEventArgs"/>
            </summary>
        </member>
        <member name="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeLeave">
            <summary>
            Occurs when a pointer leaves a range.
            <seealso cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeEnter"/>
            <seealso cref="T:Dundas.Gauges.WinControl.ValueRangeEvent"/>
            <seealso cref="T:Dundas.Gauges.WinControl.ValueRangeEventArgs"/>
            </summary>
        </member>
        <member name="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeTimeOut">
            <summary>
            Occurs when a pointer stays in a range longer than the period 
            specified by the <see cref="P:Dundas.Gauges.WinControl.Range.InRangeTimeout"/> property.
            <seealso cref="P:Dundas.Gauges.WinControl.Range.InRangeTimeout"/>
            <seealso cref="T:Dundas.Gauges.WinControl.ValueRangeEvent"/>
            <seealso cref="T:Dundas.Gauges.WinControl.ValueRangeEventArgs"/>
            </summary>
        </member>
        <member name="E:Dundas.Gauges.WinControl.GaugeContainer.PointerScaleEnter">
            <summary>
            Occurs when a pointer's value falls above the scale minimum or falls below 
            the scale maximum (i.e. within the scale's range).
            <see cref="T:Dundas.Gauges.WinControl.ValueRangeEvent"/>
            <seealso cref="T:Dundas.Gauges.WinControl.ValueRangeEventArgs"/>
            </summary>
        </member>
        <member name="E:Dundas.Gauges.WinControl.GaugeContainer.PointerScaleLeave">
            <summary>
            Occurs when a pointer's value falls below the scale minimum or falls above 
            the scale maximum (i.e. outside of the scale's range).
            <see cref="T:Dundas.Gauges.WinControl.ValueRangeEvent"/>
            <seealso cref="T:Dundas.Gauges.WinControl.ValueRangeEventArgs"/>
            </summary>
        </member>
        <member name="E:Dundas.Gauges.WinControl.GaugeContainer.PointerPositionChange">
            <summary>
            Occurs when a pointer's value is changed interactively (e.g., by dragging
            the pointer along a scale). For this event to occur, the <b>Pointer.Interactive</b>
            property must be set to <b>True</b>.
            The new value can be rejected and the old value 
            can be retained using the <see cref="P:Dundas.Gauges.WinControl.PointerPositionChangeArg.Accept"/> property.
            <seealso cref="T:Dundas.Gauges.WinControl.PointerPositionChangeEvent"/>
            <seealso cref="T:Dundas.Gauges.WinControl.PointerPositionChangeArg"/>
            </summary>
        </member>
        <member name="E:Dundas.Gauges.WinControl.GaugeContainer.PrePaint">
            <summary>
            Called just before a gauge element's background is painted.
            <seealso cref="T:Dundas.Gauges.WinControl.GaugePaintEvent"/>
            <seealso cref="T:Dundas.Gauges.WinControl.GaugePaintEventArgs"/>
            </summary>
        </member>
        <member name="E:Dundas.Gauges.WinControl.GaugeContainer.PostPaint">
            <summary>
            Called just after a gauge element's background is painted.
            <seealso cref="T:Dundas.Gauges.WinControl.GaugePaintEvent"/>
            <seealso cref="T:Dundas.Gauges.WinControl.GaugePaintEventArgs"/>
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.SelectedDesignTimeElement">
            <summary>
            A reference to the element currently selected in design time.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.DefaultSize">
            <summary>
            Returns default control size.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeContainer.ToolTipObject">
            <summary>
            Stores the tool tip object of this control.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValueLinear">
            <summary>
            This class represents a linear calculated value.
            </summary>
            <remarks>
            This is a linear calculation that takes one value as input, and 
            outputs the results of the following linear equation being applied to it: Calculated Value 
            = Value*Multiplier + Addend.
            <p>
            A calculated value is owned by an <see cref="T:Dundas.Gauges.WinControl.InputValue"/> object, which has a 
            <see cref="P:Dundas.Gauges.WinControl.InputValue.CalculatedValues"/> collection.
            </p>	
            <p>
            Calculated values use the history of their input values as source data.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueLinear.CalculateValue(System.Double,System.DateTime)">
            <summary>
            Calculates linear function.
            </summary>
            <param name="value">The input value.</param>
            <param name="timeStamp">The input time stamp.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueLinear.Multiplier">
            <summary>
            Gets or sets the multiplier (m) in the linear formula f(x) = x*m + a.
            </summary>
            <value>
            A double that represents the multiplier. Defaults to 1.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueLinear.Adder">
            <summary>
            Gets or sets the addend (a) in the linear formula f(x) = x*m + a.
            </summary>
            <value>
            A double that represents the addend of the formula. Defaults to 0.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueLinear.Period">
            <summary>
            This calculation does not use the Period property.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueLinear.PeriodType">
            <summary>
            This calculation does not use the PeriodType property.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueLinear.RefreshRate">
            <summary>
            This calculation does not use the RefreshRate property.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueLinear.RefreshRateType">
            <summary>
            This calculation does not use the RefreshRateType property.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValueLinearConverter">
            <summary>
            Design time type converter of the CalculatedValueMin class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueLinearConverter.#ctor">
            <summary>
            Initializes a new instance of the ConverterLinear class.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.NamedImageCollection">
            <summary>
            Collection of <b>NamedImage</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearScale"/>
            </summary>
            <remarks>
            This collection is exposed as the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.NamedImages"/> property 
            of the root <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> object.
            <p>
            A named image added to the container can be used at any time as the source 
            for any image property of the gauge.
            </p>
            <p>
            A named images is saved as a resource.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedImageCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedImageCollection.Add(Dundas.Gauges.WinControl.NamedImage)">
            <summary>
            Adds a <b>NamedImage</b> object specified by name to the end of the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.NamedImage"/>
            <seealso cref="M:Dundas.Gauges.WinControl.NamedImageCollection.Remove(Dundas.Gauges.WinControl.NamedImage)"/>
            </summary>
            <param name="value">
            The named image object to be added to the collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.NamedImage"/> object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedImageCollection.Remove(Dundas.Gauges.WinControl.NamedImage)">
            <summary>
            Removes the specified <b>NamedImage</b> object from the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.NamedImageCollection.Add(Dundas.Gauges.WinControl.NamedImage)"/>
            </summary>
            <param name="value">
            <see cref="T:Dundas.Gauges.WinControl.NamedImage"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedImageCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedImageCollection.GetDefaultElementName(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NamedImageCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NamedImageCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns the NamedImage object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NamedImageCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>NamedImage</b> object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.NamedImage">
            <summary>
            An image with a unique name, which is saved as a resource.
            </summary>
            <remarks>
            A named image can be used as the source for any image property (as opposed 
            to specifying an image saved to disk).
            <p>
            Named images are stored in the <see cref="T:Dundas.Gauges.WinControl.NamedImageCollection"/>, which is exposed 
            as the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.NamedImages"/> property of the root 
            <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> object.
            </p>
            <p>
            A named image added to the container can be used at any time as the source 
            for any image property of the gauge.
            </p>
            <p>
            A named image is saved as a resource.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedImage.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedImage.#ctor(System.String,System.Drawing.Image)">
            <summary>
            Constructor that takes a unique name and an <b>Image</b> object.
            </summary>
            <param name="name">Image name.</param>
            <param name="image">Image object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NamedImage.ToString">
            <summary>
            Returns the name of the gauge as a string.
            </summary>
            <returns>The name as a string.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NamedImage.Image">
            <summary>
            Image object to be used as a named image.
            </summary>
            <value>
            <see cref="P:Dundas.Gauges.WinControl.NamedImage.Image"/> object.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularScaleCollection">
            <summary>
            Collection of <b>CircularScale</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularScale"/>
            </summary>
            <remarks>
            This collection is exposed as the <see cref="P:Dundas.Gauges.WinControl.CircularGauge.Scales"/> 
            property of <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> objects.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScaleCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScaleCollection.Add(System.String)">
            <summary>
            Used by <b>CircularScaleCollection</b> to add an item to the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.CircularScaleCollection.Remove(Dundas.Gauges.WinControl.CircularScale)"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.CircularScale"/> object to be added 
            to the collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.CircularScale"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. Also, 
            the <i>name</i> argument is the <b>Name</b> property of the object 
            being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScaleCollection.Add(Dundas.Gauges.WinControl.CircularScale)">
            <summary>
            Adds a <b>CircularScale</b> object to the end of the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularScale"/>
            <seealso cref="M:Dundas.Gauges.WinControl.CircularScaleCollection.Remove(Dundas.Gauges.WinControl.CircularScale)"/>
            </summary>
            <param name="value">
            The <see cref="T:Dundas.Gauges.WinControl.CircularScale"/> object to be added to 
            the collection.
            </param>
            <returns>
            Returns the position in the collection of the newly added object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScaleCollection.Remove(Dundas.Gauges.WinControl.CircularScale)">
            <summary>
            Removes the specified <b>CircularScale</b> object from the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.CircularScaleCollection.Add(Dundas.Gauges.WinControl.CircularScale)"/>
            </summary>
            <param name="value">
            <see cref="T:Dundas.Gauges.WinControl.CircularScale"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScaleCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularScaleCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularScaleCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns a <b>CircularScale</b> object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularScaleCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>CircularScale</b> object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.HLSColor">
            <summary>
            Represents a HLS color.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HLSColor.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Gauges.WinControl.HLSColor"/> class.
            </summary>
            <param name="red">The red component.</param>
            <param name="green">The green component.</param>
            <param name="blue">The blue component.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HLSColor.Darken(System.Single)">
            <summary>
            Darkens by the specified percentage.
            </summary>
            <param name="percDarker">The % darker.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HLSColor.Lighten(System.Single)">
            <summary>
            Lightens the color by the specified percentage.
            </summary>
            <param name="percLighter">The % lighter.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HLSColor.Equals(System.Object)">
            <summary>
            Determines if two HLSColor object are equal.
            </summary>
            <param name="o">The o.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HLSColor.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable
            for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HLSColor.op_Equality(Dundas.Gauges.WinControl.HLSColor,Dundas.Gauges.WinControl.HLSColor)">
            <summary>
            Overloads the equality operator.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HLSColor.op_Inequality(Dundas.Gauges.WinControl.HLSColor,Dundas.Gauges.WinControl.HLSColor)">
            <summary>
            Overloads the unequality operator.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HLSColor.ColorFromHLS(System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts from HLS to Color.
            </summary>
            <param name="hue">The hue.</param>
            <param name="luminosity">The luminosity.</param>
            <param name="saturation">The saturation.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HLSColor.HueToRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts Hue to RGB.
            </summary>
            <param name="n1">The n1.</param>
            <param name="n2">The n2.</param>
            <param name="hue">The hue.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HLSColor.NewLuma(System.Int32,System.Boolean)">
            <summary>
            Creates a new luma.
            </summary>
            <param name="n">The n.</param>
            <param name="scale">if set to <c>true</c> [scale].</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HLSColor.NewLuma(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates a new luma.
            </summary>
            <param name="luminosity">The luminosity.</param>
            <param name="n">The n.</param>
            <param name="scale">if set to <c>true</c> [scale].</param>
            <returns></returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HLSColor.Luminosity">
            <summary>
            Gets the luminosity.
            </summary>
            <value>The luminosity.</value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.Utils">
            <summary>
            Summary description for Utils.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.Utils.GoldenRatio">
            <summary>
            Represents golden ration used for some calculations ( needles for example )
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.Utils.resMng">
            <summary>
            Represents string resource manager. Reads from Strings.resx.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Utils.#cctor">
            <summary>
            Static constructor of the class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Utils.GetStr(System.String)">
            <summary>
            Reads a string from Strings.resx. 
            </summary>
            <param name="key">The key of the resource string</param>
            <returns>Returns the string associated with resource key.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Utils.GetStr(System.String,System.Object[])">
            <summary>
            Reads a string from Strings.resx and format it according params. 
            </summary>
            <param name="key">The key of the resource string.</param>
            <param name="p">The params of the resource string.</param>
            <returns>Returns formatted string.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Utils.Round(System.Double,System.Int32)">
            <summary>
            Returns the number with the specified precision nearest the specified value.
            </summary>
            <param name="value">A Decimal number to be rounded.</param>
            <param name="precision">The number of significant fractional digits 
            (precision) in the return value. </param>
            <returns>The number nearest d with precision equal to decimals. 
            If d is halfway between two numbers, one of which is even and the other odd, 
            then the even number is returned. If the precision of d is less than decimals, 
            then d is returned unchanged.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Utils.Deg2Rad(System.Single)">
            <summary>
            Converts Degree to Radians.
            </summary>
            <param name="angleInDegree">The angle in degree</param>
            <returns>The angle in radians</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Utils.Rad2Deg(System.Single)">
            <summary>
            Converts Radians to Degree
            </summary>
            <param name="angleInRadians">The angle in radians</param>
            <returns>The angle in degree</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Utils.NormalizeAngle(System.Single)">
            <summary>
            Normalize angle into 0-360 degree bounds.
            </summary>
            <param name="angle">The angle to be normalized</param>
            <returns>The normalized angle</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Utils.GetContactPointOffset(System.Drawing.SizeF,System.Single)">
            <summary>
            Calculates distance from the center point of rectangle to point 
            which belongs to the rectangle and at "angle" angle from X axis
            </summary>
            <param name="size">The size of the rectangle</param>
            <param name="angle">The angle</param>
            <returns>The distance to this point</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Utils.ToGDIAngle(System.Single)">
            <summary>
            Converts gauge angle system to GDI system. 
            GDI angle is measured clockwise from the x axis.
            Gauge angle is measured clockwise from the -y axis.
            </summary>
            <param name="angle">Gauge angle in degrees</param>
            <returns>GDI angle in degrees</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Utils.NormalizeRectangle(System.Drawing.RectangleF,System.Drawing.SizeF,System.Boolean)">
            <summary>
            Calculates rectangle specified by bound rectangle and size. 
            The result is centered into the bound rectangle.
            </summary>
            <param name="boundRect">Bound rectangle</param>
            <param name="insetSize">Specifies the size of the result</param>
            <param name="resizeResult">Determines if result should be resized or only centered</param>
            <returns>Centered rectangle into the "boundRect" bound rectangle</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Utils.ResourceStr">
            <summary>
            Gets the resource manager for reading from Strings.resx.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.InputValueCollection">
            <summary>
            Represents a collection of <see cref="T:Dundas.Gauges.WinControl.InputValue"/> objects.
            </summary>
            <remarks>
            This class is exposed as the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Values"/> property 
            of the root <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> object.
            <p>
            An <b>InputValue</b> represents an input value of the gauge container, 
            and has an associated history that stores previous values along with a time stamp.
            </p>
            <p>
            The advantage to using input values is that their historical data can be used for 
            playback, as well as calculated values. They also provide a data binding mechanism.
            </p>
            </remarks>	
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValueCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Initializes a new instance of the InputValueCollection class.
            </summary>
            <param name="common">Common element.</param>
            <param name="parent">Parent element.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValueCollection.Add(System.String)">
            <summary>
            Used by <b>InputValueCollection</b> to add an item to the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.InputValueCollection.Insert(System.Int32,Dundas.Gauges.WinControl.InputValue)"/>
            <seealso cref="M:Dundas.Gauges.WinControl.InputValueCollection.Remove(Dundas.Gauges.WinControl.InputValue)"/>
            </summary>
            <param name="name">The name of the see cref="InputValue"/&gt; object to be added to 
            the end of the collection.</param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.InputValue"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. Also, 
            the <i>name</i> argument is the <b>Name</b> property of the object being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValueCollection.Add(Dundas.Gauges.WinControl.InputValue)">
            <summary>
            Adds an <see cref="T:Dundas.Gauges.WinControl.InputValue"/> object to the end of the collection.
            </summary>
            <param name="value">The <see cref="T:Dundas.Gauges.WinControl.InputValue"/> object 
            to be added to the end of the collection.
            </param>
            <returns>The index at which the 
            <paramref name="value"/> has been added.</returns>
            <exception cref="T:System.ArgumentException">
            <para><b>InputValueCollection</b> 
            insures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Add(System.Object)"/> for further details.</remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValueCollection.Insert(System.Int32,Dundas.Gauges.WinControl.InputValue)">
            <summary>
            Inserts an <see cref="T:Dundas.Gauges.WinControl.InputValue"/> element into the 
            collection at the specified index.
            <seealso cref="M:Dundas.Gauges.WinControl.InputValueCollection.Add(System.String)"/>
            <seealso cref="M:Dundas.Gauges.WinControl.InputValueCollection.Remove(Dundas.Gauges.WinControl.InputValue)"/>
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/> 
            should be inserted.</param>
            <param name="value">The <see cref="T:Dundas.Gauges.WinControl.InputValue"/> object 
            to be inserted into the collection.
            </param>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)"/> for further details.</remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValueCollection.Remove(Dundas.Gauges.WinControl.InputValue)">
            <summary>
            Removes the first occurrence of the specified <see cref="T:Dundas.Gauges.WinControl.InputValue"/> object 
            from the collection"/&gt;.
            <seealso cref="M:Dundas.Gauges.WinControl.InputValueCollection.Insert(System.Int32,Dundas.Gauges.WinControl.InputValue)"/>
            <seealso cref="M:Dundas.Gauges.WinControl.InputValueCollection.Add(System.String)"/>
            </summary>
            <param name="value">The <see cref="T:Dundas.Gauges.WinControl.InputValue"/> object 
            to remove from the collection&gt;.
            </param>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Remove(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.InputValueCollection.DataBind">
            <summary>
            Forces data bind for all input values in current collection;
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.InputValueCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns the InputValue object 
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.InputValueCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Dundas.Gauges.WinControl.InputValue"/> element at the specified index.
            </summary>
            <param name="index">The zero-based index of the
            <see cref="T:Dundas.Gauges.WinControl.InputValue"/> element to get or set.
            </param>
            <value>
            The <see cref="T:Dundas.Gauges.WinControl.InputValue"/> element at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="index"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="index"/> is equal to or greater than 
            <see cref="P:System.Collections.CollectionBase.Count"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            <para>The <b>InputValueCollection</b> already contains the specified
            <paramref name="value"/>, and the <b>InputValueCollection</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for details.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.InputValueCollection.Item(System.Object)">
            <summary>
            Gets or sets the <see cref="T:Dundas.Gauges.WinControl.InputValue"/> element at the specified index OR by 
            using the input element's name.
            </summary>
            <param name="obj">The zero-based index of the
            <see cref="T:Dundas.Gauges.WinControl.InputValue"/> element to get or set, <b>OR</b> 
            the <b>InputValue.Name</b> value whose element to get or set.
            </param>
            <value>
            The <see cref="T:Dundas.Gauges.WinControl.InputValue"/> element at the specified <paramref name="obj"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <para><paramref name="obj"/> is less than zero.</para>
            <para>-or-</para>
            <para><paramref name="obj"/> is equal to or greater than <see cref="P:System.Collections.CollectionBase.Count"/>.</para>
            <para>-or-</para>
            <para><paramref name="obj"/> referred by name does not exist.</para>
            </exception>
            <exception cref="T:System.ArgumentException">
            <para>The <b>InputValueCollection</b> already contains the specified
            <paramref name="value"/>, and the <b>InputValueCollection</b>
            ensures that all elements are unique.</para></exception>
            <remarks>Please refer to <see cref="P:System.Collections.ArrayList.Item(System.Int32)"/> for further details.</remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularRangeCollection">
            <summary>
            Collection of <b>CircularRange</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularRange"/>
            </summary>
            <remarks>
            This collection is exposed as the <see cref="P:Dundas.Gauges.WinControl.CircularGauge.Ranges"/> 
            property of <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> objects.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularRangeCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularRangeCollection.Add(System.String)">
            <summary>
            Used by <b>CircularRangeCollection</b> to add an item to the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.CircularRangeCollection.Remove(Dundas.Gauges.WinControl.CircularRange)"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.CircularRange"/> object to be added 
            to the collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.CircularRange"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. Also, 
            the <i>name</i> argument is the <b>Name</b> property of the object 
            being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularRangeCollection.Add(Dundas.Gauges.WinControl.CircularRange)">
            <summary>
            Adds a <b>CircularRange</b> object to the end of the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularRange"/>
            <seealso cref="M:Dundas.Gauges.WinControl.CircularRangeCollection.Remove(Dundas.Gauges.WinControl.CircularRange)"/>
            </summary>
            <param name="value">
            The <see cref="T:Dundas.Gauges.WinControl.CircularRange"/> object to be added to 
            the collection.
            </param>
            <returns>
            Returns the position in the collection of the newly added object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularRangeCollection.Remove(Dundas.Gauges.WinControl.CircularRange)">
            <summary>
            Removes the specified <b>CircularRange</b> object from the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.CircularRangeCollection.Add(Dundas.Gauges.WinControl.CircularRange)"/>
            </summary>
            <param name="value">
            <see cref="T:Dundas.Gauges.WinControl.CircularRange"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularRangeCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularRangeCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularRangeCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns a <b>CircularRange</b> object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularRangeCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>CircularRange</b> object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeActionList">
            <summary>
            Defines a list of items used to create a DesignerActionPanel.
            Extends Dundas Gauge design time functionality in VS 2005
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeActionList.selectedItemInfo">
            <summary>
            Keeps information for the custom property dialog
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeActionList.suppresList">
            <summary>
            Disables of enables action list ( returns empty list )
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeActionList.GaugeActList">
            <summary>
            Contains list of GaugeActionType items
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.#ctor(Dundas.Gauges.WinControl.GaugeDesigner)">
            <summary>
            Creates new instance of GaugeActionList with specified parameters
            </summary>
            <param name="gaugeDesigner">Parent Gauge Designer</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.GetSortedActionItems">
            <summary>
            Returns the collection of DesignerActionItem objects contained in the list. 
            </summary>
            <returns>Collection of DesignerActionItem objects contained in the list</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.GetSelectedActionType">
            <summary>
            Locates and returns GaugeActionType againts selected Gauge object
            </summary>
            <returns>Corresponed GaugeActionType</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.EnableActionList">
            <summary>
            Enables action list population
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.DisableActionList">
            <summary>
            Disables action list population
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.GetDesigner">
            <summary>
            Returns the parent designer
            </summary>
            <returns>The Gauge designer</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.GetSelectedObject">
            <summary>
            Gets the selected Gauge object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.GetSelectedItemInfo">
            <summary>
            Gets the selected object context as SelectedItemInfo object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.GetSelectedCollection">
            <summary>
            Gets the colection which contains the selected Gauge object 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.IsObjectSelected">
            <summary>
            Returns true if any Gauge object is selected
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.ExpandNames(System.String)">
            <summary>
            Helper fuction which converts property name 
            to expression - "ChangePropertyName" to "Change Property Name"
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#IServiceProvider#GetService(System.Type)">
            <summary>
            Gets the service object of the specified type. 
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get. </param>
            <returns>A service object of type serviceType. -or- null if there is no service object of type serviceType. </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#Windows#Forms#Design#IWindowsFormsEditorService#CloseDropDown">
            <summary>
            Closes any previously opened drop down control area
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#Windows#Forms#Design#IWindowsFormsEditorService#DropDownControl(System.Windows.Forms.Control)">
            <summary>
            Displays the specified control in a drop down area below a value field of the property grid that provides this service. 
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#Windows#Forms#Design#IWindowsFormsEditorService#ShowDialog(System.Windows.Forms.Form)">
            <summary>
            Shows the specified Form. 
            </summary>
            <param name="dialog"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Returns collection of properties of this object.
            </summary>
            <returns>Collection of properties descriptors.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
            <summary>
            Returns collection of properties of this object.
            </summary>
            <param name="attributes">Attributes for filtering.</param>
            <returns>Collection of properties descriptors.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
            <summary>
            Gets object class name.
            </summary>
            <returns>Object class name.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
            <summary>
            Gets object attributes.
            </summary>
            <returns>Object attributes</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
            <summary>
            Gets object component name.
            </summary>
            <returns>Object component name.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
            <summary>
            Gets object converter.
            </summary>
            <returns>Object converter.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
            <summary>
            Gets object default event.
            </summary>
            <returns>Object default event.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
            <summary>
            Gets object default property.
            </summary>
            <returns>Object default property.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
            <summary>
            Gets object editor.
            </summary>
            <param name="editorBaseType">Editor base type.</param>
            <returns>object editor.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
            <summary>
            Gets object events.
            </summary>
            <param name="attributes">Filtering attributes.</param>
            <returns>Object events.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
            <summary>
            Gets object events.
            </summary>
            <returns>Object events.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Get property owner.
            </summary>
            <param name="pd">Property descriptor.</param>
            <returns>Property owner.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.InvokeTransactedChange(System.IServiceProvider,System.Object,Dundas.Gauges.WinControl.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)">
            <summary>
            Tracks object changes in transaction in order to record undo operations
            </summary>
            <param name="serviceProvider">The designer service provider</param>
            <param name="component">component which is about to change</param>
            <param name="callback">Method delegate which make the changed</param>
            <param name="context">context needed to make changes</param>
            <param name="description">Transaction name</param>
            <param name="member">Property descriptor</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.InvokeMethodTransaction(Dundas.Gauges.WinControl.TransactedChangeCallback,System.Object,System.String)">
            <summary>
            Invoke propery change in transaction context
            </summary>
            <param name="callback">change callback</param>
            <param name="context">object context</param>
            <param name="transactionName">name of transaction</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.InvokePropertiesCallBack(System.Object)">
            <summary>
            Shows the custom propery editor, handles "Configure XXX..."
            </summary>
            <param name="context">object context</param>
            <returns>frue for success</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.InvokeProperties">
            <summary>
            Shows the custom propery editor, handles "Configure XXX..."
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.GetBindingSourceNamePrefix(System.Object,System.String)">
            <summary>
            Creates new binding data source name;
            </summary>
            <param name="dataSource"></param>
            <param name="dataMember"></param>
            <returns>New binding data source name</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.GetUniqueSiteName(System.ComponentModel.Design.IDesignerHost,System.String)">
            <summary>
            Checks if the component name is unique;
            </summary>
            <param name="host"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.CreateNewBindingSource(System.ComponentModel.Design.IDesignerHost,System.Object,System.String)">
            <summary>
            Creates new BindingSource from specified datasource object and dataMember
            </summary>
            <param name="host"></param>
            <param name="dataSource"></param>
            <param name="dataMember"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.AddNewDataSource">
            <summary>
            Adds a Gauge area
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeActionList.AutoShow">
            <summary>
            Gets or sets a value indicating whether the DesignerActionPanel should automatically be displayed when it is created
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeActionList.Gauge">
            <summary>
            Gets the Gauge object
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeActionList.TypeDescriptorContextImpl">
            <summary>
            Custom TypeDescriptorContextImpl to replace or generate ITypeDescriptorContext
            for UIEditors.
            Provides contextual information about a component, such as its container and type descriptor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.TypeDescriptorContextImpl.#ctor(Dundas.Gauges.WinControl.GaugeActionList,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Initializes new instance of TypeDescriptorContextImpl with specified parameters
            </summary>
            <param name="designer">The parent GaugeActionList</param>
            <param name="propDescriptor">The target PropertyDescriptor</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.TypeDescriptorContextImpl.GetService(System.Type)">
            <summary>
            Returns a service by specified type
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.TypeDescriptorContextImpl.System#ComponentModel#ITypeDescriptorContext#OnComponentChanged">
            <summary>
            Raises the ComponentChanged event. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.TypeDescriptorContextImpl.System#ComponentModel#ITypeDescriptorContext#OnComponentChanging">
            <summary>
            Raises the ComponentChanging event. 
            </summary>
            <returns>true if this object can be changed; otherwise, false. </returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeActionList.TypeDescriptorContextImpl.ComponentChangeService">
            <summary>
            Returns the ComponentChangeService 
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeActionList.TypeDescriptorContextImpl.System#ComponentModel#ITypeDescriptorContext#Container">
            <summary>
            Gets the container representing this TypeDescriptor request.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeActionList.TypeDescriptorContextImpl.Instance">
            <summary>
            Gets the object that is connected with this type descriptor request.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeActionList.TypeDescriptorContextImpl.PropertyDescriptor">
            <summary>
            Gets the PropertyDescriptor that is associated with the given context item
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeActionList.SelectedItemInfo">
            <summary>
            The SelectedItemInfo helps to process properly information of selected item.
            Is used mostly  from property editor dialog ( see UIPropertyEditor )
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.SelectedItemInfo.#ctor">
            <summary>
            Initializes new instance of SelectedItemInfo class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionList.SelectedItemInfo.GetSelectedItemInfo(Dundas.Gauges.WinControl.GaugeActionList)">
            <summary>
            Gather information from given GaugeActionList and 
            returns properly initialized SelectedItemInfo object.
            </summary>
            <param name="list">The GaugeActionList object.</param>
            <returns>New initialized SelectedItemInfo object.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeActionList.SelectedItemInfo.Descriptor">
            <summary>
            Gets and sets the PropertyDescriptor of selected object
            if selected object is a member of collection 
            the property returns the PropertyDescriptor of the collection.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeActionList.SelectedItemInfo.Index">
            <summary>
            Gets and sets the index of the selected object if selected object 
            is a member of collection
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeActionList.SelectedItemInfo.ObjectName">
            <summary>
            Gets and sets the name of the selected object 
            which appears into the "Configure... " action verb, property editor and undo transactions
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeActionList.SelectedItemInfo.EditableObject">
            <summary>
            The base object which is being edited. Usually is the Gauge but for Axis is GaugeArea.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeActionList.SelectedItemInfo.SelectedObject">
            <summary>
            The selected object is being edited , can be IList as series or object as axis
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeActionList.SelectedItemInfo.IsEmpty">
            <summary>
            Returns true if selected object is empty collection or null
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeActionList.SelectedItemInfo.IsArray">
            <summary>
            Returns true if selected object is an array
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeActionList.SelectedItemInfo.IsCollection">
            <summary>
            Returns true if selected object is a collection
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeActionList.SelectedItemInfo.IsGauge">
            <summary>
            returns true if selected object is Gauge.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ActionPropertyDescriptor">
            <summary>
            Property descriptor with ability to dynamically change attributes 
            of the base property descriptor object. Used to expose Gauge properties to
            the design time action list. Note that action list accept and 
            visualize edit property items only on hist own properties.
            See DesignerActionPropertyItem.  The GaugeActiolList implements 
            ICustomTypeDescriptor which deploy specified Gauge properties
            trought this ActionPropertyDescriptor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ActionPropertyDescriptor.#ctor(System.Object,System.ComponentModel.PropertyDescriptor,Dundas.Gauges.WinControl.GaugeActionMember,Dundas.Gauges.WinControl.GaugeActionList)">
            <summary>
            Constructor of the dynamic property descriptor.
            Initializes new instance of ActionPropertyDescriptor based on specified 
            parameters
            </summary>
            <param name="target">The original object which this propery is bound to</param>
            <param name="basePropertyDescriptor">Base property descriptor.</param>
            <param name="attr">The GaugeActionMember which contain additional information</param>
            <param name="actionList">Parent GaugeActionList object</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ActionPropertyDescriptor.GetEditor(System.Type)">
            <summary>
            Returns the property editor. This method replaces the original editor in some cases 
            in order to mantain properly the ObjectContext which is used by original editor.
            Rreplaces all editors which support painting and data member editors.
            </summary>
            <param name="editorBaseType"></param>
            <returns>The property editor or null</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ActionPropertyDescriptor.GetPropertyOwner">
            <summary>
            Returns an object that contains the property described by the specified property descriptor. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ActionPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            Returns whether resetting an object changes its value.
            </summary>
            <param name="component">The component to test for reset capability.</param>
            <returns>true if resetting the component changes its value; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ActionPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Gets the current value of the property on a component.
            </summary>
            <param name="component">The component with the property for which to retrieve the value.</param>
            <returns>The value of a property for a given component.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ActionPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            Resets the value for this property of the component to the default value.
            </summary>
            <param name="component">The component with the property value that is to be reset to the default value.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ActionPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            Determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <param name="component">The component with the property to be examined for persistence.</param>
            <returns>True if the property should be persisted; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ActionPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ActionPropertyDescriptor.ComponentType">
            <summary>
            Gets the type of the component this property is bound to.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ActionPropertyDescriptor.DisplayName">
            <summary>
            Gets the name that can be displayed in a window, such as a Properties window.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ActionPropertyDescriptor.IsBrowsable">
            <summary>
            Gets a value indicating whether this property is browsable.
            The folowing code evaluates the object (Instance) state  
            and returns properly Browsable state
            to achieve visible/unvisible edit item into action list.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ActionPropertyDescriptor.IsReadOnly">
            <summary>
            Gets a value indicating whether this property is read-only.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ActionPropertyDescriptor.PropertyType">
            <summary>
            Gets the type of the property.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ActionPropertyDescriptor.ActionMember">
            <summary>
            Gets the GaugeActionMember of this property
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ActionPropertyDescriptor.Instance">
            <summary>
            Gets the current object instance which this property descriptor is bound to.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ActionPropertyDescriptor.ActionList">
            <summary>
            Gets the parent GaugeActionList which deploys this descriptor
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ActionPropertyDescriptor.ExpandedPropertyName">
            <summary>
            Gets the property name separated by words. 
            ie: "ExpandedPropertyName" will return "Expanded Property Name"
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.UITypeEditorProxy">
            <summary>
            Because the action list feature does not support owner draw list boxes 
            which is supported by property editor 
            (see UITypeEditor.GetPaintValueSupported() with enums)
            this is a replacement of original UITypeEditor which emulate property editor behavior 
            in GetPaintValueSupported() part and lefts the original editor to do the rest.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.UITypeEditorProxy.targetEditor">
            <summary>
            Instance to the original UITypeEditor
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.UITypeEditorProxy.actionPropDesc">
            <summary>
            The parent ActionPropertyDescriptor
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.UITypeEditorProxy.listBox">
            <summary>
            ListBox for visualization
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.UITypeEditorProxy.edSvc">
            <summary>
            The IWindowsFormsEditorService which display the list box
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxy.#ctor">
            <summary>
            Initializes a new instance of the System.Drawing.Design.UITypeEditor class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxy.#ctor(System.Drawing.Design.UITypeEditor,Dundas.Gauges.WinControl.ActionPropertyDescriptor)">
            <summary>
            Initializes a new instance of the System.Drawing.Design.UITypeEditor class with
            specified UITypeEditor and PropertyDescriptor
            </summary>
            <param name="targetEditor"></param>
            <param name="actionPropDesc"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxy.listBox_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Occurs when a key is pressed while the control has focus.
            Closes the list box.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Provides data for the KeyPress event.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxy.listBox_Click(System.Object,System.EventArgs)">
            <summary>
            Occurs when the control is clicked.Closes the list box.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxy.listBox_DrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Occurs when a visual aspect of an owner-drawn ListBox changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxy.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by
            System.Drawing.Design.UITypeEditor.GetEditStyle().
            </summary>
            <param name="context">
               An System.ComponentModel.ITypeDescriptorContext that can be used to gain
               additional context information. 
            </param>
            <param name="provider">
            An System.IServiceProvider that this editor can use to obtain services. 
            </param>
            <param name="value">
            The object to edit. 
            </param>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxy.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object) method.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that can be used to gain additional context information. </param>
            <returns>
            A System.Drawing.Design.UITypeEditorEditStyle value that indicates the style
            of editor used by
            System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object).
            If the System.Drawing.Design.UITypeEditor does not support this method, then
            System.Drawing.Design.UITypeEditor.GetEditStyle() will return
            System.Drawing.Design.UITypeEditorEditStyle.None.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxy.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates whether the specified context supports painting a representation of an object's value within the specified context.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that can be used to gain additional context information. </param>
            <returns>
            true if System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle) is implemented; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxy.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Paints a representation of the value of an object using the specified System.Drawing.Design.PaintValueEventArgs.
            </summary>
            <param name="e">A System.Drawing.Design.PaintValueEventArgs that indicates what to paint and where to paint it. </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxy.System#ComponentModel#ITypeDescriptorContext#OnComponentChanged">
            <summary>
            Raises the ComponentChanged event.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxy.System#ComponentModel#ITypeDescriptorContext#OnComponentChanging">
            <summary>
            Returns a value indicating whether this object can be changed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxy.System#IServiceProvider#GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>A service object of type serviceType. -or- null</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.UITypeEditorProxy.IsDropDownResizable">
            <summary>
            Gets a value indicating whether drop-down editors should be resizable by the user.
            </summary>
            <returns>
            true, if drop-down editors are resizable; otherwise, false. 
            </returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.UITypeEditorProxy.System#ComponentModel#ITypeDescriptorContext#Container">
            <summary>
            Gets the container representing this TypeDescriptor request.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.UITypeEditorProxy.System#ComponentModel#ITypeDescriptorContext#Instance">
            <summary>
            Gets the instance of the object that is connected with this TypeDescriptor request.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.UITypeEditorProxy.System#ComponentModel#ITypeDescriptorContext#PropertyDescriptor">
            <summary>
            Gets the PropertyDescriptor that describes the given context item.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.UITypeEditorProxyEx">
            <summary>
            UITypeEditorProxyEx reroute the editor context for not owner draw editors.
            Used to reroute context for data editors.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.UITypeEditorProxyEx.targetEditor">
            <summary>
            The original UITypeEditor.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.UITypeEditorProxyEx.actionPropDesc">
            <summary>
            Target property
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxyEx.#ctor">
            <summary>
            Initializes a new instance of the UITypeEditorProxyEx class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxyEx.#ctor(System.Drawing.Design.UITypeEditor,Dundas.Gauges.WinControl.ActionPropertyDescriptor)">
            <summary>
            Initializes a new instance of the System.Drawing.Design.UITypeEditor class with
            specified UITypeEditor and PropertyDescriptor
            </summary>
            <param name="targetEditor"></param>
            <param name="actionPropDesc"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxyEx.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by
            System.Drawing.Design.UITypeEditor.GetEditStyle().
            </summary>
            <param name="context">
               An System.ComponentModel.ITypeDescriptorContext that can be used to gain
               additional context information. 
            </param>
            <param name="provider">
            An System.IServiceProvider that this editor can use to obtain services. 
            </param>
            <param name="value">
            The object to edit. 
            </param>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxyEx.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object) method.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that can be used to gain additional context information. </param>
            <returns>
            A System.Drawing.Design.UITypeEditorEditStyle value that indicates the style
            of editor used by
            System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object).
            If the System.Drawing.Design.UITypeEditor does not support this method, then
            System.Drawing.Design.UITypeEditor.GetEditStyle() will return
            System.Drawing.Design.UITypeEditorEditStyle.None.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxyEx.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates whether the specified context supports painting a representation of an object's value within the specified context.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that can be used to gain additional context information. </param>
            <returns>
            true if System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle) is implemented; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.UITypeEditorProxyEx.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Paints a representation of the value of an object using the specified System.Drawing.Design.PaintValueEventArgs.
            </summary>
            <param name="e">A System.Drawing.Design.PaintValueEventArgs that indicates what to paint and where to paint it. </param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.UITypeEditorProxyEx.IsDropDownResizable">
            <summary>
            Gets a value indicating whether drop-down editors should be resizable by the user.
            </summary>
            <returns>
            true, if drop-down editors are resizable; otherwise, false. 
            </returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.DesignerActionVerbItem">
            <summary>
            The DesignerActionVerbItem is used to convert DesignerVerbs to DesignerActionVerbItem
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DesignerActionVerbItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.ComponentModel.Design.DesignerVerb,System.String)">
            <summary>
            Initializes new instance of DesignerActionVerbItem using specified parameters
            </summary>
            <param name="list">The parent DesignerActionList</param>
            <param name="verb">The verb to emulate</param>
            <param name="category">Category which is used for DesignerActionItem</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DesignerActionVerbItem.Invoke">
            <summary>
            Programmatically executes the method associated with the DesignerActionMethodItem. 
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeActionType">
            <summary>
            GaugeActionType is a top level class of series helper classes which 
            contain information to help population of custom property descriptors 
            of CahrtActionList.
            GaugeActionType contain Gauge object type and list of groups which helps to
            be saparated action list items into groups.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeActionType.GaugeObjectType">
            <summary>
            The target Gauge type
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeActionType.Groups">
            <summary>
            A list of GaugeActionGroup objects
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionType.#ctor(System.Type,Dundas.Gauges.WinControl.GaugeActionGroup[])">
            <summary>
            Initializes new instance of GaugeActionType with specified parameters
            </summary>
            <param name="GaugeObjectType">The Gauge target type</param>
            <param name="items">List of GaugeActionGroup objects</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionType.GetGaugeActionTypeItems">
            <summary>
            Builds the tree like structure of GaugeActionType, GaugeActionGroup and GaugeActionItem objects
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeActionGroup">
            <summary>
            GaugeActionGroup contains group name used for devider into action list and 
            list of GaugeActionMember objects
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeActionGroup.GroupName">
            <summary>
            The group name
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeActionGroup.Members">
            <summary>
            List of GaugeActionMember objects
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionGroup.#ctor(System.String,Dundas.Gauges.WinControl.GaugeActionMember[])">
            <summary>
            Initializes new instance of GaugeActionGroup with specified parameters
            </summary>
            <param name="groupName">The group name</param>
            <param name="items">List of GaugeActionMember objects</param>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeActionMember">
            <summary>
            The GaugeActionMember contains information for property name, property label
            
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeActionMember.MemberName">
            <summary>
            Property name
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeActionMember.MemberText">
            <summary>
            Label or description
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeActionMember.TargetPropertyName">
            <summary>
            Internal property name - for second level object 
            for example for Gauge.BorderSkin.SkinStyle is represented by
            MemberName = "BorderSkin", TargetPropertyName = "SkinStyle"
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeActionMember.ActionListIsTarget">
            <summary>
            Flag which determines if the property is exposed by 
            GaugeMirror class or the target object
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionMember.#ctor(System.String)">
            <summary>
            Initialize new instance of GaugeActionMember with specified parameters
            </summary>
            <param name="memberName">The member name</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionMember.#ctor(System.String,System.Boolean)">
            <summary>
            Initialize new instance of GaugeActionMember with specified parameters
            </summary>
            <param name="memberName">The Member name</param>
            <param name="actionListIsTarget">determines if the property is exposed by 
            GaugeMirror class
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionMember.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initialize new instance of GaugeActionMember with specified parameters
            </summary>
            <param name="memberName">The Member name</param>
            <param name="actionListIsTarget">determines if the property is exposed by 
            GaugeMirror class
            </param>
            <param name="memberText">Description</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionMember.#ctor(System.String,System.String)">
            <summary>
            Initialize new instance of GaugeActionMember with specified parameters
            </summary>
            <param name="memberName">The Member name</param>
            <param name="memberText">Description</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeActionMember.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialize new instance of GaugeActionMember with specified parameters.
            </summary>
            <param name="memberName">The Member name.</param>
            <param name="memberText">Description.</param>
            <param name="targetPropName">Second level property name.</param>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CustomPlacement">
            <summary>
            CustomPlacement appears into Gauge action list - Gauge level - to setup placement
            of the legend or title
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CustomPlacement.TopLeft">
            <summary>
            Top Left position
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CustomPlacement.TopCenter">
            <summary>
            Top Center position
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CustomPlacement.TopRight">
            <summary>
            Top Right position
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CustomPlacement.RightTop">
            <summary>
            Right Top position
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CustomPlacement.RightCenter">
            <summary>
            Right Center position
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CustomPlacement.RightBottom">
            <summary>
            Right Bottom position
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CustomPlacement.BottomLeft">
            <summary>
            Bottom Left position
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CustomPlacement.BottomCenter">
            <summary>
            Bottom Center position
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CustomPlacement.BottomRight">
            <summary>
            Bottom Right position
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CustomPlacement.LeftTop">
            <summary>
            Left Top position
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CustomPlacement.LeftCenter">
            <summary>
            Left Center position
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CustomPlacement.LeftBottom">
            <summary>
            Left Bottom position
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.TransactedChangeCallback">
            <summary>
            Delegate for VS environment transaction calback
            </summary>
            <param name="context">transaction context</param>
            <returns>true if change is completed</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SvgChartGraphics">
            <summary>
            This class is used to prepare drawing for Svg 
            Rendering class. Svg rendering class is 
            used in two products: Dundas Chart and Dundas 
            Diagram, and it cannot use internally any definition 
            from these two products.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SvgRendering">
            <summary>
            Rendering SVG Class which is used 
            for rendering SVG graphics file in a XML document.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.output">
            <summary>
            Xml Text Writer object used for SVG output.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.gradientIDNum">
            <summary>
            Id gradient used to define same gradient
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.clipRegionIdNum">
            <summary>
            Id used to define clip region
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.selectionMode">
            <summary>
            Drawing code is under selection mode.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.gradientIDString">
            <summary>
            Id gradient string used to define same gradient
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.oldMatrix">
            <summary>
            Used to compare new assigned matrix object with matrix 
            object currently assigned.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.antiAlias">
            <summary>
            if true Anti aliasing is enabled
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.antiAliasText">
            <summary>
            if true Anti aliasing is enabled for font
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.transformOpen">
            <summary>
            Variable used to close transformation section in SVG file.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.toolTipsText">
            <summary>
            Text used for SVG Tooltips
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.title">
            <summary>
            Text used for title
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.toolTipsActive">
            <summary>
            There is minimum one drawing primitive which have tool tip
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.clipSet">
            <summary>
            Clip Region is set
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.resizable">
            <summary>
            Svg document is resizable
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.Open(System.Xml.XmlTextWriter,System.Drawing.Size)">
            <summary>
            Open SVG Document for writing
            </summary>
            <param name="svgWriter">Svg stream or file used as an output.</param>
            <param name="pictureSize">Size of a SVG Picture</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.SetTitle(System.String)">
            <summary>
            Set Title for SVG document.
            </summary>
            <param name="title">SVG document title</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.Open(System.Xml.XmlTextWriter,System.Drawing.Size,Dundas.Gauges.WinControl.SvgOpenParameters)">
            <summary>
            Open SVG Document for writing
            </summary>
            <param name="svgWriter">Svg stream or file used as an output.</param>
            <param name="pictureSize">Size of a SVG Picture</param>
            <param name="extraParameters">Structure with extra parameters</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.Validate">
            <summary>
            Validation for commonly used variables.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.Close">
            <summary>
            Used to Close and put finish tag on SVG document
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawLine(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting the two points specified 
            by coordinate pairs.
            </summary>
            <param name="point1">Point structure that represents the first point to connect.</param>
            <param name="point2">Point structure that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawLines(System.Drawing.PointF[])">
            <summary>
            Draws a series of line segments that connect an array 
            of Point structures. 
            </summary>
            <param name="points">Array of Point structures that represent the points to connect.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawRectangle(System.Drawing.RectangleF)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="rect">A Rectangle structure that represents the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.SetRectangle(System.Drawing.RectangleF)">
            <summary>
            Set a rectangle coordinates specified by a coordinate pair, a width, and a height to SVG document.
            </summary>
            <param name="rect">A Rectangle structure that represents the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawPolygon(System.Drawing.PointF[])">
            <summary>
            Draws a polygon defined by an array of 
            Point structures.
            </summary>
            <param name="points">Array of Point structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.SetPolygon(System.Drawing.PointF[])">
            <summary>
            Sets a polygon coordinates defined by an array of 
            Point structures.
            </summary>
            <param name="points">Array of Point structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawArc(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a Rectangle structure.
            </summary>
            <param name="rect">Rectangle structure that defines the boundaries of the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawPie(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a 
            Rectangle structure and two radial lines.
            </summary>
            <param name="rect">Rectangle structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.SetPie(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Sets a pie shape coordinates defined by an ellipse specified by a 
            Rectangle structure and two radial lines.
            </summary>
            <param name="rect">Rectangle structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawEllipse(System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by a pair 
            of coordinates, a height, and a width.
            </summary>
            <param name="rect">Rectangle structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.SetEllipse(System.Drawing.RectangleF)">
            <summary>
            Set an ellipse coordinates defined by a bounding rectangle specified by a pair 
            of coordinates, a height, and a width.
            </summary>
            <param name="rect">Rectangle structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a Bézier spline defined by four Point structures.
            </summary>
            <param name="pt1">Point structure that represents the starting point of the curve.</param>
            <param name="pt2">Point structure that represents the first control point for the curve.</param>
            <param name="pt3">Point structure that represents the second control point for the curve.</param>
            <param name="pt4">Point structure that represents the ending point of the curve.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawBeziers(System.Drawing.PointF[])">
            <summary>
            Draws a series of Bézier splines from an array of PointF structures.
            </summary>
            <param name="points">Array of PointF structures that represent the points that determine the curve.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawCurve(System.Drawing.PointF[],System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of Point structures.
            </summary>
            <param name="points">Array of Point structures that define the spline.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of PointF structures 
            using a specified tension. The drawing begins offset from 
            the beginning of the array.
            </summary>
            <param name="points">Array of PointF structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawPath(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws a GraphicsPath object.
            </summary>
            <param name="path">GraphicsPath object to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawClosedCurve(System.Drawing.PointF[],System.Single)">
            <summary>
            Draws a closed cardinal spline defined by an array of Point structures.
            </summary>
            <param name="points">Array of Point structures that define the spline.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttr">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Draws the specified Image object at the specified location and with the original size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.FillTexturedRectangle(System.Drawing.TextureBrush,System.Drawing.RectangleF)">
            <summary>
            Fills the specified Rectangle at the specified location with specified Texture Brush.
            </summary>
            <param name="textureBrush">Brush with texture</param>
            <param name="destRect">Destination rectangle</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawString(System.String,System.Drawing.RectangleF)">
            <summary>
            Draws the specified text string at the specified location with the 
            specified Brush and Font objects using the formatting attributes of 
            the specified StringFormat object.
            </summary>
            <param name="text">String to draw.</param>
            <param name="layoutRect">RectangleF structure that specifies the location of the drawn text.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.DrawString(System.String,System.Drawing.PointF)">
            <summary>
            Draws the specified text string at the specified location with the 
            specified Brush and Font objects using the formatting attributes of 
            the specified StringFormat object.
            </summary>
            <param name="text">String to draw.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.FillRectangle(System.Drawing.RectangleF)">
            <summary>
            Fills the interior of a rectangle specified by a RectangleF structure.
            </summary>
            <param name="rect">RectangleF structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.FillPolygon(System.Drawing.PointF[])">
            <summary>
            Fill a polygon defined by an array of 
            Point structures.
            </summary>
            <param name="points">Array of Point structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.FillPie(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Fill a pie shape defined by an ellipse specified by a 
            Rectangle structure and two radial lines.
            </summary>
            <param name="rect">Rectangle structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.FillEllipse(System.Drawing.RectangleF)">
            <summary>
            Fill an ellipse defined by a bounding rectangle specified by a pair 
            of coordinates, a height, and a width.
            </summary>
            <param name="rect">Rectangle structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.FillClosedCurve(System.Drawing.PointF[],System.Single)">
            <summary>
            Fill a closed cardinal spline defined by an array of Point structures.
            </summary>
            <param name="points">Array of Point structures that define the spline.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.FillPath(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Fill a GraphicsPath object.
            </summary>
            <param name="path">GraphicsPath object to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.FillBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Fill a Bézier spline defined by four Point 
            structures. If curve is open a line will connect the curve.
            </summary>
            <param name="pt1">Point structure that represents the starting point of the curve.</param>
            <param name="pt2">Point structure that represents the first control point for the curve.</param>
            <param name="pt3">Point structure that represents the second control point for the curve.</param>
            <param name="pt4">Point structure that represents the ending point of the curve.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.FillCurve(System.Drawing.PointF[],System.Single)">
            <summary>
            Fill a cardinal spline through a specified array of Point structures.
            </summary>
            <param name="points">Array of Point structures that define the spline.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.FillArc(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Fill an arc representing a portion of an ellipse specified by a Rectangle structure.
            </summary>
            <param name="rect">Rectangle structure that defines the boundaries of the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.MatrixChanged">
            <summary>
            Method which checks if elements of assigned transformation 
            matrix are changed.
            </summary>
            <returns>True if matrix is changed</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.NoTransformMatrix">
            <summary>
            Method which checks if there is any transformation 
            </summary>
            <returns>True if there are no transformations</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.ResetTransformMatrix">
            <summary>
            Method which reset transformations 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.WrapString(System.String,System.Drawing.RectangleF,System.String[]@)">
            <summary>
            This method is used to wrap string which can not fir 
            specified rectangle. SVG does not support multi line 
            text and automatic text wrapping.
            </summary>
            <param name="text">String which has to be wrapped.</param>
            <param name="destRectangle">Destination rectangle.</param>
            <param name="stringArray">Rectangle which should be filled with text in many columns.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.SplitText(System.String)">
            <summary>
            Split the text with empty char 
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.ImageToString(System.Drawing.Image)">
            <summary>
            Converts Image object into the BASE64 encoded string
            </summary>
            <param name="image">Image to convert.</param>
            <returns>BASE64 encoded image data.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.GetDashStyle(Dundas.Gauges.WinControl.SvgParameters.SvgDashStyle)">
            <summary>
            Converts Svg Dash Style enumeration to the string definition.
            </summary>
            <param name="dashStyle">Dash style enumeration.</param>
            <returns>String presentation of Dash style.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.GetAlpha(System.Drawing.Color)">
            <summary>
            Returns Alpha value from Color object converted to 0.0 - 1.0 value.
            </summary>
            <param name="color">Color object</param>
            <returns>Alpha value from 0 to 1</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.ColorToString(System.Drawing.Color)">
            <summary>
            Convert Color object to string
            </summary>
            <param name="color">Color object</param>
            <returns>SVG string presentation of color</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.SetStringAlignment(System.Drawing.StringFormat)">
            <summary>
            Convert String Alignment to SVG string format.
            </summary>
            <param name="stringFormat">String Format</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.Transformations">
            <summary>
            The world transformation for SVG Drawing.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.SetSmoothingMode(System.Boolean,System.Boolean)">
            <summary>
            Sets the rendering quality for this Graphics object.
            </summary>
            <param name="antiAlias">True if Anti Aliasing is on</param>
            <param name="shape">True if shape antialias mode is active and false for text</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.GetMatrix(System.Drawing.Drawing2D.Matrix,System.Boolean)">
            <summary>
            Create string presentation of transformation matrix
            </summary>
            <param name="matrix">Transformation 2D Matrix object.</param>
            <param name="setOldMatrix">Set Old Matrix</param>
            <returns>String presentation of transformation matrix.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.SVGDefine(System.Boolean,System.Boolean)">
            <summary>
            Create define section before drawing section.
            </summary>
            <param name="fill">Fill mode is active</param>
            <param name="outline">Draw mode is active</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.BeginSvgSelection(System.String,System.String)">
            <summary>
            This method starts SVG Selection mode
            </summary>
            <param name="hRef">The location of the referenced object, expressed as a URI reference.</param>
            <param name="title">Title which could be used for tooltips.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.EndSvgSelection">
            <summary>
            This method stops SVG Selection mode
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.SetToolTip">
            <summary>
            Activate Tool Tips
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.StartGraphicsParameters(System.Boolean,System.Boolean)">
            <summary>
            Define graphics parameters as Brush and Pen in SVG
            </summary>
            <param name="fill">Fill mode is active</param>
            <param name="outline">Draw mode is active</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.EndGraphicsParameters">
            <summary>
            End section tag
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.SetGradient(System.Drawing.Color,System.Drawing.Color,Dundas.Gauges.WinControl.SvgParameters.SvgGradientType)">
            <summary>
            This method is used to set def section for gradient. This 
            method will create Gradient ID which will be used 
            letter for filling primitives.
            </summary>
            <param name="firstColor">The first color used for gradient</param>
            <param name="secondColor">The second color used for gradient</param>
            <param name="type">Gradient Type</param>
            <returns>Gradient ID</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.SetRadialGradient(System.String,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            This method creates SVG radial gradient ( from center ) definition statement.
            </summary>
            <param name="gradientID">Gradient definition ID</param>
            <param name="firstColor">The first color used for gradient</param>
            <param name="secondColor">The second color used for gradient</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.SetLinearGradient(System.String,System.Drawing.Color,System.Drawing.Color,Dundas.Gauges.WinControl.SvgParameters.SvgGradientType)">
            <summary>
            This method creates SVG linear gradient definition statement.
            </summary>
            <param name="gradientID">Gradient definition ID</param>
            <param name="firstColor">The first color used for gradient</param>
            <param name="secondColor">The second color used for gradient</param>
            <param name="type">Gradient Type</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.SetLinearGradient(System.String,System.Drawing.Drawing2D.LinearGradientBrush)">
            <summary>
            This method creates SVG linear gradient definition statement.
            </summary>
            <param name="gradientID">Id of the SCG Gradient</param>
            <param name="brush">Used Linear gradient brush</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this Graphics object to the rectangle specified by a RectangleF structure.
            </summary>
            <param name="rect">RectangleF structure that represents the new clip region.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgRendering.ResetClip">
            <summary>
            Resets the clip region of this Graphics object to an infinite region.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.toolTipsScript">
            <summary>
            This string property contain script used for 
            tooltips in SVG Documents
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgRendering.emptyLoadHandler">
            <summary>
            This string property contain script used for 
            tooltips in SVG Documents
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.#ctor(Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting two PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="pt1">PointF structure that represents the first point to connect.</param>
            <param name="pt2">PointF structure that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line connecting the two points specified by coordinate pairs.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="x1">x-coordinate of the first point.</param>
            <param name="y1">y-coordinate of the first point.</param>
            <param name="x2">x-coordinate of the second point.</param>
            <param name="y2">y-coordinate of the second point.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttr">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by 
            a pair of coordinates, a height, and a width.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of PointF structures 
            using a specified tension. The drawing begins offset from 
            the beginning of the array.
            </summary>
            <param name="pen">Pen object that determines the color, width, and height of the curve.</param>
            <param name="points">Array of PointF structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">Width of the rectangle to draw.</param>
            <param name="height">Height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the location of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string at the specified location with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">A Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">The width of the rectangle to draw.</param>
            <param name="height">The height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws a GraphicsPath object.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the path.</param>
            <param name="path">GraphicsPath object to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, and a height and two radial lines.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the pie shape.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the arc.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="width">Width of the rectangle that defines the ellipse.</param>
            <param name="height">Height of the rectangle that defines the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Draws the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="rect">RectangleF structure that specifies the location and size of the drawn image.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse defined by a bounding RectangleF.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="rect">RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a series of line segments that connect an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line segments.</param>
            <param name="points">Array of PointF structures that represent the points to connect.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle 
            specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Fills the interior of a GraphicsPath object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="path">GraphicsPath object that represents the path to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Fills the interior of a GraphicsPath object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="path">GraphicsPath object that represents the path to fill.</param>
            <param name="angle">The angle by which this path has been rotated.</param>
            <param name="useBrushOffset">Determines if the offset of the brush transformation
            matrix should be used to position the gradient.</param>	
            <param name="circularFill">Determines if this path is a circle.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
            <summary>
            Fills the interior of a Region object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="region">Region object that represents the area to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of a rectangle specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="width">Width of the rectangle to fill.</param>
            <param name="height">Height of the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by PointF structures .
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a pie section defined by an ellipse 
            specified by a pair of coordinates, a width, and a height 
            and two radial lines.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the second side of the pie section.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this Graphics object to the rectangle specified by a RectangleF structure.
            </summary>
            <param name="rect">RectangleF structure that represents the new clip region.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.ResetClip">
            <summary>
            Resets the clip region of this Graphics object to an infinite region.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
            <summary>
            Sets the clipping region of this Graphics object to the result of 
            the specified operation combining the current clip region and 
            the specified GraphicsPath object.
            </summary>
            <param name="path">GraphicsPath object to combine.</param>
            <param name="combineMode">Member of the CombineMode enumeration that specifies the combining operation to use.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.TranslateTransform(System.Single,System.Single)">
            <summary>
            Prepends the specified translation to the transformation matrix of this Graphics object.
            </summary>
            <param name="dx">x component of the translation.</param>
            <param name="dy">y component of the translation.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.SetGradient(System.Drawing.Color,System.Drawing.Color,Dundas.Gauges.WinControl.GradientType)">
            <summary>
            Set Gradient colors and type
            </summary>
            <param name="firstColor">The first gradient color</param>
            <param name="secondColor">The second gradient color</param>
            <param name="gradientType">The gradient type</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a polygon defined by an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the polygon.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.Save">
            <summary>
            Saves the current state of this Graphics object and identifies the saved state with a GraphicsState object.
            </summary>
            <returns>This method returns a GraphicsState object that represents the saved state of this Graphics object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
            <summary>
            Restores the state of this Graphics object to the state represented by a GraphicsState object.
            </summary>
            <param name="gstate">GraphicsState object that represents the state to which to restore this Graphics object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text.</param>
            <param name="stringFormat">StringFormat object that represents formatting information, such as line spacing, for the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.MeasureString(System.String,System.Drawing.Font)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.BeginSelection(System.String,System.String)">
            <summary>
            This method starts Selection mode
            </summary>
            <param name="hRef">The location of the referenced object, expressed as a URI reference.</param>
            <param name="title">Title which could be used for tooltips.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgChartGraphics.EndSelection">
            <summary>
            This method stops Selection mode
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgChartGraphics.Transform">
            <summary>
            Gets or sets the world transformation for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgChartGraphics.SmoothingMode">
            <summary>
            Gets or sets the rendering quality for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgChartGraphics.IsClipEmpty">
            <summary>
            Gets a value indicating whether the clipping region of this 
            Graphics object is empty.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgChartGraphics.Clip">
            <summary>
            Gets or sets a Region object that limits the drawing region of this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgChartGraphics.Graphics">
            <summary>
            Reference to the Graphics object
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SvgChartGraphics.TextRenderingHint">
            <summary>
            Gets or sets the rendering mode for text associated with this Graphics object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.FloatNanValueConverter">
            <summary>
            Designer converter class
            Converts Float.NaN values to/from "Not set".
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.FloatNanValueConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.FloatNanValueConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.FloatNanValueConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of predefined values.
            </summary>
            <param name="context">Descriptor context.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.FloatNanValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert double.NaN to string "Not set"
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Conversion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.FloatNanValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert minimum or maximum values from string
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.FloatAutoValueConverter">
            <summary>
            Designer converter class
            Converts Float.NaN values to/from "Auto".
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.FloatAutoValueConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.FloatAutoValueConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.FloatAutoValueConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of predefined values.
            </summary>
            <param name="context">Descriptor context.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.FloatAutoValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert double.NaN to string "Not set"
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Conversion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.FloatAutoValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert minimum or maximum values from string
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.FlagsEnumUITypeEditor">
            <summary>
            UI type editor for the enumerations with Flags attribute
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.FlagsEnumUITypeEditor.enumType">
            <summary>
            Enumeration type.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.FlagsEnumUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Display a drop down list with check boxes.
            </summary>
            <param name="context">Editing context.</param>
            <param name="provider">Provider.</param>
            <param name="value">Value to edit.</param>
            <returns>Result</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.FlagsEnumUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets editing style.
            </summary>
            <param name="context">Editing context.</param>
            <returns>Editor style.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.FlagsEnumCheckedListBox">
            <summary>
            Checked list box, which is used for the UI type editing.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.FlagsEnumCheckedListBox.#ctor(System.Object,System.Type)">
            <summary>
            Public constructor.
            </summary>
            <param name="editValue">Value to edit.</param>
            <param name="editType">Typpe to edit.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.FlagsEnumCheckedListBox.FillList">
            <summary>
            Fills checked list items
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.FlagsEnumCheckedListBox.GetNewValue">
            <summary>
            Gets new enumeration value.
            </summary>
            <returns>New enum value.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearScale">
            <summary>
            Scale for <b>LinearGauge</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearGauge"/>
            <seealso cref="T:Dundas.Gauges.WinControl.LinearPointer"/>
            </summary>
            <remarks>
            Linear scales are stored in the <see cref="P:Dundas.Gauges.WinControl.LinearGauge.Scales"/> property.
            <p>
            <see cref="T:Dundas.Gauges.WinControl.LinearPointer"/> objects are assigned to a linear scale, 
            and it is this scale the pointers 'points' to. <see cref="T:Dundas.Gauges.WinControl.LinearRange"/> objects 
            are also assigned to scales.
            </p>
            <p>
            The measurement-related properties of linear scales are measured as a percentage of the width or 
            height of their parent (e.g. gauge container).
            </p>
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ScaleBase">
            <summary>
            Represents a scale, which graphically represents a set of values. 
            <seealso cref="T:Dundas.Gauges.WinControl.SpecialPosition"/>
            </summary>
            <remarks>
            Circular and linear scales are associated with <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> and 
            <see cref="T:Dundas.Gauges.WinControl.LinearGauge"/> objects, respectively, and exposed via their <b>Scales</b> 
            property.
            <p>
            Scales have values pointed to by pointers, and can also have associated 
            ranges to highlight a range of their values.
            </p>
            <p>
            Scales have standard labels (that have an interval, etc.) and also have custom labels, which 
            can be positioned anywhere along a scale.
            </p>
            </remarks>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ScaleBase.MaxMajorTickMarks">
            <summary>
            Defines maximum major tick marks per scale ( full size scale ). 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ScaleBase._startPosition">
            <summary>
            Represents start position of the scale in the independent coordinate system.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ScaleBase._endPosition">
            <summary>
            Represents end position of the scale in the independent coordinate system.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ScaleBase._sweepPosition">
            <summary>
            Represents sweep position of the scale in the independent coordinate system.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ScaleBase.staticRendering">
            <summary>
            Indicates whether or not scale is rendered under pointers 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.#ctor">
            <summary>
            Initializes a new instance of ScaleBase class.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ScaleBase.minorTickMarkA">
            <summary>
            The minor tick marks attributes of this scale.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetMaxOffset(Dundas.Gauges.WinControl.LinearGauge)">
            <summary>
            Calculates offset from normal scale bound in order to fit thermometer bulb.
            </summary>
            <param name="gauge">The parent linear gauge</param>
            <returns>The offset from normal scale bound</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetReversed">
            <summary>
            Determines if the scale is reversed by also taking the Control.RightToLeft
            property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetLightBrush(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.CustomTickMark,System.Drawing.Color,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Creates gradient brush for tick marks.
            </summary>
            <param name="g">The GaugeGraphics instance</param>
            <param name="tickMark">The tickmark instance</param>
            <param name="fillColor">Primary fill color</param>
            <param name="path">The GraphicsPath which contain this tick mark</param>
            <returns>The initilized brush.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.DrawTickMark(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.CustomTickMark,System.Double,System.Single)">
            <summary>
            Renders one tick mark. Must be overridden from Circular and Linear Scales.
            </summary>
            <param name="g">Current GaugeGraphics</param>
            <param name="tickMark">Tick mark object</param>
            <param name="value">Position against scale.</param>
            <param name="offset">Offset from scale, can be negative</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.DrawTickMark(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.CustomTickMark,System.Double,System.Single,System.Drawing.Drawing2D.Matrix)">
            <summary>
            Renders one tick mark.
            </summary>
            <param name="g">Current GaugeGraphics</param>
            <param name="tickMark">Tick mark object</param>
            <param name="value">Value position against scale.</param>
            <param name="offset">Offset from scale, can be negative</param>
            <param name="matrix">Matrix transformation</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.DrawTickMarkImage(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.CustomTickMark,System.Drawing.Drawing2D.Matrix,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws the tick mark image
            </summary>
            <param name="g">the GaugeGraphics instance</param>
            <param name="tickMark">Custom tick mark.</param>
            <param name="matrix">Transformation matrix.</param>
            <param name="centerPoint">Center point.</param>
            <param name="drawShadow">if true, only draw the shadow of the image.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetTickMarkOffset(Dundas.Gauges.WinControl.CustomTickMark)">
            <summary>
            Calculate tick mark offset from scale line determined by its placement.
            </summary>
            <param name="tickMark">The tick mark</param>
            <returns>Offset from scale, can be negative. Negative offset in circular scale means inner placement, otherwise placement toward zero axis.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.RenderTicks(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.TickMark,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Renders minor or major tick marks on the scale.
            </summary>
            <param name="g">The GaugeGraphics instance.</param>
            <param name="tickMark"><see cref="T:Dundas.Gauges.WinControl.TickMark"/>Tick mark object.</param>
            <param name="interval">Tickmark intervals.</param>
            <param name="max">Start position in absolute value.</param>
            <param name="min">End position in absolute value.</param>
            <param name="intOffset">Offset from start position.</param>
            <param name="forceLinear">Forces linear intervals over logarithmic scale. Used for minor tick marks.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.RenderGrid(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders all major and minor tick marks
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.DrawCustomLabel(Dundas.Gauges.WinControl.CustomLabel)">
            <summary>
            Draws one label. Must be overridden.
            </summary>
            <param name="label">The label to be drawn</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetLabelStyle">
            <summary>
            Returns the scale label style.Must be overridden.
            </summary>
            <returns>The scale's label style</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetOffsetLabelPos(Dundas.Gauges.WinControl.Placement,System.Single,System.Single)">
            <summary>
            Calculate label offset from scale. 
            </summary>
            <param name="placement"><see cref="P:Dundas.Gauges.WinControl.CustomLabel.Placement"/></param>
            <param name="scaleOffset">Scale offset.</param>
            <param name="scalePosition">Scale position.</param>
            <returns>Label offset from scale.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetResizedFont(System.Drawing.Font,Dundas.Gauges.WinControl.FontUnit)">
            <summary>
            Returns resized font according <b>LabelStyle.ResizeLabels</b>.
            </summary>
            <param name="font">Font to be resized</param>
            <param name="fontUnit">Font units.</param>
            <returns>Resized font</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.RenderCustomLabels(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Performs rendering of all custom labels.
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.DrawSpecialPosition(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.SpecialPosition,System.Single)">
            <summary>
            Draws one special position ( pin ). Must be overridden.
            </summary>
            <param name="g">the GaugeGraphics instance</param>
            <param name="label">The special position instance</param>
            <param name="angle">The offset ( angle) </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.RenderPins(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders Minimum and Maximum pins
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.InvalidateEndPosition">
            <summary>
            Calculates new end position.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.InvalidateSweepPosition">
            <summary>
            Calculates new sweep position.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetRangeTickMarkColor(System.Double,System.Drawing.Color)">
            <summary>
            Returns scale tick mark colors from range.
            </summary>
            <param name="value">Absolute value which determines tick mark position</param>
            <param name="color">Current tick mark color</param>
            <returns><b>RangeBase.RangeTickMarksColor</b> if value get into range values or current tick mark color</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetRangeLabelsColor(System.Double,System.Drawing.Color)">
            <summary>
            Returns scale label color from range.
            </summary>
            <param name="value">Absolute value which determines label position</param>
            <param name="color">Current tick mark color</param>
            <returns><b>RangeBase.RangeLabelsColor</b> if value get into range values or current label color</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetValueLimit(System.Double,System.Boolean,System.Double)">
            <summary>
            Checks and returns value by using minimum, maximum, pins, and snapping as restriction.
            This method is used by pointers ( DataAttributes consumers ) to set its visual position.
            </summary>
            <param name="value">Current value</param>
            <param name="snapEnable">SnapEnable flag</param>
            <param name="snapInterval">Snap interval flag</param>
            <returns>Changed value</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetValueLimit(System.Double)">
            <summary>
            Checks and returns value in depends on Minimum and Maximum Pins. 
            It is used from PointerBase.
            </summary>
            <param name="value">The value to check</param>
            <returns>Value in ranges</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetIntervalOffset(Dundas.Gauges.WinControl.IntervalTypes)">
            <summary>
            Returns interval offset - default, for major tick marks, minor tickmarks and labels.
            Calculate it if interval offset is "Not Set" ( Double.NaN)
            </summary>
            <param name="type">Type of interval</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetInterval(Dundas.Gauges.WinControl.IntervalTypes)">
            <summary>
            Returns interval - default, for major tick marks, minor tickmarks and labels.
            Calculate it if interval is "Not Set" ( Double.NaN)
            </summary>
            <param name="type">Type of interval</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetNextPosition(System.Double,System.Double,System.Boolean)">
            <summary>
            Calculate next scale absolute position of tickmarks and labels.
            </summary>
            <param name="position">Current position of the item ( tickmark or label).</param>
            <param name="interval">Absolute step from this position.</param>
            <param name="forceLinear">Flag to force linear scale, 
            this is used from small tick marks in logarithmic scale.</param>
            <returns>Next absolute scale position</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetValueAgainstScaleRatio(System.Double)">
            <summary>
            Returns proportion of the value and Maximum/Minimum scale range;
            For example if minimum = 0 and maximum = 100 and value = 50 
            then PointerPositionRel returns 0.5;
            </summary>
            <param name="value">Pointer value</param>
            <returns>Returns proportion of the value and Maximum/Minimum scale range</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetValueByRatio(System.Single)">
            <summary>
            Calculates value against scale position ratio. ( 0.0 - 1.0 is full scale)
            </summary>
            <param name="ratio">The ratio number ( between 0.0 and 1.0) </param>
            <returns>The value against scale position ratio</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.IsReversed">
            <summary>
            Determines if the scale is reversed; The linear scale overrides this method.
            </summary>
            <returns>True if scale is reversed.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetPositionFromValue(System.Double,System.Single,System.Single)">
            <summary>
            Returns relative pointer position in (0,100) coord. system depend on its value,
            scale start and end position
            </summary>
            <param name="value">Pointer value</param>
            <param name="startPos">Scale start position</param>
            <param name="endPos">Scale end position</param>
            <returns>Returns relative pointer offset in (0,100) coord. system depend on its value</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetPositionFromValue(System.Double)">
            <summary>
            Returns relative pointer position in (0,100) coord. system depend on its value.
            </summary>
            <param name="value">The value for calculation</param>
            <returns>Calculated relative position</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetValueFromPosition(System.Single)">
            <summary>
            Returns scale value from position. Used from hit test and interactive pointer.
            </summary>
            <param name="position">Relative scale position</param>
            <returns>Scale value</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetValue(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Returns value calculated from center point and other point in the scale.
            </summary>
            <param name="c">Center point or "pin point"</param>
            <param name="p">Mouse hit point</param>
            <returns>Calculated value</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetPoint(System.Single,System.Single)">
            <summary>
            Returns PointF structure determined by position and offset from scale line.
            </summary>
            <param name="position"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetPointRel(System.Double,System.Single)">
            <summary>
            Calculates PointF in the current coord. system determined by value and 
            offset from scale line ( radius);
            </summary>
            <param name="value"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.GetPointAbs(System.Double,System.Single)">
            <summary>
            Calculates PointF in absolute coord. system determined by value and offset from circle line ( radius);
            </summary>
            <param name="value"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.PointerValueChanged(Dundas.Gauges.WinControl.PointerBase)">
            <summary>
            This method is called from the pointer when his data attribute has changed.
            </summary>
            <param name="sender">The pointer reference</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.OnAdded">
            <summary>
            This method is called right after this NamedElement to 
            become a member of a NamedCollection. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.OnRemove">
            <summary>
            This method is called right after this NamedElement 
            has been removed from a NamedCollection. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.BeginInit">
            <summary>
            Initiate initialization.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.EndInit">
            <summary>
            Finalize initialization
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.Invalidate">
            <summary>
            Performs invalidating of the gauge core and sends message to pointers to 
            perform reposition.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.RoundScaleValues">
            <summary>
            This function will round off the maximum and minimum values for the scale. The result is the removal
            of any rounded numbers along the scale.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleBase.Dundas#Gauges#WinControl#IToolTipProvider#GetToolTip(Dundas.Gauges.WinControl.HitTestResult)">
            <summary>
            Implementation of the GetToolTip(). Returns the resolved tooltip string.
            </summary>
            <param name="ht">A reference to HitTestResult.</param>
            <returns>A string containing the resolved tooltip.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.CustomLabels">
            <summary>
            Represents the scale's collection of custom labels.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.CustomLabelCollection"/> object.
            </value>
            <remarks>
            Scales have standard labels (that have an interval, etc.) but can 
            also display custom labels, which can be positioned anywhere along 
            the scale.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.Name">
            <summary>
            The name of the scale.
            </summary>
            <value>
            A string that represents the name of the scale.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.Minimum">
            <summary>
            The start value of the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.Maximum"/>
            </summary>
            <value>
            A double that represents the minimum (start) value of the scale. Defaults 
            to 0.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.Maximum">
            <summary>
            The end value of the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.Minimum"/>
            </summary>
            <value>
            A double that represents the maximum (end) value of the scale. Defaults 
            to 100.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.Multiplier">
            <summary>
            Amount by which the scale's values are multiplied before being displayed.
            </summary>
            <value>
            A real number that represents the multiplier value. Defaults to 1.
            </value>
            <remarks>
            For example, if the <see cref="P:Dundas.Gauges.WinControl.ScaleBase.Minimum"/> property is set to 10, and this 
            <b>Multiplier</b> property is set to 10, the displayed minimum value will 
            be 100.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.Interval">
            <summary>
            Determines how often the scale's tick marks and labels will be displayed. 
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.IntervalOffset"/>
            </summary>
            <value>
            A double that represents the scale's interval. Defaults to <b>Double.NaN</b> 
            (not set).
            </value>
            <remarks>
            The interval can also be offset using <see cref="P:Dundas.Gauges.WinControl.ScaleBase.IntervalOffset"/>.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.IntervalOffset">
            <summary>
            Determines the amount by which the scale's tick marks and labels will be offset.
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.Interval"/> 
            </summary>
            <value>
            A double that represents the scale's interval offset. Defaults to <b>Double.NaN</b> 
            (not set).
            </value>
            <remarks>
            The interval is set using <see cref="P:Dundas.Gauges.WinControl.ScaleBase.Interval"/>.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.ToolTip">
            <summary>
            The tool tip to be displayed when the cursor is over the scale.
            </summary>
            <value>
            A string that represents the scale's tool tip.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.MajorTickMarkInt">
            <summary>
            The major tick marks attributes of this scale.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.TickMarksOnTop">
            <summary>
            Determines if the  scale's tick marks should drawn on top of any pointers 
            associated with the scale.
            </summary>
            <value>
            If <b>true</b> the tick marks are drawn on top of pointers, if 
            <b>false</b> they are not. Defaults to <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.Reversed">
            <summary>
            Determines if the direction of the scale is reversed.
            </summary>
            <value>
            If <b>true</b> the direction is reversed, if 
            <b>false</b> it is not. Defaults to <b>false</b>.
            </value>
            <remarks>
            A reversed circular scale will be counter-clockwise. 
            A reversed linear scale will be right-to-left if horizontal, 
            and top-to-bottom if vertical.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.Logarithmic">
            <summary>
            Determines if the scale is logarithmic.
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.LogarithmicBase"/>
            </summary>
            <value>
            If <b>true</b> the scale is logarithmic, if 
            <b>false</b> it is not. Defaults to <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.LogarithmicBase">
            <summary>
            Determines the base for logarithmic scales.
            </summary>
            <value>
            A double that represents the logarithmic base. Defaults to 10.
            </value>
            <remarks>
            Setting this property only has an effect if the 
            <see cref="P:Dundas.Gauges.WinControl.ScaleBase.Logarithmic"/> property is set to <b>true</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.MinimumPin">
            <summary>
            Attributes for the minimum pin of the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.MaximumPin"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.SpecialPosition"/> value, which represents the minimum pin.
            </value>
            <remarks>
            The <b>MinimumPin</b> property sets a delimiter on the minimum value that can 
            be input into a scale. If the value of a pointer falls below the minimum pin 
            of the scale, the pointer will stop moving at the minimum pin.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.MaximumPin">
            <summary>
            Attributes for the maximum pin of the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.MinimumPin"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.SpecialPosition"/> value, which represents the maximum pin.
            </value>
            <remarks>
            The <b>MaximumPin</b> property sets a delimiter on the maximum value that can 
            be input into a scale. If the value of a pointer falls above the maximum pin 
            of the scale, the pointer will stop moving at the maximum pin.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.Visible">
            <summary>
            Determines the visibility of the scale.
            </summary>
            <value>
            If <b>true</b> the scale is visible, if <b>false</b> it is not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.Width">
            <summary>
            The width of the scale bar, measured as a percent.
            </summary>
            <value>
            A float that represents the width of the scale.
            </value>
            <remarks>
            For circular scales this will be an arched bar 
            and for linear scales it will be a straight bar.
            <p>
            Measured as a percentage of the scale's radius for circular scales, and 
            for linear scales it is measured as a percentage of the associated 
            <see cref="T:Dundas.Gauges.WinControl.LinearGauge"/> object's width.
            </p>
            <p>
            The scale bar width can be 0.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.BorderColor">
            <summary>
            The color of the scale bar's border.
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.BorderStyle"/>
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.BorderWidth"/>
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.FillColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> object that represents the bar's border 
            color. Defaults to <b>Color.Black</b>.
            </value>
            <remarks>
            Setting this property will only have an effect if the border 
            width is set to a value greater than 0.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.BorderStyle">
            <summary>
            The line style of the scale bar's border.
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.BorderColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.BorderWidth"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeDashStyle"/> value that represents the bar's border 
            style. Defaults to <b>GaugeDashStyle.Solid</b>.
            </value>
            <remarks>
            Setting this property will only have an effect if the border 
            width is set to a value greater than 0.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.BorderWidth">
            <summary>
            The width of the scale bar's border, measured in pixels..
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.BorderColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.BorderStyle"/>
            </summary>
            <value>
            An integer that represents the bar's 
            width. Defaults to 0.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.FillColor">
            <summary>
            Gets or sets the fill color of the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.FillGradientEndColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.FillGradientType"/>
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.FillHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            fill color. The default value is <b>Color.CornflowerBlue</b>.
            </value>
            <remarks>
            This property represents the fill color of the scale. 
            If a gradient is set via the 
            <see cref="P:Dundas.Gauges.WinControl.ScaleBase.FillGradientType"/> property this color will be used 
            as the start color for the gradient. Furthermore if a hatch style is 
            set via the <see cref="P:Dundas.Gauges.WinControl.ScaleBase.FillHatchStyle"/> property this color 
            will be used as the background color for the hatch.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.FillGradientType">
            <summary>
            The primary fill gradient type of the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.FillGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GradientType"/> object that represents the 
            gradient style. The default value is <b>GradientType.None</b>.
            </value>
            <remarks>
            If a gradient is specified then the <see cref="P:Dundas.Gauges.WinControl.ScaleBase.FillColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.ScaleBase.FillGradientEndColor"/> properties determine the colors used.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.FillGradientEndColor">
            <summary>
            Gets or sets the end color of the scale's fill gradient.
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.FillGradientType"/>
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.FillHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            gradient end color. The default value is <b>Color.White</b>.
            </value>
            <remarks>
            This property represents the end color of the scale's fill gradient. 
            It is used if the <see cref="P:Dundas.Gauges.WinControl.ScaleBase.FillGradientType"/>property
            has a valid gradient. In addition to that it is also used as the 
            hatch foreground color in case a hatch style is set via 
            the <see cref="P:Dundas.Gauges.WinControl.ScaleBase.FillHatchStyle"/> property.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.FillHatchStyle">
            <summary>
            The primary fill hatch style of the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.ScaleBase.FillGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeHatchStyle"/> object that represents the 
            hatch style. The default value is <b>GaugeHatchStyle.None</b>.
            </value>
            <remarks>
            If hatching is specified then the <see cref="P:Dundas.Gauges.WinControl.ScaleBase.FillColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.ScaleBase.FillGradientEndColor"/> properties determine the colors used.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.ShadowOffset">
            <summary>
            Determines how far to the right and down the shadow will appear. Measured 
            in pixels.
            </summary>
            <value>
            A float that represents the shadow offset. Defaults to 1 pixels.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.Selected">
            <summary>
            Determines if the scale visually appears selected.
            </summary>
            <value>
            If <b>true</b> the scale appears selected. Default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.StartPosition">
            <summary>
            Gets the start position of the scale. Calculates offset for thermometer
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.EndPosition">
            <summary>
            Gets the end position of the scale. Calculates offset for thermometer
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.ScaleBase.SweepPosition">
            <summary>
            Gets the sweep position of the scale
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.#ctor">
            <summary>
            Initializes a new instance of LinearScale class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.GetBarPath(System.Single,System.Single)">
            <summary>
            Returns Bar Graphics path.
            </summary>
            <param name="barOffsetInside">Inner offset from scale.</param>
            <param name="barOffsetOutside">Outer offset from scale.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.SetScaleHitTestPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Puts scale graphics into hot region list. 
            This graphics path looks like an Arc and contain scale and tick marks.
            </summary>
            <param name="g">Current GaugeGraphics object</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.GetShadowPath">
            <summary>
            Returns shadow path. Used for rendering with other shadows like
            pointers to prevent double shadows.
            </summary>
            <returns>GraphicsPath with shadow of scales.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.RenderBar(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders scales' bar
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.DrawTickMark(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.CustomTickMark,System.Double,System.Single)">
            <summary>
            Renders one tick mark.
            </summary>
            <param name="g">Current GaugeGraphics.</param>
            <param name="tickMark">Tick mark object.</param>
            <param name="value">Value position against scale.</param>
            <param name="offset">Offset from scale, can be negative.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.DrawLabel(Dundas.Gauges.WinControl.Placement,System.String,System.Double,System.Single,System.Single,System.Drawing.Font,System.Drawing.Color,Dundas.Gauges.WinControl.FontUnit)">
            <summary>
            Draws one label.
            </summary>
            <param name="placement"><see cref="P:Dundas.Gauges.WinControl.CustomLabel.Placement"/></param>
            <param name="labelStr">String to be drown.</param>
            <param name="value">Relative position of scale.</param>
            <param name="labelPos">Angle position as offset from scale.</param>
            <param name="rotateLabelAngle">Rotate angle.</param>
            <param name="font">Font to use.</param>
            <param name="color">Drawing color.</param>
            <param name="fontUnit">Font units.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.RenderLabels(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Performs rendering of all labels
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.DrawCustomLabel(Dundas.Gauges.WinControl.CustomLabel)">
            <summary>
            Draw one custom label
            </summary>
            <param name="label">Custom label to be drawn</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.DrawSpecialPosition(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.SpecialPosition,System.Single)">
            <summary>
            Performs drawing of the special position elements "pins"
            </summary>
            <param name="g">The GaugeGraphics instance</param>
            <param name="label">The SpecialPosition element</param>
            <param name="angle">The position to be drawn</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.RenderStaticElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Performs rendering of gauge scale
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.RenderDynamicElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Performs rendering of gauge scale
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.ToString">
            <summary>
            Returns the name of the object as a string.
            </summary>
            <returns>
            String that represents the name of the object.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.GetGauge">
            <summary>
            Returns the gauge to which this scale belongs.
            </summary>
            <returns>
            A reference to the <see cref="T:Dundas.Gauges.WinControl.LinearGauge"/> owner object.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.IsReversed">
            <summary>
            Determines if the scale is reversed.
            </summary>
            <returns>True if scale is reversed.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.GetPoint(System.Single,System.Single)">
            <summary>
            Returns PointF structure determined by position and offset from scale line.
            </summary>
            <param name="position">The absolute position.</param>
            <param name="offset">The offset from scale position.</param>
            <returns>PointF structure determined by position and offset from base scale line.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.GetValue(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Returns value calculated from center point and other point in the scale.
            </summary>
            <param name="c">Center point or "pin point".</param>
            <param name="p">Mouse hit point.</param>
            <returns>The value corresponding to PointF c.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.Dundas#Gauges#WinControl#ISelectable#DrawSelection(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Render the selection of the given element.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScale.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearScale.LabelStyle">
            <summary>
            The label attributes of this scale.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearLabelStyle"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.LinearLabelStyle"/> enumeration value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearScale.Position">
            <summary>
            Determines the position of the scale.
            </summary>
            <value>
            A real number that represent's the gauge scale's position.
            </value>
            <remarks>
            This property is measured as a percent of 
            the gauge height for horizontal linear gauges and the gauge width 
            for vertical linear gauges.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearScale.StartMargin">
            <summary>
            Determines the distance between the start of the linear gauge
            and the start of the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearScale.EndMargin"/>
            </summary>
            <value>
            A real number that represents the start margin of the scale.
            </value>
            <remarks>
            This property is measured as a percent of 
            the gauge height for horizontal linear gauges and the gauge width 
            for vertical linear gauges.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearScale.EndMargin">
            <summary>
            Determines the distance between the end of the linear gauge
            and the end of the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearScale.EndMargin"/>
            </summary>
            <value>
            A real number that represents the end margin of the scale.
            </value>
            <remarks>
            This property is measured as a percent of 
            the gauge height for horizontal linear gauges and the gauge width 
            for vertical linear gauges.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearScale.MajorTickMark">
            <summary>
            The major tick marks attributes of this scale.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearScale.MinorTickMark"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.LinearMajorTickMark"/> object.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearScale.MinorTickMark">
            <summary>
            The minor tick marks attributes of this scale.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearScale.MajorTickMark"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.LinearMinorTickMark"/> object.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearScale.Width">
            <summary>
            The width of the scale bar
            </summary>
            <remarks>
            Measured as a percent of the linear gauge object owner's width or height.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearScale.MinimumPin">
            <summary>
            Attributes for the minimum pin of the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearScale.MaximumPin"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.SpecialPosition"/> value, which represents the minimum pin.
            </value>
            <remarks>
            The <b>MinimumPin</b> property sets a delimiter on the minimum value that can 
            be input into a scale. If the value of a pointer falls below the minimum pin 
            of the scale, the pointer will stop moving at the minimum pin.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearScale.MaximumPin">
            <summary>
            Attributes for the maximum pin of the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearScale.MinimumPin"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.SpecialPosition"/> value, which represents the maximum pin.
            </value>
            <remarks>
            The <b>MaximumPin</b> property sets a delimiter on the maximum value that can 
            be input into a scale. If the value of a pointer falls above the maximum pin 
            of the scale, the pointer will stop moving at the maximum pin.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearScale.ParentGauge">
            <summary>
            Returns the parent gauge to which belongs this scale.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearScaleConverter">
            <summary>
            This Converter is used in design time 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearScaleConverter.#ctor">
            <summary>
            Initializes a new instance of Converter class.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.BufferBitmap">
            <summary>
            BufferBitmap is a helper class which is used for double buffering.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BufferBitmap.bitmap">
            <summary>
            Bitmap reference
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BufferBitmap.graphics">
            <summary>
            Bitmap GDI graphics
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BufferBitmap.size">
            <summary>
            The size of bitmap
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BufferBitmap.#ctor">
            <summary>
            Creates instance of BufferBitmap class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BufferBitmap.DisposeObjects">
            <summary>
            Disposes created objects
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BufferBitmap.Invalidate">
            <summary>
            Disposes if needed and create new bitmap.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BufferBitmap.Size">
            <summary>
            Gets and sets the size of the bitmap. 
            Set performs invalidating ( erasing ) of the bitmap;
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BufferBitmap.Bitmap">
            <summary>
            Gets <see cref="T:System.Drawing.Bitmap"/>  object reference 
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BufferBitmap.Graphics">
            <summary>
            Gets GDI+ graphics object reference
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularPointerCollection">
            <summary>
            Collection of <b>CircularPointer</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularPointer"/>
            </summary>
            <remarks>
            This collection is exposed as the <see cref="P:Dundas.Gauges.WinControl.CircularGauge.Pointers"/> 
            property of <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> objects.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointerCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointerCollection.Add(System.String)">
            <summary>
            Used by <b>CircularPointerCollection</b> to add an item to the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularPointer"/>
            <seealso cref="M:Dundas.Gauges.WinControl.CircularPointerCollection.Remove(Dundas.Gauges.WinControl.CircularPointer)"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.CircularPointer"/> object to be added 
            to the collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.CircularPointer"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. Also, 
            the <i>name</i> argument is the <b>Name</b> property of the object 
            being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointerCollection.Add(Dundas.Gauges.WinControl.CircularPointer)">
            <summary>
            Adds a <b>CircularPointer</b> object to the end of the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularPointer"/>
            <seealso cref="M:Dundas.Gauges.WinControl.CircularPointerCollection.Remove(Dundas.Gauges.WinControl.CircularPointer)"/>
            </summary>
            <param name="value">
            The name of the <see cref="T:Dundas.Gauges.WinControl.CircularPointer"/> object to be added to 
            the collection.
            </param>
            <returns>
            Returns the position in the collection of the newly added object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointerCollection.Remove(Dundas.Gauges.WinControl.CircularPointer)">
            <summary>
            Removes the specified <b>CircularPointer</b> object from the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.CircularPointerCollection.Add(Dundas.Gauges.WinControl.CircularPointer)"/>
            </summary>
            <param name="value">
            <see cref="T:Dundas.Gauges.WinControl.CircularPointer"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularPointerCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointerCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>		
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointerCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns a <b>CircularPointer</b> object.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularPointer"/>
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularPointerCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>CircularPointer</b> object.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularPointer"/>
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.PrintingManager">
            <summary>
            Gauge printing class, used to perform printing-related operations.
            </summary>
            <remarks>
            This class is exposed as the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Printing"/> 
            property of the root <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> object.
            <p>
            Use the <see cref="M:Dundas.Gauges.WinControl.PrintingManager.Print(System.Boolean)"/> method to print the gauge container, and 
            optionally show the Print dialog using the <i>showPrintDialog</i> argument.
            </p>
            <p>
            To display the Page Setup or Print Preview dialog use the <see cref="M:Dundas.Gauges.WinControl.PrintingManager.PageSetup"/> 
            and <see cref="M:Dundas.Gauges.WinControl.PrintingManager.PrintPreview"/> methods, respectively.
            </p>
            <p>
            User-defined printing routines can be implemented using the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage"/> 
            event of a <see cref="P:Dundas.Gauges.WinControl.PrintingManager.PrintDocument"/> object. In the event handler call the 
            <b>PrintingManager</b> object's <see cref="M:Dundas.Gauges.WinControl.PrintingManager.PrintPaint(System.Drawing.Graphics,System.Drawing.Rectangle)"/> method to draw 
            the gauge. Refer to the "Printing a Gauge" article in the documentation for 
            source code and more information on how to do this.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.PrintingManager.PrintPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws a gauge on the printer graphics.
            </summary>
            <param name="g">Printer graphics object.</param>
            <param name="position">Position where the graphics will be drawn.</param>
            <remarks>
            User-defined printing routines can be implemented using the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage"/> 
            event of a <see cref="P:Dundas.Gauges.WinControl.PrintingManager.PrintDocument"/> object. In the event handler call this 
            <b>PrintPaint</b> method to draw 
            the gauge. Refer to the "Printing a Gauge" article in the documentation for 
            source code and more information on how to do this.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.PrintingManager.PageSetup">
            <summary>
            Shows the Page Setup dialog.
            </summary>
            <remarks>
            Displays a Page Setup dialog, which allows for paper size selection, 
            paper source, orientation, etc.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.PrintingManager.PrintPreview">
            <summary>
            Print preview of the gauge container.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.PrintingManager.Print(System.Boolean)">
            <summary>
            Prints the gauge container.
            </summary>
            <param name="showPrintDialog">Determines if the Print dialog should be 
            displayed.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.PrintingManager.pd_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Handles PrintPage event of the document.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="ev">Event parameters.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.PrintingManager.PrintDocument">
            <summary>
            Gets a <b>PrintDocument</b> object, which is a reusable object that sends 
            output to a printer. Can be used for custom print routines.
            <seealso cref="P:Dundas.Gauges.WinControl.PrintingManager.PrintDocument"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.PrintingManager.PrintDocument"/> .NET object, which sends output to a printer.
            </value>
            <remarks>
            User-defined printing routines can be implemented using the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage"/> 
            event of a <see cref="P:Dundas.Gauges.WinControl.PrintingManager.PrintDocument"/> object. In the event handler call the 
            <b>PrintingManager</b> object's <see cref="M:Dundas.Gauges.WinControl.PrintingManager.PrintPaint(System.Drawing.Graphics,System.Drawing.Rectangle)"/> method to draw 
            the gauge. Refer to the "Printing a Gauge" article in the documentation for 
            source code and more information on how to do this.
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeImageFormat">
            <summary>
            Specifies the format of the image.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageFormat.Jpeg">
            <summary>
            Joint Photographic Experts Group (JPEG) image format.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageFormat.Png">
            <summary>
            W3C Portable Network Graphics (PNG) image format.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageFormat.Bmp">
            <summary>
            Bitmap image format (BMP).
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageFormat.Tiff">
            <summary>
            Tag Image File Format (TIFF) image format.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageFormat.Gif">
            <summary>
            Graphics Interchange Format (GIF) image format.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeImageFormat.Emf">
            <summary>
            Enhanced Meta File (Emf) image format.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeGraphics">
            <summary>
            Encapsulates GDI+ gauge drawing functionality.
            </summary>
            <remarks>
            This class is exposed in some of the event argument-related classes, 
            and can be used to perform custom drawing.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawLineRel(System.Drawing.Color,System.Int32,Dundas.Gauges.WinControl.GaugeDashStyle,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting the two specified points.
            </summary>
            <param name="color">Line color.</param>
            <param name="width">Line width.</param>
            <param name="style">Line style.</param>
            <param name="firstPointF">A Point that represents the first point to connect.</param>
            <param name="secondPointF">A Point that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawLineAbs(System.Drawing.Color,System.Int32,Dundas.Gauges.WinControl.GaugeDashStyle,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting the two specified points using absolute coordinates.
            </summary>
            <param name="color">Line color.</param>
            <param name="width">Line width.</param>
            <param name="style">Line style.</param>
            <param name="firstPoint">A Point that represents the first point to connect.</param>
            <param name="secondPoint">A Point that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawLineRel(System.Drawing.Color,System.Int32,Dundas.Gauges.WinControl.GaugeDashStyle,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Int32)">
            <summary>
            Draws a line with shadow connecting the two specified points.
            </summary>
            <param name="color">Line color.</param>
            <param name="width">Line width.</param>
            <param name="style">Line style.</param>
            <param name="firstPoint">A Point that represents the first point to connect.</param>
            <param name="secondPoint">A Point that represents the second point to connect.</param>		
            <param name="shadowColor">Shadow Color.</param>
            <param name="shadowOffset">Shadow Offset.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawLineAbs(System.Drawing.Color,System.Int32,Dundas.Gauges.WinControl.GaugeDashStyle,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Int32)">
            <summary>
            Draws a line with shadow connecting the two specified points.
            </summary>
            <param name="color">Line color.</param>
            <param name="width">Line width.</param>
            <param name="style">Line style.</param>
            <param name="firstPoint">A Point that represents the first point to connect.</param>
            <param name="secondPoint">A Point that represents the second point to connect.</param>		
            <param name="shadowColor">Shadow Color.</param>
            <param name="shadowOffset">Shadow Offset.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetHatchBrush(Dundas.Gauges.WinControl.GaugeHatchStyle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates a Hatch Brush.
            </summary>
            <param name="hatchStyle">Chart Hatch style.</param>
            <param name="foreColor">Fore Color.</param>
            <param name="backColor">Back Color.</param>
            <returns>Brush</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetTextureBrush(System.String,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeImageWrapMode)">
            <summary>
            Creates a textured brush.
            </summary>
            <param name="name">Image file name or URL.</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="mode">Wrap mode.</param>
            <returns>Textured brush.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetShadowBrush">
            <summary>
            Return the shadow brush depending on the intensity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetShadowColor">
            <summary>
            Return the shadow brush depending on the intensity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetGradientBrush(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,Dundas.Gauges.WinControl.GradientType)">
            <summary>
            This method creates a gradient brush.
            </summary>
            <param name="rectangle">A rectangle which has to be filled with a gradient color.</param>
            <param name="firstColor">First color.</param>
            <param name="secondColor">Second color.</param>
            <param name="type">Gradient type.</param>
            <returns>Gradient Brush</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetPieGradientBrush(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            This method creates a gradient brush for pie. This gradient is one 
            of the types used only with pie and doughnut.
            </summary>
            <param name="rectangle">A rectangle which has to be filled with a gradient color</param>
            <param name="firstColor">First color</param>
            <param name="secondColor">Second color</param>
            <returns>Gradient Brush</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetPenStyle(Dundas.Gauges.WinControl.GaugeDashStyle)">
            <summary>
            Converts GDI+ line style to Chart Graph line style.
            </summary>
            <param name="style">Chart Line style.</param>
            <returns>GDI+ line style.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.WidenPath(System.Drawing.Drawing2D.GraphicsPath,System.Single)">
            <summary>
            Widens the provided graphics path.
            </summary>
            <param name="path"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.Union(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Combines the two graphics paths into one.
            </summary>
            <param name="pathA">A reference to the first GraphicsPath.</param>
            <param name="pathB">A reference to the second GraphicsPath.</param>
            <returns>A reference to a new GraphicsPath representing the union
            of the two paths.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.SplitIntoSegments(System.Drawing.Drawing2D.GraphicsPath,System.Int32,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Splits the provided paths into segments.
            </summary>
            <param name="pathToBeSplit">GraphicsPath to be split.</param>
            <param name="startingPoint">Starting point for splitting.</param>
            <param name="splitterPath">Splitter path/</param>
            <returns>An array of graphics paths containing the segments.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetFirstPointOf1Inside2(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Returns the first point of path1 that is inside path2.
            </summary>
            <param name="path1"></param>
            <param name="path2"></param>
            <returns>The index of the first point or -1 if not found.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetMarkerBrush(System.Drawing.Drawing2D.GraphicsPath,Dundas.Gauges.WinControl.MarkerStyle,System.Drawing.PointF,System.Single,System.Drawing.Color,Dundas.Gauges.WinControl.GradientType,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeHatchStyle)">
            <summary>
            Creates a marker brush.
            </summary>
            <param name="path">The GraphicsPath of the marker.</param>
            <param name="markerStyle">the marker style.</param>
            <param name="pointOrigin">The marker origin.</param>
            <param name="angle">The angle of rotation.</param>
            <param name="fillColor">The fill color.</param>
            <param name="fillGradientType">The gradient type.</param>
            <param name="fillGradientEndColor">The second color of the gradient.</param>
            <param name="fillHatchStyle">The fill hatch style.</param>
            <returns>A reference to the newly created brush.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.CreateStarPolygon(System.Drawing.RectangleF,System.Int32)">
            <summary>
            Creates polygon for multi-corner star marker.
            </summary>
            <param name="rectReal">Marker rectangle.</param>
            <param name="numberOfCorners">Number of corners (4 and up).</param>
            <returns>Array of points.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawMarkerRel(System.Drawing.PointF,Dundas.Gauges.WinControl.MarkerStyle,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Int32,System.String,System.Drawing.Color,System.Int32,System.Drawing.Color,System.Drawing.RectangleF)">
            <summary>
            Draw marker using relative coordinates of the center.
            </summary>
            <param name="point">Coordinates of the center.</param>
            <param name="markerStyle">Marker style.</param>
            <param name="markerSize">Marker size.</param>
            <param name="markerColor">Marker color.</param>
            <param name="markerBorderColor">Marker border color.</param>
            <param name="markerBorderSize">Marker border size.</param>
            <param name="markerImage">Marker image name.</param>
            <param name="markerImageTranspColor">Marker image transparent color.</param>
            <param name="shadowSize">Marker shadow size.</param>
            <param name="shadowColor">Marker shadow color.</param>
            <param name="imageScaleRect">Rectangle to which marker image should be scaled.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawMarkerAbs(System.Drawing.PointF,Dundas.Gauges.WinControl.MarkerStyle,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Int32,System.String,System.Drawing.Color,System.Int32,System.Drawing.Color,System.Drawing.RectangleF,System.Boolean,System.Single)">
            <summary>
            Draw marker using absolute coordinates of the center.
            </summary>
            <param name="point">Coordinates of the center.</param>
            <param name="markerStyle">Marker style.</param>
            <param name="markerSize">Marker size.</param>
            <param name="markerColor">Marker color.</param>
            <param name="markerBorderColor">Marker border color.</param>
            <param name="markerBorderSize">Marker border size.</param>
            <param name="markerImage">Marker image name.</param>
            <param name="markerImageTranspColor">Marker image transparent color.</param>
            <param name="shadowSize">Marker shadow size.</param>
            <param name="shadowColor">Marker shadow color.</param>
            <param name="imageScaleRect">Rectangle to which marker image should be scaled.</param>
            <param name="forceAntiAlias">Always use anti aliasing when drawing the marker.</param>
            <param name="angle">Angle for drawing.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawStringRel(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat,System.Int32)">
            <summary>
            Draw a string.
            </summary>
            <param name="text">Text.</param>
            <param name="font">Text Font.</param>
            <param name="brush">Text Brush.</param>
            <param name="position">Text Position.</param>
            <param name="format">Format and text alignment.</param>
            <param name="angle">Text angle.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawStringAbs(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat,System.Int32)">
            <summary>
            Draw a string.
            </summary>
            <param name="text">Text.</param>
            <param name="font">Text Font.</param>
            <param name="brush">Text Brush.</param>
            <param name="absPosition">Text Position.</param>
            <param name="format">Format and text alignment.</param>
            <param name="angle">Text angle.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.MeasureStringRel(System.String,System.Drawing.Font)">
            <summary>
            Measures the specified text string when drawn with 
            the specified Font object and formatted with the 
            specified StringFormat object.
            </summary>
            <param name="text">The string to measure</param>
            <param name="font">The Font object used to determine the size of the text string. </param>
            <returns>A SizeF structure that represents the size of text as drawn with font.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.MeasureStringRel(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified text string when drawn with 
            the specified Font object and formatted with the 
            specified StringFormat object.
            </summary>
            <param name="text">The string to measure</param>
            <param name="font">The Font object used to determine the size of the text string. </param>
            <param name="layoutArea">A SizeF structure that specifies the layout rectangle for the text. </param>
            <param name="stringFormat">A StringFormat object that represents formatting information, such as line spacing, for the text string. </param>
            <returns>A SizeF structure that represents the size of text as drawn with font.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawStringRel(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string at the specified location 
            with the specified Brush object and font. The formatting 
            attributes in the specified StringFormat object are applied 
            to the text.
            </summary>
            <param name="text">A string object that specifies the text to draw.</param>
            <param name="font">A Font object that specifies the font face and size with which to draw the text.</param>
            <param name="brush">A Brush object that determines the color and/or texture of the drawn text.</param>
            <param name="layoutRectangle">A RectangleF structure that specifies the location of the drawn text.</param>
            <param name="format">A StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawStringRel(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat,System.Int32)">
            <summary>
            Draws the specified text string at the specified location 
            with the specified angle and with the specified Brush object and font. The 
            formatting attributes in the specified StringFormat object are applied 
            to the text.
            </summary>
            <param name="text">A string object that specifies the text to draw.</param>
            <param name="font">A Font object that specifies the font face and size with which to draw the text.</param>
            <param name="brush">A Brush object that determines the color and/or texture of the drawn text.</param>
            <param name="layoutRectangle">A RectangleF structure that specifies the location of the drawn text.</param>
            <param name="format">A StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
            <param name="angle">A angle of the text</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.FillRectangleRel(System.Drawing.RectangleF,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeHatchStyle,System.String,Dundas.Gauges.WinControl.GaugeImageWrapMode,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeImageAlign,Dundas.Gauges.WinControl.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Gauges.WinControl.GaugeDashStyle,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.PenAlignment)">
            <summary>
            Draw a bar with shadow.
            </summary>
            <param name="rectF">Size of rectangle</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="shadowColor">Shadow Color</param>
            <param name="shadowOffset">Shadow Offset</param>
            <param name="penAlignment">Pen Alignment</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.FillRectangleRel(System.Drawing.RectangleF,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeHatchStyle,System.String,Dundas.Gauges.WinControl.GaugeImageWrapMode,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeImageAlign,Dundas.Gauges.WinControl.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Gauges.WinControl.GaugeDashStyle,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.PenAlignment,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Draws rectangle or circle (inside rectangle) with shadow.
            </summary>
            <param name="rectF">Size of rectangle</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="shadowColor">Shadow Color</param>
            <param name="shadowOffset">Shadow Offset</param>
            <param name="penAlignment">Pen Alignment</param>
            <param name="circular">Draw circular shape inside the rectangle.</param>
            <param name="circularSectorsCount">Number of sectors in circle when drawing the polygon.</param>
            <param name="circle3D">3D Circle must be drawn.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.FillRectangleShadowAbs(System.Drawing.RectangleF,System.Drawing.Color,System.Single,System.Drawing.Color)">
            <summary>
            Draw Shadow for a bar
            </summary>
            <param name="rect">Bar rectangle</param>
            <param name="shadowColor">Shadow Color</param>
            <param name="shadowOffset">Shadow Offset</param>
            <param name="backColor">Back Color</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.FillRectangleShadowAbs(System.Drawing.RectangleF,System.Drawing.Color,System.Single,System.Drawing.Color,System.Boolean,System.Int32)">
            <summary>
            Draw Shadow for a bar
            </summary>
            <param name="rect">Bar rectangle</param>
            <param name="shadowColor">Shadow Color</param>
            <param name="shadowOffset">Shadow Offset</param>
            <param name="backColor">Back Color</param>
            <param name="circular">Draw circular shape inside the rectangle.</param>
            <param name="circularSectorsCount">Number of sectors in circle when drawing the polygon.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawCircleAbs(System.Drawing.Pen,System.Drawing.Brush,System.Drawing.RectangleF,System.Int32,System.Boolean)">
            <summary>
            Fills and/or draws border as circle or polygon.
            </summary>
            <param name="pen">Border pen.</param>
            <param name="brush">Border brush.</param>
            <param name="position">Circle position.</param>
            <param name="polygonSectorsNumber">Number of sectors for the polygon.</param>
            <param name="circle3D">Indicates that circle should be 3D..</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetSector3DBrush(System.Drawing.Brush,System.Single,System.Single)">
            <summary>
            Creates 3D sector brush.
            </summary>
            <param name="brush">Original brush.</param>
            <param name="curentSector">Sector position.</param>
            <param name="sectorSize">Sector size.</param>
            <returns>3D brush.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetBrightGradientColor(System.Drawing.Color,System.Double)">
            <summary>
            This method creates gradient color with brightness.
            </summary>
            <param name="beginColor">Start color for gradient.</param>
            <param name="position">Position used between Start and end color.</param>
            <returns>Calculated Gradient color from gradient position</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.FillRectangleAbs(System.Drawing.RectangleF,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeHatchStyle,System.String,Dundas.Gauges.WinControl.GaugeImageWrapMode,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeImageAlign,Dundas.Gauges.WinControl.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Gauges.WinControl.GaugeDashStyle,System.Drawing.Drawing2D.PenAlignment)">
            <summary>
            Draw Rectangle using absolute coordinates.
            </summary>
            <param name="rect">Size of rectangle</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch Style</param>
            <param name="backImage">Image URL</param>
            <param name="backImageMode">Image Mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment.</param>
            <param name="backGradientType">Gradient Type</param>
            <param name="backGradientEndColor">End Gradient color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="penAlignment">Border is outside or inside rectangle</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawPathShadowAbs(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Single)">
            <summary>
            Draws shadow on path
            </summary>
            <param name="path"></param>
            <param name="shadowColor"></param>
            <param name="shadowWidth"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawPathAbs(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeHatchStyle,System.String,Dundas.Gauges.WinControl.GaugeImageWrapMode,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeImageAlign,Dundas.Gauges.WinControl.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Gauges.WinControl.GaugeDashStyle,System.Drawing.Drawing2D.PenAlignment)">
            <summary>
            Fills graphics path using absolute coordinates.
            </summary>
            <param name="path">Graphics path to fill.</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch Style</param>
            <param name="backImage">Image URL</param>
            <param name="backImageMode">Image Mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment.</param>
            <param name="backGradientType">Gradient Type</param>
            <param name="backGradientEndColor">End Gradient color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="penAlignment">Border is outside or inside rectangle</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.CreateBrush(System.Drawing.RectangleF,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeHatchStyle,System.String,Dundas.Gauges.WinControl.GaugeImageWrapMode,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeImageAlign,Dundas.Gauges.WinControl.GradientType,System.Drawing.Color)">
            <summary>
            Creates brush with specified attributes.
            </summary>
            <param name="rect">Gradient rectangle</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <returns>New brush object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.PixelsToPercents(System.Drawing.PointF)">
            <summary>
            Converts a point on the gauge in graphics pixels to percents.
            </summary>
            <param name="pointInPixels">A <see cref="T:System.Drawing.PointF"/> containing the
            X and Y coordinates in pixels.
            </param>
            <returns>A <see cref="T:System.Drawing.PointF"/> containing the coordinates in percents, where the top left
            corner is (0, 0) and the bottom right corner is (100, 100).
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.PercentsToPixels(System.Drawing.PointF)">
            <summary>
            Converts a point on the gauge in percents to graphics pixels.
            </summary>
            <param name="pointInPercents">A <see cref="T:System.Drawing.PointF"/> containing the
            X and Y coordinates in percents, where the top left corner of the gauge control is (0, 0)
            and the bottom right corner is (100, 100).
            </param>
            <returns>A <see cref="T:System.Drawing.PointF"/> containing the coordinates in pixels.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.PixelsToPercents(System.Drawing.SizeF)">
            <summary>
            Converts a size from graphics pixels to percents.
            </summary>
            <param name="sizeInPixels">A <see cref="T:System.Drawing.SizeF"/> containing the
            Width and Height in pixels.
            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> containing the size in percents, where the top left
            corner is (0, 0) and the bottom right corner is (100, 100).
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.PercentsToPixels(System.Drawing.SizeF)">
            <summary>
            Converts a point on the gauge in percents to graphics pixels.
            </summary>
            <param name="sizeInPercents">A <see cref="T:System.Drawing.SizeF"/> containing the
            Width and Height in percents, where the top left corner is (0, 0)
            and the bottom right corner is (100, 100).
            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> containing the size in pixels.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetRelativeX(System.Single)">
            <summary>
            Converts the absolute X coordinate to a relative X coordinate.
            </summary>
            <param name="absoluteX">The absolute X coordinate in pixels.</param>
            <returns>The relative X coordinate in percents.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetRelativeY(System.Single)">
            <summary>
            Converts the absolute Y coordinate to a relative Y coordinate.
            </summary>
            <param name="absoluteY">The absolute Y coordinate in pixels.</param>
            <returns>The relative Y coordinate in percents.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetRelativeWidth(System.Single)">
            <summary>
            Converts the absolute width coordinate to a relative width coordinate.
            </summary>
            <param name="absoluteWidth">The absolute width coordinate in pixels.</param>
            <returns>The relative width coordinate in percents.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetRelativeHeight(System.Single)">
            <summary>
            Converts the absolute height coordinate to a relative height coordinate.
            </summary>
            <param name="absoluteHeight">The absolute height coordinate in pixels.</param>
            <returns>The relative height coordinate in percents.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetAbsoluteX(System.Single)">
            <summary>
            Converts the relative X coordinate to an absolute X coordinate.
            </summary>
            <param name="relativeX">The relative X coordinate in percents.</param>
            <returns>The absolute X coordinate.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetAbsoluteY(System.Single)">
            <summary>
            Converts the relative Y coordinate to an absolute Y coordinate.
            </summary>
            <param name="relativeY">The relative Y coordinate in percents.</param>
            <returns>The absolute Y coordinate.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetAbsoluteWidth(System.Single)">
            <summary>
            Converts the relative width coordinate to an absolute width coordinate.
            </summary>
            <param name="relativeWidth">The relative width coordinate in percents.</param>
            <returns>The absolute width coordinate.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetAbsoluteHeight(System.Single)">
            <summary>
            Converts the relative height coordinate to an absolute height coordinate.
            </summary>
            <param name="relativeHeight">The relative height coordinate in percents.</param>
            <returns>The absolute height coordinate.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetRelativeRectangle(System.Drawing.RectangleF)">
            <summary>
            Converts absolute coordinates of a rectangle to 
            relative coordinates.
            </summary>
            <param name="absolute">Absolute coordinates.</param>
            <returns>Relative coordinates as a percent.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetRelativePoint(System.Drawing.PointF)">
            <summary>
            Converts absolute coordinates of a point to 
            relative coordinates.
            </summary>
            <param name="absolute">Absolute coordinates.</param>
            <returns>Relative coordinates as a percent.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetRelativeSize(System.Drawing.SizeF)">
            <summary>
            Converts an absolute size to a relative size.
            </summary>
            <param name="size">Absolute size.</param>
            <returns>Relative size.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetAbsoluteDimension(System.Single)">
            <summary>
            Converts relative coordinates of one dimension to 
            absolute coordinates.
            </summary>
            <param name="relative">Relative position as a percent.</param>
            <returns>Absolute position.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetAbsolutePoint(System.Drawing.PointF)">
            <summary>
            Converts relative coordinates of a point to 
            absolute coordinates.
            </summary>
            <param name="relative">Relative position as a percent.</param>
            <returns>Absolute position.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetAbsoluteRectangle(System.Drawing.RectangleF)">
            <summary>
            Converts relative coordinates of a rectangle to 
            absolute coordinates.
            </summary>
            <param name="relative">Relative position as a percent.</param>
            <returns>Absolute position.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetAbsoluteSize(System.Drawing.SizeF)">
            <summary>
            Converts relative size to absolute size.
            </summary>
            <param name="relative">Relative size as a percent.</param>
            <returns>Absolute size.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.CreateRoundedRectPath(System.Drawing.RectangleF,System.Single[])">
            <summary>
            Helper function which creates a rounded rectangle path.
            </summary>
            <param name="rect">Rectangle coordinates.</param>
            <param name="cornerRadius">Array of 4 corners radius.</param>
            <returns>Graphics path object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawRoundedRectShadowAbs(System.Drawing.RectangleF,System.Single[],System.Single,System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>
            Helper function which draws a shadow of the rounded rect.
            </summary>
            <param name="rect">Rectangle coordinates.</param>
            <param name="cornerRadius">Array of 4 corners radius.</param>
            <param name="radius">Rounding radius.</param>
            <param name="centerColor">Center color.</param>
            <param name="surroundColor">Surrounding color.</param>
            <param name="shadowScale">Shadow scale value.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawPieRel(System.Drawing.RectangleF,System.Single,System.Single,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeHatchStyle,System.String,Dundas.Gauges.WinControl.GaugeImageWrapMode,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeImageAlign,Dundas.Gauges.WinControl.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Gauges.WinControl.GaugeDashStyle,System.Drawing.Drawing2D.PenAlignment,System.Boolean,System.Double,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Draws a pie defined by an ellipse specified by a Rectangle structure and two radial lines.
            </summary>
            <param name="rect">Rectangle structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
            <param name="backColor">Fill color</param>
            <param name="backHatchStyle">Fill Hatch Style</param>
            <param name="backImage">Fill texture</param>
            <param name="backImageMode">Texture image mode</param>
            <param name="backImageTranspColor">Texture transparent color</param>
            <param name="backImageAlign">Texture Alignment</param>
            <param name="backGradientType">Fill Gradient type</param>
            <param name="backGradientEndColor">Fill Gradient Second Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="penAlignment">Border Pen Alignment</param>
            <param name="shadow">True if shadow is active</param>
            <param name="shadowOffset">An offset of the shadow</param>
            <param name="doughnut">True if Doughnut is drawn instead of pie</param>
            <param name="doughnutRadius">Internal radius of the doughnut</param>
            <param name="explodedShadow">Used for soft shadow</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawPieSoftShadow(System.Double,System.Single,System.Single,System.Boolean,System.Drawing.RectangleF,System.Drawing.Color)">
            <summary>
            The soft shadow of the pie 
            </summary>
            <param name="shadowOffset">An offset of the shadow</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
            <param name="explodedShadow">Used for soft shadow</param>
            <param name="absRect">Rectangle of the pie in absolute coordinates</param>
            <param name="backColor">Fill color</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetCircularRangeBrush(System.Drawing.RectangleF,System.Single,System.Single,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeHatchStyle,System.String,Dundas.Gauges.WinControl.GaugeImageWrapMode,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeImageAlign,Dundas.Gauges.WinControl.RangeGradientType,System.Drawing.Color)">
            <summary>
            Get the brush for an circular range.
            </summary>
            <param name="rect">The bounding rectangle of the range.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
            <param name="backColor">The back color.</param>
            <param name="backHatchStyle">The hatch style.</param>
            <param name="backImage">The back image.</param>
            <param name="backImageMode"></param>
            <param name="backImageTranspColor">The transparent color.</param>
            <param name="backImageAlign">The image alignment.</param>
            <param name="backGradientType">The type of gradient.</param>
            <param name="backGradientEndColor">The gradient end color.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetCircularRangePath(System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Single,Dundas.Gauges.WinControl.Placement)">
            <summary>
            Returns the graphics path of an circular range.
            </summary>
            <param name="rect">The rectangle of the circular side of the range.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
            <param name="startRadius">The start radius.</param>
            <param name="endRadius">The end radius.</param>
            <param name="placement">The placement.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetSurroundColors(System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>
            Returns an array intermediate colors between the two given colors.
            </summary>
            <param name="startColor">The start color.</param>
            <param name="endColor">The end color.</param>
            <param name="colorCount">The number of intermediate colors to return.</param>
            <returns>A reference to an array of colors.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetLinearRangePath(System.Single,System.Single,System.Single,System.Single,System.Single,Dundas.Gauges.WinControl.GaugeOrientation,System.Single,Dundas.Gauges.WinControl.Placement,System.Single)">
            <summary>
            Creates a  graphics path for a range.
            </summary>
            <param name="startPosition">The start position in relative coordinates.</param>
            <param name="endPosition">The end position in relative coordinates.</param>
            <param name="startWidth">The start width in relative coordinates.</param>
            <param name="endWidth">The end width in relative coordinates.</param>
            <param name="scalePosition">The position of the scale in relative coordinates.</param>
            <param name="orientation">The orientation of the linear gauge.</param>
            <param name="distanceFromScale">The distance from scale  in relative coordinates.</param>
            <param name="placement">The placement of the range.</param>
            <param name="scaleBarWidth">The width of the scale bar in relative coordinates.</param>
            <returns>A reference to the new GraphicsPath object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetLinearRangeBrush(System.Drawing.RectangleF,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeHatchStyle,Dundas.Gauges.WinControl.RangeGradientType,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeOrientation,System.Boolean,System.Double,System.Double)">
            <summary>
            Returns the brush of a range.
            </summary>
            <param name="absRect">The bounding rectangle of the range in absolute coordinates.</param>
            <param name="backColor">The fill color.</param>
            <param name="backHatchStyle">The hatch style.</param>
            <param name="backGradientType">The gradient type.</param>
            <param name="backGradientEndColor">The gradient end color.</param>
            <param name="orientation">The orientation of the linear gauge.</param>
            <param name="reversedScale">Determines if the scale is reversed.</param>
            <param name="startValue">Start value.</param>
            <param name="endValue">End value.</param>
            <returns>A reference to the new brush.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetThermometerPath(System.Single,System.Single,System.Single,System.Single,Dundas.Gauges.WinControl.GaugeOrientation,System.Single,Dundas.Gauges.WinControl.Placement,System.Boolean,System.Single,System.Single,System.Single,Dundas.Gauges.WinControl.ThermometerStyle)">
            <summary>
            Creates a  grphics path for a thermometer.
            </summary>
            <param name="startPosition">The start position in relative coordinates.</param>
            <param name="endPosition">The end position in relative coordinates.</param>
            <param name="barWidth">The bar width in relative coordinates.</param>
            <param name="scalePosition">The position of the scale in relative coordinates.</param>
            <param name="orientation">The orientation of the linear gauge.</param>
            <param name="distanceFromScale">The distance from scale  in relative coordinates.</param>
            <param name="placement">The placement of the thermometer.</param>
            <param name="reversedScale">Determines if the scale is reversed.</param>
            <param name="scaleBarWidth">The width of the scale bar in relative coordinates.</param>
            <param name="bulbOffset">The offset of the bulb.</param>
            <param name="bulbSize">The size of the bulb.</param>
            <param name="thermometerStyle">The style of the thermometer.</param>
            <returns>A reference to the new GraphicsPath object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetCircularEdgeReflection(System.Drawing.RectangleF,System.Single,System.Int32,System.Drawing.PointF,System.Drawing.Drawing2D.GraphicsPath@,System.Drawing.Brush@)">
            <summary>
            Creates and returns a path and a brush that emulate a circular edge reflection.
            </summary>
            <param name="bounds">The bounding rectangle of the circle.</param>
            <param name="angle">The rotation angle of the reflection.</param>
            <param name="alpha">The alpha factor of the reflection.</param>
            <param name="pointOrigin">The point to which the path and brush need
            to be translated to.</param>
            <param name="pathResult">The graphics path of the reflection.</param>
            <param name="brushResult">The brush of the reflection.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawImageRel(System.String,System.Drawing.RectangleF)">
            <summary>
            Draws the specified Image object at the specified location 
            and with the specified size.
            </summary>
            <param name="name">Image file name or URL</param>
            <param name="position">Image position</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.Round(System.Drawing.RectangleF)">
            <summary>
            Find rounding coordinates for a rectangle
            </summary>
            <param name="rect">Rectangle which has to be rounded</param>
            <returns>Rounded rectangle</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.RoundRect(System.Drawing.RectangleF)">
            <summary>
            Find rounding coordinates for a rectangle
            </summary>
            <param name="rect">Rectangle which has to be rounded</param>
            <returns>Rounded rectangle</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.SetPictureSize(System.Int32,System.Int32)">
            <summary>
            Set picture size
            </summary>
            <param name="width">Width</param>
            <param name="height">Height</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.#ctor(Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Constructor
            </summary>
            <param name="common">Common elements class</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.Close">
            <summary>
            Closes the object.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.Dispose">
            <summary>
            Dispose pen and brush
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this Graphics object 
            to the rectangle specified by a RectangleF structure.
            </summary>
            <param name="region">Region rectangle</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.GetGradientColor(System.Drawing.Color,System.Drawing.Color,System.Double)">
            <summary>
            Returns the gradient color from a gradient position.
            </summary>
            <param name="beginColor">The color from the gradient beginning.</param>
            <param name="endColor">The color from the gradient end.</param>
            <param name="dPosition">Relative position between Begin color and End color. The double number between 0 - 1.</param>
            <returns>Result color.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawSelection(System.Drawing.RectangleF,System.Boolean,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Draws a selection around the specified rectangle. Actully the selection
            is drawn withing the rectangle's bounds.
            </summary>
            <param name="rect">The rectangle of the selection.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
            <param name="borderColor">The color of the border.</param>
            <param name="markerColor">The fill color of the markers.</param>		
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeGraphics.DrawSelection(System.Drawing.RectangleF,System.Single,System.Boolean,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Draws a selection around the specified rectangle. Actually, the selection
            is drawn within the rectangle's bounds.
            </summary>
            <param name="rect">The rectangle of the selection.</param>
            <param name="inflateBy">Number of pixels by which the selection rectangle
            is to be inflated.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
            <param name="borderColor">The color of the border.</param>
            <param name="markerColor">The fill color of the markers.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeGraphics.Graphics">
            <summary>
            Gets or sets a Graphics object, which encapsulates a GDI+ drawing surface.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.GaugeGraphics.Graphics"/> object.
            </value>
            <remarks>
            This object can be used to perform drawing-related functions.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeGraphics.AntiAliasing">
            <summary>
            Chart Graphics Anti alias mode
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ImageSmoothingState">
            <summary>
            Used to set and restore the image smoothing state.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ImageSmoothingState.g">
            <summary>
            A reference to the GaugeGraphics
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ImageSmoothingState.oldSmoothingMode">
            <summary>
            Stores SmoothingMode
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ImageSmoothingState.compositingQuality">
            <summary>
            Stores CompositingQuality
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ImageSmoothingState.oldInterpolationMode">
            <summary>
            Stores InterpolationMode
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageSmoothingState.Set">
            <summary>
            Sets the image smoothing state.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageSmoothingState.Restore">
            <summary>
            Restores the old image smoothing state/
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ScaleType">
            <summary>
            Represents the type of a scale.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ScaleType.Linear">
            <summary>
            The scale is linear.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ScaleType.Logarithmic">
            <summary>
            The scale is logarithmic.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.IntervalTypes">
            <summary>
            Private enum to parameterize GetInterval and GetIntervalOffset methods.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.MarkerPosition">
            <summary>
            The MarkerPosition class holds information for tick mark and label positions. 
            Used along with markers and labels arrays to prevent overlapping of tickmarks and labels.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MarkerPosition.position">
            <summary>
            The absolute position of the marker on the scale
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MarkerPosition.value">
            <summary>
            The value position of the marker
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MarkerPosition.placement">
            <summary>
            Placement of the marker
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.MarkerPosition.#ctor(System.Single,System.Double,Dundas.Gauges.WinControl.Placement)">
            <summary>
            Initializes a new instance of MarkerPosition class
            </summary>
            <param name="position">The absolute position of the marker on the scale</param>
            <param name="value">The value position of the marker</param>
            <param name="placement">Placement of the marker</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.MarkerPosition.IsExistsInArray(System.Collections.ArrayList,Dundas.Gauges.WinControl.MarkerPosition)">
            <summary>
            Checks for existence of a marker in array on same position markerPos
            </summary>
            <param name="array">The array which holds MarkerPosition objects</param>
            <param name="markerPos">Position to check</param>
            <returns>True if there is marker on same position</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.MarkerPosition.Snap(System.Collections.ArrayList,System.Double)">
            <summary>
            Aligns value to nearest marker.
            </summary>
            <param name="array">The array which holds MarkerPosition objects</param>
            <param name="value">Value to align</param>
            <returns>Aligned value to nearest position</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.MarkerPosition.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type. Used for array sorting.
            </summary>
            <param name="obj">An object to compare with this instance</param>
            <returns>A 32-bit signed integer that indicates 
            the relative order of the comparands.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.Gap">
            <summary>
            Private helper class to calculate offsets from scale for markers and labels
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.Gap.Inside">
            <summary>
            Offset from scale - inside direction. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.Gap.Center">
            <summary>
            Keeps center ( scale position );
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.Gap.Outside">
            <summary>
            Offset from scale - outside direction. 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.Gap.baseInside">
            <summary>
            Fix the base inside position
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.Gap.baseOutside">
            <summary>
            Fix the base outside position
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Gap.#ctor(System.Single)">
            <summary>
            Initializes a new instance of Gap class
            </summary>
            <param name="center">Base center offset (usually scale position).</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Gap.SetBase">
            <summary>
            Fix the base offsets
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Gap.SetOffset(Dundas.Gauges.WinControl.Placement,System.Single)">
            <summary>
            Calculates new offsets
            </summary>
            <param name="placement">The placement to calculate</param>
            <param name="length">The offset</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Gap.SetOffsetBase(Dundas.Gauges.WinControl.Placement,System.Single)">
            <summary>
            Calculates new offsets with restrictions against bases
            </summary>
            <param name="placement">The placement of the item</param>
            <param name="length">The offset</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Gap.InsideGap">
            <summary>
            Gets offset from scale - inside direction. 
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Gap.OutsideGap">
            <summary>
            Gets offset from scale - outside direction. 
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ScaleSourceConverter">
            <summary>
            The ScaleSourceConverter class is used in design time to show list of available scales 
            belongs to specified gauge.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ScaleSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list scale names.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values collection.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.BarStart">
            <summary>
            Defines bar starting positions.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BarStart.Zero">
            <summary>
            The bar pointer will start at zero.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BarStart.ScaleStart">
            <summary>
            The bar pointer will start at the beginning of the scale.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeDesigner">
            <summary>
            Summary description for GaugeDesigner.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeDesigner.selectionService">
            <summary>
            Reference to the designer selection service.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initialize designer.
            </summary>
            <param name="component">Component.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.OnSetComponentDefaults">
            <summary>
            Set component defaults.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.OnLoadTemplate(System.Object,System.EventArgs)">
            <summary>
            Load template verb was selected.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Arguments.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.OnCreateTemplate(System.Object,System.EventArgs)">
            <summary>
            Save template verb was selected.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Arguments.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.OnReset(System.Object,System.EventArgs)">
            <summary>
            Reset verb was selected.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Arguments.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.OnDataSourceChanged(Dundas.Gauges.WinControl.GaugeContainer)">
            <summary>
            Data source was changed.
            </summary>
            <param name="gauge">Reference to the gauge control.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.OnWizard(System.Object,System.EventArgs)">
            <summary>
            Wizard verb was selected.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Arguments.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.LoadWizardAssembly(System.Boolean)">
            <summary>
            Loads wizard assembly.
            </summary>
            <param name="autoRun">Wizard was automatically started.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.ShowWizard(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Shows Wizard form
            </summary>
            <param name="gauge">Gauge control.</param>
            <param name="loadData">Load data flag.</param>
            <param name="autoRun">Wizard was automatically started.</param>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeDesigner.actionLists">
            <summary>
            References to DesignerActionList and SelectorManager
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeDesigner.actionListVisible">
            <summary>
            ToolStrip action management flags
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
            <summary>
            Used as MouseDown event ( Click).Updates the selection and action list if nessesary.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeDesigner.toolStripHooked">
            <summary>
            ToolStrip ( ActionListPanel ) hooked flag
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.HookToActionList">
            <summary>
            Trying to attach to ActionListPanel several events
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.ToolStrip_Closing(System.Object,System.Windows.Forms.ToolStripDropDownClosingEventArgs)">
            <summary>
            Handling the ActionListPanel  Closing event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.ToolStrip_VisibleChanged(System.Object,System.EventArgs)">
            <summary>
            Handling the ActionListPanel VisibleChanged event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.ToolStrip_Disposing(System.Object,System.EventArgs)">
            <summary>
            Handling the ActionListPanel Disposing event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.UpdateActionList">
            <summary>
            Updates the ActionList in safe manner.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeDesigner.ShowActionList">
            <summary>
            Force showing the action list.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeDesigner.ActionList">
            <summary>
            Gets the GaugeActionList collection
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeDesigner.ActionService">
            <summary>
            Gets a reference to current DesignerActionService
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeDesigner.ActionUIService">
            <summary>
            Gets a reference to current DesignerActionService
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.WinGaugeDesignerSerializer">
            <summary>
            Windows forms gauge control designer class.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.WinGaugeDesignerSerializer.deSerializing">
            <summary>
            Flag to indicate if we are deserializing.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.WinGaugeDesignerSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Serializes the specified object into a CodeDOM object.
            </summary>
            <param name="manager">A serialization manager interface that is used during the deserialization process.</param>
            <param name="value">The object to serialize.</param>
            <returns>A CodeDOM object representing the object that has been serialized.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.WinGaugeDesignerSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Deserializes the specified serialized CodeDOM object into an object.
            </summary>
            <param name="manager">A serialization manager interface that is used during the deserialization process.</param>
            <param name="codeObject">A serialized CodeDOM object to deserialize.</param>
            <returns>The deserialized CodeDOM object.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SvgOpenParameters">
            <summary>
            This structure is used for Open method 
            in Svg. It contains parameters necessary 
            for creation of Svg document.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SvgOpenParameters.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="toolTipsEnabled">Tool Tips enabled</param>
            <param name="resizable">Relative size for Svg</param>
            <param name="preserveAspectRatio">The graphics stretch to fit non-uniformly to take up the entire viewport</param>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgOpenParameters.toolTipsEnabled">
            <summary>
            Tool Tips enabled
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgOpenParameters.resizable">
            <summary>
            Relative size for Svg
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SvgOpenParameters.preserveAspectRatio">
            <summary>
            The graphics stretch to fit non-uniformly to take up the entire viewport
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ImageValueEditor">
            <summary>
            Image string editor class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageValueEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Override this function to support palette colors drawing
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Can paint values.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ImageValueEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Override this function to support palette colors drawing
            </summary>
            <param name="e">Paint value event arguments.</param>
        </member>
        <member name="T:Dundas.Gauges.WinControl.HatchStyleEditor">
            <summary>
            Type editor for the hatch type.
            Paints a rectangle with hatch sample.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HatchStyleEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Override this function to support palette colors drawing
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Can paint values.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HatchStyleEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Override this function to support palette colors drawing
            </summary>
            <param name="e">Paint value event arguments.</param>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValueRateOfChange">
            <summary>
            This class represents a rate of change calculated value.
            </summary>
            <remarks>
            Rate of change calculations have a rate-of-change period, which determines the 
            amount of time that elapses for the change to occur (e.g. per second, per 
            10 years, etc.).
            <p>
            A calculated value is owned by an <see cref="T:Dundas.Gauges.WinControl.InputValue"/> object, which has a 
            <see cref="P:Dundas.Gauges.WinControl.InputValue.CalculatedValues"/> collection.
            </p>	
            <p>
            Calculated values use the history of their input values as source data.
            </p>
            </remarks>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CalculatedValueRateOfChange.oldValues">
            <summary>
            Shallow ( 2 points ) queue of the old values.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CalculatedValueRateOfChange.rateOfChange">
            <summary>
            Represents RateOfChange
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueRateOfChange.CalculateValue(System.Double,System.DateTime)">
            <summary>
            Calculates rate of change for specified GaugeDuration.
            </summary>
            <param name="value">The input value.</param>
            <param name="timeStamp">The input time stamp.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueRateOfChange.GetResult(System.Double,System.DateTime,Dundas.Gauges.WinControl.DataSampleRC,System.TimeSpan)">
            <summary>
            Calculates rate of change result based on current data point, 
            last recorded data point and period of this rate of change.
            </summary>
            <param name="value">The input value.</param>
            <param name="timeStamp">The input time stamp.</param>
            <param name="rc">The previous date/value pair.</param>
            <param name="period">The period of differentiations.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueRateOfChange.CloneInternals(System.Object)">
            <summary>
            Initializes an object that is a copy of the current instance.
            </summary>
            <param name="copy">The object to initialize</param>
            <returns>Initialized copy of this current instance</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueRateOfChange.RateOfChangePeriod">
            <summary>
            Gets or sets rate of change period in units specified by the 
            <b>RateOfChangePeriodType</b> property.
            <seealso cref="P:Dundas.Gauges.WinControl.CalculatedValueRateOfChange.RateOfChangePeriodType"/>
            </summary>
            <value>
            A double that represents the rate of change period. Defaults to 
            not set (Double.NaN).
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueRateOfChange.RateOfChangePeriodType">
            <summary>
            Gets or sets the rate of change period type.
            <seealso cref="P:Dundas.Gauges.WinControl.CalculatedValueRateOfChange.RateOfChangePeriod"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.CalculatedValueRateOfChange.PeriodType"/> value, that determines the unit type of 
            the rate of change period. Defaults to <b>PeriodTypeEnum.Seconds</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueRateOfChange.Period">
            <summary>
            This calculated value does not use the Period property
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueRateOfChange.PeriodType">
            <summary>
            This calculated value does not use the PeriodType property
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueRateOfChange.RequiresDistinctValues">
            <summary>
            If this property is true the value is calculated only id the new value is
            different than the current (the value changes).
            Default value is <c>true</c>.
            NOTE: This calculated value needs to be recalculated if the new value
            is the same as the old one. In this case the result is 0.
            </summary>
            <remarks>This property was introduced as a BUGFIX(SG)#7849.</remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.DataSampleRC">
            <summary>
            Represents Value/Date pair as helper class for calculations
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.DataSampleRC.Invalid">
            <summary>
            Invalid flag
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.DataSampleRC.Assign(Dundas.Gauges.WinControl.DataSampleRC)">
            <summary>
            Copies information from other DataSampleRC instance.
            </summary>
            <param name="data">The DataSampleRC instance for copying.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.DataSampleRC.TimeStamp">
            <summary>
            Gets and sets the time stamp of the current DataSampleRC instance
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.DataSampleRC.Value">
            <summary>
             Gets and sets the Value of the current DataSampleRC instance
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValueRateOfChangeConverter">
            <summary>
            Design time type converter of the CalculatedValueMin class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueRateOfChangeConverter.#ctor">
            <summary>
            Initializes a new instance of the ConverterRC class.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.TickMark">
            <summary>
            Represents a custom tickmark.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.TickMark.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.TickMark.#ctor(System.Object)">
            <summary>
            Constructor that takes a parent object.
            </summary>
            <param name="parent">
            The tick mark's parent object.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.TickMark.#ctor(System.Object,Dundas.Gauges.WinControl.MarkerStyle,System.Single,System.Single)">
            <summary>
            Constructor that takes a parent object, marker style, length and width.
            </summary>
            <param name="parent">
            Parent object.
            </param>
            <param name="shape">
            A <see cref="T:Dundas.Gauges.WinControl.MarkerStyle"/> object that determines the tick mark's shape.
            </param>
            <param name="length">
            A float that represents the tick marks's length.
            </param>
            <param name="width">
            A float that represents the tick marks's width.
            </param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.TickMark.Interval">
            <summary>
            Determines how often the tick marks will be drawn. 
            <seealso cref="P:Dundas.Gauges.WinControl.TickMark.IntervalOffset"/>
            </summary>
            <value>
            A double that represents the tick mark interval. Defaults to 
            not set (Double.NaN),m in which case the interval is calculated 
            automatically.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.TickMark.IntervalOffset">
            <summary>
            A value by which the tick marks will be offset. 
            <seealso cref="P:Dundas.Gauges.WinControl.TickMark.Interval"/>
            </summary>
            <value>
            A double that represents the interval offset. Defaults to 
            not set (Double.NaN).
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularMajorTickMark">
            <summary>
            Represents a circular major tickmark.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularMajorTickMark.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularMajorTickMark.#ctor(System.Object)">
            <summary>
            Constructor that takes a parent object.
            </summary>
            <param name="parent">
            A parent object.
            </param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularMajorTickMark.Shape">
            <summary>
            Determines the shape of the tick mark.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.MarkerStyle"/> value that determines the tick mark 
            shape. Defaults to <b>MarkerStyle.Trapezoid</b>. 
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularMajorTickMark.Length">
            <summary>
            Determines the length of the tick mark, measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularMajorTickMark.Width"/>
            </summary>
            <value>
            A float that represents the tick mark length. Defaults 
            to 14 pixels.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularMajorTickMark.Width">
            <summary>
            Determines the width of the tick mark, measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularMajorTickMark.Length"/>
            </summary>
            <value>
            A float that represents the tick mark width. Defaults 
            to 8 pixels.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularMinorTickMark">
            <summary>
            Represents a circular minor tickmark.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularMinorTickMark.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularMinorTickMark.#ctor(System.Object)">
            <summary>
            Constructor that takes a parent object.
            </summary>
            <param name="parent">
            A parent object.
            </param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularMinorTickMark.Shape">
            <summary>
            Determines the shape of the tick mark.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.MarkerStyle"/> value that determines the tick mark 
            shape. Defaults to <b>MarkerStyle.Rectangle</b>. 
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularMinorTickMark.Length">
            <summary>
            Determines the length of the tick mark, measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularMinorTickMark.Width"/>
            </summary>
            <value>
            A float that represents the tick mark length. Defaults 
            to 8 pixels.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularMinorTickMark.Width">
            <summary>
            Determines the width of the tick mark, measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularMinorTickMark.Length"/>
            </summary>
            <value>
            A float that represents the tick mark width. Defaults 
            to 3 pixels.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearMajorTickMark">
            <summary>
            Represents a linear major tickmark.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearMajorTickMark.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearMajorTickMark.#ctor(System.Object)">
            <summary>
            Constructor that takes a parent object.
            </summary>
            <param name="parent">
            A parent object.
            </param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearMajorTickMark.Shape">
            <summary>
            Determines the shape of the tick mark.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.MarkerStyle"/> value that determines the tick mark 
            shape. Defaults to <b>MarkerStyle.Rectangle</b>. 
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearMajorTickMark.Length">
            <summary>
            Determines the length of the tick mark, measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearMajorTickMark.Width"/>
            </summary>
            <value>
            A float that represents the tick mark length. Defaults 
            to 15 pixels.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearMajorTickMark.Width">
            <summary>
            Determines the width of the tick mark, measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearMajorTickMark.Length"/>
            </summary>
            <value>
            A float that represents the tick mark width. Defaults 
            to 4 pixels.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearMinorTickMark">
            <summary>
            Represents a linear minor tickmark.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearMinorTickMark.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearMinorTickMark.#ctor(System.Object)">
            <summary>
            Constructor that takes a parent object.
            </summary>
            <param name="parent">
            A parent object.
            </param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearMinorTickMark.Shape">
            <summary>
            Determines the shape of the tick mark.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.MarkerStyle"/> value that determines the tick mark 
            shape. Defaults to <b>MarkerStyle.Rectangle</b>. 
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearMinorTickMark.Length">
            <summary>
            Determines the length of the tick mark, measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearMinorTickMark.Width"/>
            </summary>
            <value>
            A float that represents the tick mark length. Defaults 
            to 9 pixels.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearMinorTickMark.Width">
            <summary>
            Determines the width of the tick mark, measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.LinearMinorTickMark.Length"/>
            </summary>
            <value>
            A float that represents the tick mark width. Defaults 
            to 3 pixels.
            </value>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearPointerCollection">
            <summary>
            Collection of <b>LinearPointer</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearPointer"/>
            </summary>
            <remarks>
            This collection is exposed as the <see cref="P:Dundas.Gauges.WinControl.LinearGauge.Pointers"/> 
            property of <see cref="T:Dundas.Gauges.WinControl.LinearGauge"/> objects.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointerCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointerCollection.Add(System.String)">
            <summary>
            Used by <b>LinearPointerCollection</b> to add an item to the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearPointer"/>
            <seealso cref="M:Dundas.Gauges.WinControl.LinearPointerCollection.Remove(Dundas.Gauges.WinControl.LinearPointer)"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.LinearPointer"/> object to be added 
            to the collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.CircularPointer"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. Also, 
            the <i>name</i> argument is the <b>Name</b> property of the object 
            being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointerCollection.Add(Dundas.Gauges.WinControl.LinearPointer)">
            <summary>
            Adds a <b>LinearPointer</b> object to the end of the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearPointer"/>
            <seealso cref="M:Dundas.Gauges.WinControl.LinearPointerCollection.Remove(Dundas.Gauges.WinControl.LinearPointer)"/>
            </summary>
            <param name="value">
            The name of the <see cref="T:Dundas.Gauges.WinControl.LinearPointer"/> object to be added to 
            the collection.
            </param>
            <returns>
            Returns the position in the collection of the newly added object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointerCollection.Remove(Dundas.Gauges.WinControl.LinearPointer)">
            <summary>
            Removes the specified <b>LinearPointer</b> object from the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.LinearPointerCollection.Add(System.String)"/>
            </summary>
            <param name="value">
            <see cref="T:Dundas.Gauges.WinControl.LinearPointer"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearPointerCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointerCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointerCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns the LinearPointer object
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearPointerCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>LinearPointer</b> object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.LinearGauge">
            <summary>
            Represents a linear gauge. May have scales, ranges and pointers.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearScale"/>
            <seealso cref="T:Dundas.Gauges.WinControl.LinearRange"/>
            <seealso cref="T:Dundas.Gauges.WinControl.LinearPointer"/>
            </summary>
            <remarks>
            Linear gauges are displayed within the <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/>, 
            which is the root object of Dundas Gauge.
            <p>
            The container can display multiple linear gauges.
            </p>
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeBase">
            <summary>
            Abstract base class for gauges (<b>LinearGauge</b> and <b>CircularGauge</b>).
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.#ctor">
            <summary>
            Initializes a new instance of GaugeBase class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.RemoveAutoLayout">
            <summary>
            This function turns off the AutoLayout property of the gauge container.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.GetRanges">
            <summary>
            Returns ranges belongs to this gauge. Must be overridden.
            </summary>
            <returns>The ranges belongs to this gauge</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.GetDefaultScaleName(System.String)">
            <summary>
            Converts element scale name ( like pointers.Scale) to real scale name.
            This is needed to handle situation with "Default" scale name.
            </summary>
            <param name="scaleName">The element scale name</param>
            <returns>The real scale name</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.ConnectToParent(System.Boolean)">
            <summary>
            Initialize this.parentSystem field which is NamedElement 
            holds the parent coordinate system.
            </summary>
            <param name="exact">Flag to throw an exception if the parent element is invalid.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.OnAdded">
            <summary>
            This method is called right after this NamedElement to 
            become a member of a NamedCollection. 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.EndInit">
            <summary>
            Finalize initialization
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.GetBoundRect(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the bounding rectangle of this element
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.RenderStaticElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Performs rendering of the static elements as pointers and state indicators.
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.RenderDynamicElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Performs rendering of the dynamic elements as pointers and state indicators.
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.Dundas#Gauges#WinControl#IRenderable#RenderStaticElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Performs rendering of the static elements as pointers and state indicators.
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.Dundas#Gauges#WinControl#IRenderable#RenderDynamicElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Performs rendering of the dynamic elements as pointers and state indicators.
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.Dundas#Gauges#WinControl#IRenderable#GetZOrder">
            <summary>
            Returns ZOrder of this IRenderable element.
            </summary>
            <returns>The ZOrder</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.Dundas#Gauges#WinControl#IRenderable#GetBoundRect(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the bounding rectangle of this element
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.Dundas#Gauges#WinControl#IRenderable#GetParentRenderable">
            <summary>
            Returns parent object which holds the coordinate system.
            if there is no parent object the result should be null.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.Dundas#Gauges#WinControl#IRenderable#GetParentRenderableName">
            <summary>
            Returns the name of the parent object which holds the coordinate system
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.PointerValueChanged(Dundas.Gauges.WinControl.PointerBase)">
            <summary>
            Must be overridden in order to call the PointerValueChanged event for the
            range that the pointer might be in.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeBase.Dundas#Gauges#WinControl#IToolTipProvider#GetToolTip(Dundas.Gauges.WinControl.HitTestResult)">
            <summary>
            Implementation of the GetToolTip(). Returns the resolved tooltip string.
            </summary>
            <param name="ht">A reference to HitTestResult.</param>
            <returns>A string containing the resolved tooltip.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeBase.Parent">
            <summary>
            Determines the parent element, which is used for the coordinate system.
            </summary>
            <value>
            A string value that represents the parent element.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeBase.ParentObject">
            <summary>
            Gets an object reference to the parent object. If there is no valid parent element the result is <b>null</b>.
            </summary>
            <value>
            The parent object, or <b>null</b> if there is none.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeBase.Name">
            <summary>
            The name of the gauge object.
            </summary>
            <value>
            A string value that represents the name of the gauge.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeBase.ToolTip">
            <summary>
            The tool tip to be displayed when the cursor is over the gauge.
            </summary>
            <value>
            A string value that represents the tooltip.
            </value>
            <remarks>
            The user can format the tool tip using #INPUTVALUE, #INPUTVALUE1, etc., in which case 
            the value from the GaugeContainer.Values collection will be displayed. 
            #POINTERVALUE, #POINTERVALUE1, etc., can also be used, in which case 
            the value of the indexed pointer will be shown.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeBase.Location">
            <summary>
            The location of the gauge inside the gauge container. The coordinates are measured 
            as a percentage of the container's width and height.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeLocation"/> object, which represents the location of the gauge.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeBase.Size">
            <summary>
            The size of the gauge inside the gauge container. The coordinates are measured 
            as a percentage of the container's width and height.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeSize"/> object, which represents the location of the gauge.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeBase.ZOrder">
            <summary>
            Determines the Z order of the gauge in the gauge container.
            </summary>
            <value>
            An integer that represents the Z order.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeBase.Visible">
            <summary>
            Determines the visibility of the gauge.
            </summary>
            <value>
            If <b>true</b> the gauge is visible, if <b>false</b> it is not. Defaults to 
            <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeBase.BackFrame">
            <summary>
            The frame attributes of the gauge or gauge container.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.GaugeBase.BackFrame"/> object, that represents the frame.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeBase.ClipContent">
            <summary>
            Determines if the content of the gauge is clipped (to the gauge bounds or its frame).
            </summary>
            <value>
            If <b>true</b> content is clipped to the gauge bounds, or frame if it exists. 
            If <b>false</b> no clipping will occur. Defaults to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeBase.Selected">
            <summary>
            Determines if the gauge visually appears selected.
            </summary>
            <value>
            If <b>true</b> the gauge appears selected. Default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeBase.TopImage">
            <summary>
            Gets or sets the image to be displayed on top of this gauge.
            <seealso cref="T:Dundas.Gauges.WinControl.NamedImage"/>
            <seealso cref="T:Dundas.Gauges.WinControl.NamedImageCollection"/>
            </summary>
            <value>A <b>string</b> representing the URL of the top image.</value>
            <remarks>The image should be an absolute or relative.
            <p>
            <b>NOTE</b>: This could also be the name of a <see cref="T:Dundas.Gauges.WinControl.NamedImage"/>, but 
            this functionality is limited due to the limited lifetime of the control.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeBase.TopImageTransColor">
            <summary>
            Get or sets the transparent color of the top image.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeBase.TopImage"/>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> representing the transparent
            color of the top image. The default value is <b>Color.Empty</b>.</value>
            <remarks>The color specified by this property will be treated as the
            transparent color of the image and will not be shown.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeBase.TopImageHueColor">
            <summary>
            Gets or sets the hue color to be applied to the top image.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeBase.TopImage"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            hue color to be applied to the top image. The default value is 
            <b>Color.Empty</b>.
            </value>
            <remarks>
            The hue color is applied to the entire image in order to modify its hue.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeBase.Position">
            <summary>
            This is a wrapper property for location and size.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.ToString">
            <summary>
            Returns the name of the gauge as a string.
            </summary>
            <returns>The name as a string.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.BeginInit">
            <summary>
            Overridden in order to call the BeginInit() of the Scales, Ranges
            and Pointers collections.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.EndInit">
            <summary>
            Overridden in order to call the EndInit() of the Scales, Ranges
            and Pointers collections.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.OnDispose">
            <summary>
            Overridden in order to call the OnDispose() of the Scales, Ranges
            and Pointers collections.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.ReconnectData(System.Boolean)">
            <summary>
            Overridden in order to call the ReconnectData() method of the
            Pointer collection.
            </summary>
            <param name="exact"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.Notify(Dundas.Gauges.WinControl.MessageType,Dundas.Gauges.WinControl.NamedElement,System.Object)">
            <summary>
            Overridden in order to propagate the message system to the children
            of the gauge.
            </summary>
            <param name="msg"></param>
            <param name="element"></param>
            <param name="param"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.GetRanges">
            <summary>
            Overridden in order to return the linear ranges collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.GetOrientation">
            <summary>
            This function determines the orientation of the linear gauge.
            If it is set to Auto it will return either Horizontal or
            Vertical, based on the width and height. Internally this function
            should always be called in order to determine the orientation.
            </summary>
            <returns>Orientation enumeration. This function will never return Auto.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.PointerValueChanged(Dundas.Gauges.WinControl.PointerBase)">
            <summary>
            Overridden in order to call the PointerValueChanged event for the
            range that the pointer might be in.
            </summary>
            <param name="sender">A reference to the pointer.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.RenderTopImage(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders top image.
            </summary>
            <param name="g">Initialized GaugeGraphics object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.GetBoundRect(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Obtains the bounding rectangle of this gauge.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <returns>A RectangleF representing the bounding rectangle.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.RenderStaticElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            This function renders all static elements, which are elements that
            do not change their position when the value changes. All elements
            except the pointers are static.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.RenderDynamicElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            This function renders all dynamic elements - elements that do
            change their position when the value changes. The only static
            elements in a circular gauge are the pointers and scales (for
            their tick marks in case they are on top).
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.RenderDynamicShadows(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders all the shadows for the dynamic elements
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.RenderStaticShadows(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders all the shadows for the dynamic elements
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.Dundas#Gauges#WinControl#ISelectable#DrawSelection(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Render the selection of the given element.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.LinearGauge.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearGauge.Scales">
            <summary>
            Represents the collection of scales used by the gauge.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearScale"/>
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearGauge.Ranges">
            <summary>
            Represents the collection of ranges used by the gauge.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearRange"/>
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearGauge.Pointers">
            <summary>
            Represents the collection of pointers used by the gauge.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearPointer"/>
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearGauge.Orientation">
            <summary>
            Determines if the linear gauge is horizontal or vertical.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeOrientation"/> value, that determines the gauge's orientation.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearGauge.AbsoluteSize">
            <summary>
            Stores the internal size of the linear gauge in absolute coordinates.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.LinearGauge.Common">
            <summary>
            Overridden in order to set the Common property of the Scales, Ranges
            and Pointers collections.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.KnobStyleAttrib">
            <summary>
            Internal class used for rendering
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.Knob">
            <summary>
            Represents knobs, which can be used for <b>CircularGauge</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularGauge"/>
            <seealso cref="T:Dundas.Gauges.WinControl.CircularScale"/>
            </summary>
            <remarks>
            All measurements of the knob properties are measured as a 
            percentage of the circular scale radius.
            <p>
            Knobs are also assigned to a <see cref="T:Dundas.Gauges.WinControl.CircularScale"/>, 
            which is the scale the knob 'points' to.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.ShouldSerializeStyle">
            <summary>
            Used by VS designer - prevents the obsolete property from
            serialization.
            </summary>
            <returns>
            <b>false</b> to prevent the property from serialization.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.GetKnobStyleAttrib(Dundas.Gauges.WinControl.GaugeGraphics,System.Drawing.PointF,System.Single)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="pointOrigin"></param>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.GetSpecialCapBrush(Dundas.Gauges.WinControl.GaugeGraphics,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.PointF,System.Single,System.Drawing.Color,Dundas.Gauges.WinControl.GradientType,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeHatchStyle)">
            <summary>
            Creates the special cap brush that looks like a shiny knob.
            </summary>
            <param name="g">A reference to GaugeGreaphics.</param>
            <param name="path">The GraphicsPath of the brush.</param>
            <param name="pointOrigin">The point of origin.</param>
            <param name="angle">The angle of rotation.</param>
            <param name="fillColor">The fill color.</param>
            <param name="fillGradientType">The gradient type.</param>
            <param name="fillGradientEndColor">The second gradient color.</param>
            <param name="fillHatchStyle">The fill hatch style.</param>
            <returns>The resulting brush.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.GetFillBrush(Dundas.Gauges.WinControl.GaugeGraphics,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.PointF,System.Single,System.Drawing.Color,Dundas.Gauges.WinControl.GradientType,System.Drawing.Color,Dundas.Gauges.WinControl.GaugeHatchStyle)">
            <summary>
            Returns the fill brush based on the provided arguments. This
            function is used for the main knob brush and for the cap brush,
            </summary>
            <param name="g">A reference to GaugeGreaphics.</param>
            <param name="path">The GraphicsPath of the brush.</param>
            <param name="pointOrigin">The point of origin.</param>
            <param name="angle">The angle of rotation.</param>
            <param name="fillColor">The fill color.</param>
            <param name="fillGradientType">The gradient type.</param>
            <param name="fillGradientEndColor">The second gradient color.</param>
            <param name="fillHatchStyle">The fill hatch style.</param>
            <returns>The resulting brush.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.Render(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            The main render method.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.DrawImage(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean,System.Boolean)">
            <summary>
            Draws the image of the pointer.
            </summary>
            <param name="g"></param>
            <param name="primary">If true, draws the primary image, otherwise the secondary.</param>
            <param name="drawShadow">If true, only draw the shadow of the image.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.GetPointerPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the knob path of the entire knob.
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.GetShadowPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the shadow graphics path of this knob.
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="F:Dundas.Gauges.WinControl.Knob.hotRegions">
            <summary>
            Temporarily hold the hot regions.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.AddHotRegion(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
            <summary>
            Add a path to the temp array of hot regions
            </summary>
            <param name="path">the path to be added</param>
            <param name="primary">indicates if it is a primary or a secondary path</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.SetAllHotRegions(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Sets all hold regions help in the hotRegions and then clears the array.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.ToString">
            <summary>
            Returns the name as a string.
            </summary>
            <returns>
            A string value that represents the name of the knob.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.GetGauge">
            <summary>
            Returns the <b>CircularGauge</b> object to which this knob belongs.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularGauge"/>
            </summary>
            <returns>
            A reference to the <b>CircularGauge</b> owner object.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.GetScale">
            <summary>
            Returns the scale to which this knob is assigned.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularScale"/>
            </summary>
            <returns>
            A reference to the <b>CircularScale</b> object associated with the 
            knob.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.Dundas#Gauges#WinControl#ISelectable#DrawSelection(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Render the selection of the given element.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.Knob.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.Name">
            <summary>
            The name of the knob.
            </summary>
            <value>
            A string value that represents the knob's name.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.ScaleName">
            <summary>
            The name of the scale to which the knob belongs.
            </summary>
            <value>
            A string that represents the name of the scale the knob belongs to. Defaults 
            to 'Default'.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.Image">
            <summary>
            The image to be used as a knob.
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.ImageTransColor"/>
            </summary>
            <value>
            A string that represents either the filename of an image saved to disk, or 
            a named image added to the container's <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.NamedImages"/> 
            collection.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.ImageTransColor">
            <summary>
            Gets or sets the transparent color of the knob image.
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.Image"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            transparent color of the image. The default value is 
            <b>Color.Empty</b>.
            </value>
            <remarks>
            If you have a knob image with a yellow background 
            and you would like to make the background transparent set this property 
            to <b>Color.Yellow</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.ImageHueColor">
            <summary>
            Gets or sets the hue color to be applied to the knob image.
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.Image"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            hue color to be applied to the knob image. The default value is 
            <b>Color.Empty</b>.
            </value>
            <remarks>
            The hue color is applied to the entire image in order to modify its hue.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.ImageOrigin">
            <summary>
            The point on the image that represents the knob center (in pixels).
            </summary>
            <value>
            A <see cref="T:System.Drawing.Point"/> object, that represents the image origin.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.Value">
            <summary>
            The current value of the knob.
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.ValueSource"/>
            </summary>
            <value>
            A double that represents the knob's current value.
            </value>
            <remarks>
            This value determines where along a scale the knob 'points' to.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.ValueSource">
            <summary>
            Specifies the name of an input or calculated value to which this knob is attached.
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.Value"/>
            </summary>
            <value>
            A double that represents the knob's input or calculated value. 
            </value>
            <remarks>
            If <see cref="P:Dundas.Gauges.WinControl.Knob.ValueSource"/> is used as the value source a history will be created, which 
            is used for calculated values and playback.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.SnappingEnabled">
            <summary>
            Determines if snapping of the knob's value to a given interval is enabled.
            <seealso cref="P:Dundas.Gauges.WinControl.PointerBase.SnappingInterval"/>
            </summary>
            <value>
            If <b>true</b> the knob will snap to values determined by the 
            <see cref="P:Dundas.Gauges.WinControl.PointerBase.SnappingInterval"/> property, if <b>false</b> it will not. Defaults 
            to <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.DampeningEnabled">
            <summary>
            Determines if the movement of the knob will be dampened.
            </summary>
            <value>
            If <b>true</b> dampening is enabled, if <b>false</b> it is not. Defaults 
            to <b>false</b>.
            </value>
            <remarks>
            <p>
            Dampening can be used if the value is being updated very quickly in
            order to slow down the movement of the knob.
            </p>
            <p><b>
            ASP.NET - This property is only used when the Dundas Gauge for .NET is rendered
            as a Windows Forms control.
            </b></p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.ToolTip">
            <summary>
            The tool tip to be displayed when the cursor is over the knob.
            </summary>
            <remarks>
            The user can format the tool tip using #INPUTVALUE, #INPUTVALUE1, etc. 
            The value from the <b>GaugeContainer.Values</b> collection will then be 
            displayed. #POINTERVALUE can also be used to show the current value of the knob.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.Interactive">
            <summary>
            Determines whether the user can move the knob with the mouse by 
            clicking and dragging.
            </summary>
            <value>
            If <b>true</b> the knob will be interactive, if <b>false</b> it will not. Defaults 
            to <b>true</b>.
            </value>        
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.Visible">
            <summary>
            Determines if the knob is visible.
            </summary>
            <value>
            If <b>true</b> the knob is visible, if <b>false</b> it is not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.FillColor">
            <summary>
            Gets or sets the fill color of the knob.
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.FillGradientEndColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.FillGradientType"/>
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.FillHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            fill color. The default value is <b>Color.Gainsboro</b>.
            </value>
            <remarks>
            This property represents the fill color of the knob. 
            If a gradient is set via the 
            <see cref="P:Dundas.Gauges.WinControl.Knob.FillGradientType"/> property this color will be used 
            as the start color for the gradient. Furthermore if a hatch style is 
            set via the <see cref="P:Dundas.Gauges.WinControl.Knob.FillHatchStyle"/> property this color 
            will be used as the background color for the hatch.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.FillGradientEndColor">
            <summary>
            Gets or sets the end color of the knob's fill gradient.
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.FillGradientType"/>
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.FillHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            gradient end color. The default value is <b>Color.Gray</b>.
            </value>
            <remarks>
            This property represents the end color of the knob's fill gradient. 
            It is used if the <see cref="P:Dundas.Gauges.WinControl.Knob.FillGradientType"/> property
            has a valid gradient. In addition to that it is also used as the 
            hatch foreground color in case a hatch style is set via 
            the <see cref="P:Dundas.Gauges.WinControl.Knob.FillHatchStyle"/> property.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.FillHatchStyle">
            <summary>
            The primary fill hatch style of the knob.
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.FillGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeHatchStyle"/> object that represents the 
            hatch style. The default value is <b>GaugeHatchStyle.None</b>.
            </value>
            <remarks>
            If hatching is specified then the <see cref="P:Dundas.Gauges.WinControl.Knob.FillColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.Knob.FillGradientEndColor"/> properties determine the colors used.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.FillGradientType">
            <summary>
            The primary fill gradient type of the knob.
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.FillColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.FillGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GradientType"/> object that represents the 
            gradient style. The default value is <b>GradientType.DiagonalLeft</b>.
            </value>
            <remarks>
            If a gradient is specified then the <see cref="P:Dundas.Gauges.WinControl.Knob.FillColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.Knob.FillGradientEndColor"/> properties determine the colors used.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.CapVisible">
            <summary>
            Determines if the cap in the center of the knob is visible.
            </summary>
            <value>
            <b>true</b> if the cap is visible, <b>false</b> if it is not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.CapReflection">
            <summary>
            Determines if the knob cap has a reflection effect.
            </summary>
            <value>
            <b>true</b> if the cap is reflection effect is on, <b>false</b> if it is off. Defaults 
            to <b>true</b>.
            </value>
            <remarks>Setting this property to true will cause the knob cap to appear
            like it is reflecting light internally. This effect is very useful for
            achieving a 3D gel look.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.CapWidth">
            <summary>
            Determines the width of the knob cap, measured as a percentage of the 
            knob width.
            </summary>
            <value>
            A float that represents the knob cap width. Defaults to 
            60 percent of the knob width
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.CapImage">
            <summary>
            The image to be used for the knob cap.
            </summary>
            <value>
            String value that represents the path of the image to be used.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.CapImageTransColor">
            <summary>
            Gets or sets the transparent color of the knob cap image.
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.CapImage"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            transparent color of the knob cap image. The default value is 
            <b>Color.Empty</b>.</value>
            <remarks>
            If you have a cap image with a yellow background 
            and you would like to make the background transparent set this property 
            to <b>Color.Yellow</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.CapImageHueColor">
            <summary>
            Gets or sets the hue color to be applied to the cap image.
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.Image"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            hue color to be applied to the cap image. The default value is 
            <b>Color.Empty</b>.
            </value>
            <remarks>
            The hue color is applied to the entire image in order to modify its hue.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.CapImageOrigin">
            <summary>
            The point on the image that represents the knob origin (in pixels).
            <seealso cref="T:System.Drawing.Point"/>
            </summary>
            <value>
            <b>System.Drawing.Point</b> value, that represents the knob origin.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.Width">
            <summary>
            The width of the knob, measured as a percentage of the associated 
            scale diameter.
            </summary>
            <value>
            A <b>float</b>, which represents the knob width.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.MarkerStyle">
            <summary>
            Determines the marker style if this knob is of type marker.
            <seealso cref="T:System.Type"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.Knob.MarkerStyle"/> enumeration value.
            </value>
            <remarks>
            Setting this property will only have an effect if the knob type 
            is marker.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.Style">
            <summary>
            NOTE: This property is obsolete in Dundas Gauge 2.0. KnobStyle is supposed to be used instead. <see cref="!:IndicatorStyle"/>
            Determines the style of the knob.
            <seealso cref="T:System.Type"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.Knob.KnobStyle"/> enumeration value.
            </value>
            <remarks>
            Setting this property will only have an effect if the knob type 
            is knob.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.KnobStyle">
            <summary>
            Determines the style of the knob.
            <seealso cref="T:System.Type"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.Knob.KnobStyle"/> enumeration value.
            </value>
            <remarks>
            Setting this property will only have an effect if the knob type 
            is knob.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.CapFillColor">
            <summary>
            Gets or sets the fill color of the knob cap.
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.CapFillGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            knob cap fill color. The default value is <b>Color.Gainsboro</b>.
            </value>
            <remarks>
            This property represents the cap fill color of the knob. 
            <p>
            If a gradient is selected through the 
            <see cref="P:Dundas.Gauges.WinControl.Knob.CapFillGradientType"/> property this color will be used 
            as the start color for the gradient.
            </p>
            <p>
            If a hatch style is 
            selected through the <see cref="P:Dundas.Gauges.WinControl.Knob.CapFillHatchStyle"/> property this color 
            will be used as the background color for the hatch.
            </p> 
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.CapFillGradientType">
            <summary>
            The fill gradient type of the knob cap.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GradientType"/> enumeration value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.CapFillGradientEndColor">
            <summary>
            Gets or sets the end color of the knob's cap fill gradient.
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.CapFillGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            gradient end color. The default value is <b>Color.Gray</b>.
            </value>
            <remarks>
            This property represents the end color of the knob's 
            cap fill gradient. It is used if the <see cref="P:Dundas.Gauges.WinControl.Knob.CapFillGradientType"/> 
            property has a valid gradient.
            <p>In addition to that it is also used as the 
            hatch foreground color in case a hatch style is selected via 
            the <see cref="P:Dundas.Gauges.WinControl.Knob.CapFillHatchStyle"/> property.
            </p> 
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.CapFillHatchStyle">
            <summary>
            The fill hatch style of the knob cap.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeHatchStyle"/> enumeration value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.MarkerLength">
            <summary>
            Determines the length of the knob marker.
            <seealso cref="T:System.Type"/>
            </summary>
            <value>
            A <b>float</b> that represents the length of the knob marker.
            </value>
            <remarks>
            This property is measured in percents of the knob width.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.MarkerWidth">
            <summary>
            Determines the width of the knob marker.
            Measured in percents of the knob width.
            <seealso cref="T:System.Type"/>
            </summary>
            <value>
            A <b>float</b> that represents the width of the knob marker.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.MarkerPosition">
            <summary>
            Determines how far from the knob center the marker would be positioned. 
            <seealso cref="T:System.Type"/>
            </summary>
            <value>
            A <b>float</b> that represents the position of the knob marker.
            </value>
            <remarks>
            When set to 100, this property will place the marker right on the edge.  
            When set to 0, this property will place the marker in the center of the knob.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.MarkerFillColor">
            <summary>
            Gets or sets the fill color of the knob marker.
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.MarkerFillGradientEndColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            knob marker fill color. The default value is <b>Color.DarkGray</b>.
            </value>
            <remarks>
            This property represents the marker fill color of the knob. 
            <p>
            If a gradient is selected through the 
            <see cref="P:Dundas.Gauges.WinControl.Knob.MarkerFillGradientType"/> property this color will be used 
            as the start color for the gradient.
            </p>
            <p>
            If a hatch style is 
            selected through the <see cref="P:Dundas.Gauges.WinControl.Knob.MarkerFillHatchStyle"/> property this color 
            will be used as the background color for the hatch.
            </p> 
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.MarkerFillGradientType">
            <summary>
            The fill gradient type of the knob marker.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GradientType"/> enumeration value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.MarkerFillGradientEndColor">
            <summary>
            Gets or sets the end color of the knob's marker fill gradient.
            <seealso cref="P:Dundas.Gauges.WinControl.Knob.CapFillGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            gradient end color. The default value is <b>Color.DimGray</b>.
            </value>
            <remarks>
            This property represents the end color of the knob's 
            marker fill gradient. It is used if the <see cref="P:Dundas.Gauges.WinControl.Knob.MarkerFillGradientType"/> 
            property has a valid gradient.
            <p>In addition to that it is also used as the 
            hatch foreground color in case a hatch style is selected via 
            the <see cref="P:Dundas.Gauges.WinControl.Knob.MarkerFillHatchStyle"/> property.
            </p> 
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.MarkerFillHatchStyle">
            <summary>
            The fill hatch style of the knob marker.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeHatchStyle"/> enumeration value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.CapShadowOffset">
            <summary>
            Determines how far to the right and down the cap shadow will appear (in pixels).
            </summary>
            <value>
            A float that represents the cap shadow offset. Defaults to 2 pixels.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.RotateGradient">
            <summary>
            Determines if the gradient of the knob should rotate or remain static.
            </summary>
            <value>
            A <b>bool</b> that indicated if the knob gradient should rotate. The
            default value is false.
            </value>
            <remarks>Set this property to <b>true</b> if you want the gradient
            of the knob to rotate along with the knob itself. This property will
            not have an effect if the <see cref="T:Dundas.Gauges.WinControl.GradientType"/> property is
            set to None.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.CapRotateGradient">
            <summary>
            Determines if the gradient of the cap should rotate or remain static.
            </summary>
            <value>
            A <b>bool</b> that indicated if the cap gradient should rotate. The
            default value is false.
            </value>
            <remarks>Set this property to <b>true</b> if you want the gradient
            of the cap to rotate along with the knob itself. This property will
            not have an effect if the CapGradientType property is
            set to None.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.MarkerRotateGradient">
            <summary>
            Determines if the gradient of the marker should rotate or remain static.
            </summary>
            <value>
            A <b>bool</b> that indicated if the marker gradient should rotate. The
            default value is true.
            </value>
            <remarks>Set this property to <b>true</b> if you want the gradient
            of the marker to rotate along with the knob itself. This property will
            not have an effect if the <see cref="P:Dundas.Gauges.WinControl.Knob.MarkerFillGradientType"/> property is
            set to <see cref="F:Dundas.Gauges.WinControl.GradientType.None"/>.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.Cursor">
            <summary>
            The cursor to be displayed when the mouse is over this knob.
            </summary>
            <value>
            A reference to <see cref="T:System.Windows.Forms.Cursor"/> which represents
            the cursor. The default value is <b>System.Windows.Forms.Cursors.Default</b>.
            </value>
            <remarks> Use this property to set the cursor of this knob. The cursor
            will change only when the mouse is over the knob.
            <p><b>Note: </b>When this property is set to <see cref="P:System.Windows.Forms.Cursors.Default"/>
            the cursor specified in the <see cref="P:System.Windows.Forms.Control.Cursor"/> property will be used.</p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.Selected">
            <summary>
            Determines if the knob visually appears selected.
            </summary>
            <value>
            If <b>true</b> the knob appears selected. Default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.DistanceFromScale">
            <summary>
            Not used in this class.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.Knob.BarStart">
            <summary>
            Not used in this class.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SerializationVisibility">
            <summary>
            Enumeration which describes how to persist property during the serialization
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializationVisibility.Hidden">
            <summary>
            Do not serialize
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializationVisibility.Attribute">
            <summary>
            Serialize as XML attribute
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializationVisibility.Element">
            <summary>
            Serialize as XML element
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SerializationFormat">
            <summary>
            Format of the gauge serializer
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializationFormat.Xml">
            <summary>
            XML serializer format
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializationFormat.Binary">
            <summary>
            Binary serializer format
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SerializationContent">
            <summary>
            Gauge serializable content definition flags
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializationContent.Appearance">
            <summary>
            Serialize gauge visual appearance
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializationContent.All">
            <summary>
            All content is serialized. 
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeSerializer">
            <summary>
            Gauge serializer class, used for serialization of gauge templates.
            </summary>
            <remarks>
            This class is exposed as the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Serializer"/> property 
            of the root <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> object.
            <p>
            There are <b>LoadTemplate</b> and <b>SaveTemplate</b> dialogs that can be accessed 
            at design-time via the Properties Window.
            </p>
            <p>
            The format of serialized data is set by the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Format"/> property, and 
            can be either XML or Binary. The advantage of XML is that it is human readable, while 
            the advantage of binary is that the serialized data takes less storage space 
            compared to the XML format.
            </p>
            <p>
            Serialization of the Gauge is performed at run-time using the <see cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.String)"/> and 
            <see cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.String)"/> methods. <b>By default all gauge properties are serialized</b>. 
            However, this can be changed using the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/>, 
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> and <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> properties.
            </p>
            <p>
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/> groups the gauge properties to be serialized into categories (e.g. 
            data, appearance, etc.)It is important to know that the <b>Content</b> property is 
            implemented internally by the control as the <b>SerializableContent</b> property.
            </p>
            <p>The <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> property is a comma-separated listing 
            of all gauge properties to be serialized. The syntax of this property is 
            "Class.Property[,Class.Property]", and wildcards may be used (represented by an 
            asterisk). For example, to serialize all gauge BackColor properties set this property to 
            "*.BackColor". Once this property is set to an explicit value then it is up to the 
            developer to specify all properties to be saved .
            </p>
            <p>
            The <b>Content</b> and <b>SerializableContent</b> properties can also be used in 
            conjunction. However, make sure that <b>SerializableContent</b> is concatenated with 
            itself when being set after setting the <b>Content</b> property (<b>Content</b> is 
            implemented internally using <b>SerializableContent</b> with wildcards), otherwise the 
            gauge properties specified by the <b>Content</b> property will be overridden.
            </p>
            <p>
            Non-serializable properties are set using the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> 
            property. Wildcards can be used in the string expression, in the same manner as the 
            <b>SerializableContent</b> property. For example, to exclude all gauge BackColor 
            properties from serialization set this property to "*.BackColor".
            </p>
            <p>
            Sometimes a property can be set to be both serialized and not serialized (common 
            when wildcards are used). Note that <b>NonSerializableContent</b> has a lower priority 
            when compared to the <b>SerializableContent</b> string expression. However, 
            less weight is given to string expressions that use wildcards. For example, if 
            <b>SerializableContent</b> is set to "*.BackColor" and <b>NonSerializableContent</b> 
            is set to "CircularGauge.BackColor" then all BackColor properties except for 
            <b>CircularGauge</b> objects will be serialized.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSerializer.#ctor">
            <summary>
            Public constructor is unavailable
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSerializer.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Constructor.
            </summary>
            <param name="container">Service container reference.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSerializer.GetService(System.Type)">
            <summary>
            Returns the Gauge Serializer service object.
            </summary>
            <param name="serviceType">Requested service type.</param>
            <returns>Gauge Serializer service object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSerializer.Reset">
            <summary>
            Resets properties of the gauge to default values.
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.String)"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.String)"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/>
            </summary>
            <remarks>
            By setting the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/>, <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> and/or 
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> properties a specific set of 
            properties can be reset.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.String)">
            <summary>
            Saves properties of the gauge to a file on disk.
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Reset"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.String)"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/>
            </summary>
            <param name="fileName">The file name used to write the data.</param>
            <remarks>
            By setting the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/>, <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> and/or 
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> properties a specific set of 
            properties can be saved.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.IO.Stream)">
            <summary>
            Saves properties of the gauge into a stream.
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Reset"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.String)"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/>
            </summary>
            <param name="stream">The stream where to save the data.</param>
            <remarks>
            By setting the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/>, <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> and/or 
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> properties a specific set of 
            properties can be saved.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.Xml.XmlWriter)">
            <summary>
            Saves properties of the gauge into an XML writer.
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Reset"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.String)"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/>
            </summary>
            <param name="writer">XML writer to save the data.</param>
            <remarks>
            By setting the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/>, <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> and/or 
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> properties a specific set of 
            properties can be saved.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.IO.TextWriter)">
            <summary>
            Saves properties of the gauge into a text writer.
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Reset"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.String)"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/>
            </summary>
            <param name="writer">Text writer to save the data.</param>
            <remarks>
            By setting the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/>, <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> and/or 
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> properties a specific set of 
            properties can be loaded.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.String)">
            <summary>
            Loads properties of the gauge from the file.
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Reset"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.String)"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/>
            </summary>
            <param name="fileName">The file name used to load the data from.</param>
            <remarks>
            By setting the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/>, <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> and/or 
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> properties a specific set of 
            properties can be loaded.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.IO.Stream)">
            <summary>
            Loads properties of the gauge from the stream.
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Reset"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.String)"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/>
            </summary>
            <param name="stream">The stream where to load the data from.</param>
            <remarks>
            By setting the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/>, <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> and/or 
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> properties a specific set of 
            properties can be loaded.
            </remarks> 
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.Xml.XmlReader)">
            <summary>
            Loads properties of the gauge from an XML reader.
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Reset"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.String)"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/>
            </summary>
            <param name="reader">The XML reader to load the data from.</param>
            <remarks>
            By setting the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/>, <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> and/or 
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> properties a specific set of 
            properties can be loaded.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.IO.TextReader)">
            <summary>
            Loads properties of the gauge from a text reader.
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Reset"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.String)"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/>
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/>
            </summary>
            <param name="reader">The text reader to load the data from.</param>
            <remarks>
            By setting the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/>, <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> and/or 
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> properties a specific set of 
            properties can be loaded.
            </remarks> 
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSerializer.SetSerializableConentFromFlags">
            <summary>
            Sets SerializableContent and NonSerializableContent properties
            depending on the flags in the Content property.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSerializer.GetFlagContentString(Dundas.Gauges.WinControl.SerializationContent,System.Boolean)">
            <summary>
            Return a serializable or non serializable class/properties names
            for the specific flag.
            </summary>
            <param name="flag">Serializable content flag.</param>
            <param name="serializable">True - get serializable string, False - non serializable.</param>
            <returns>Serializable or non serializable string with class/properties names.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeSerializer.GetGaugeObject">
            <summary>
            Returns the gauge container object for serialization.
            </summary>
            <returns>Gauge object.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeSerializer.Content">
            <summary>
            The serializable content, assigned by category.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.SerializationContent"/> value, which represents the 
            serializable content.
            </value>
            <remarks>
            <p>
            Serialization of the Gauge is performed at run-time using the <see cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.String)"/> and 
            <see cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.String)"/> methods. <b>By default all gauge properties are serialized</b>. 
            However, this can be changed using the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/>, 
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> and <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> properties.
            </p>
            <p>
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/> groups the gauge properties to be serialized into categories (e.g. 
            data, appearance, etc.)It is important to know that the <b>Content</b> property is 
            implemented internally by the control as the <b>SerializableContent</b> property.
            </p>
            <p>The <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> property is a comma-separated listing 
            of all gauge properties to be serialized. The syntax of this property is 
            "Class.Property[,Class.Property]", and wildcards may be used (represented by an 
            asterisk). For example, to serialize all gauge BackColor properties set this property to 
            "*.BackColor". Once this property is set to an explicit value then it is up to the 
            developer to specify all properties to be saved .
            </p>
            <p>
            The <b>Content</b> and <b>SerializableContent</b> properties can also be used in 
            conjunction. However, make sure that <b>SerializableContent</b> is concatenated with 
            itself when being set after setting the <b>Content</b> property (<b>Content</b> is 
            implemented internally using <b>SerializableContent</b> with wildcards), otherwise the 
            gauge properties specified by the <b>Content</b> property will be overridden.
            </p>
            <p>
            Non-serializable properties are set using the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> 
            property. Wildcards can be used in the string expression, in the same manner as the 
            <b>SerializableContent</b> property. For example, to exclude all gauge BackColor 
            properties from serialization set this property to "*.BackColor".
            </p>
            <p>
            Sometimes a property can be set to be both serialized and not serialized (common 
            when wildcards are used). Note that <b>NonSerializableContent</b> has a lower priority 
            when compared to the <b>SerializableContent</b> string expression. However, 
            less weight is given to string expressions that use wildcards. For example, if 
            <b>SerializableContent</b> is set to "*.BackColor" and <b>NonSerializableContent</b> 
            is set to "CircularGauge.BackColor" then all BackColor properties except for 
            <b>CircularGauge</b> objects will be serialized.
            </p> 
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeSerializer.Format">
            <summary>
            Format used to serialize the gauge data.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.SerializationFormat"/> value, which represents the format.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeSerializer.ResetWhenLoading">
            <summary>
            Determines if object properties are reset to their default 
            values prior to loading.
            </summary>
            <value>
            If <b>true</b> properties are reset, if <b>false</b> they are not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeSerializer.IgnoreUnknownXmlAttributes">
            <summary>
            Determines if unknown XML attributes and elements will be 
            ignored (no exception will be thrown).
            </summary>
            <value>
            If <b>true</b> unknown attributes will be ignored, if <b>false</b> an 
            exception will be thrown if they are encountered during serialization. Defaults 
            to <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeSerializer.TemplateMode">
            <summary>
            Determines if the serializer works in template mode, which determines if 
            items are added to or removed from the container's various collections when 
            a template is loaded.
            </summary>
            <value>
            If <b>true</b> the serializer will be in template creation mode, if <b>false</b> 
            it will not. Defaults to <b>false</b>.
            </value>
            <remarks>
            If the serializer is in template mode then the various existing gauge objects 
            are not actually loaded into the gauge container when the <see cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.String)"/> 
            method is called. Rather, the appearance properties, position properties, etc. 
            only are used.
            <p>
            To further clarify this, when <b>TemplateMode</b> is <b>true</b> and a template 
            (that has been saved using the <see cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.String)"/> method) is loaded into the 
            container the container's collections (e.g. <b>CircularGauges</b>, 
            <b>NumericIndicators</b>, etc.) are not modified. In other words, they do not have 
            objects added or removed as a result of what the template's contents are.
            </p>
            <p>
            If <b>TemplateMode</b> is <b>false</b> then the number of container child objects 
            (such as gauges and indicators), is determined by the contents of the persisted 
            template when it is loaded.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent">
            <summary>
            Comma-separated list of serializable (Save/Load/Reset) properties.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.String)"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.String)"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Reset"/>
            </summary>
            <value>
            A string that is a comma-separated listing of serializable properties.
            </value>
            <remarks>
            /// This class is exposed as the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Serializer"/> property 
            of the root <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> object.
            <p>
            There are <b>LoadTemplate</b> and <b>SaveTemplate</b> dialogs that can be accessed 
            at design-time via the Properties Window.
            </p>
            <p>
            The format of serialized data is set by the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Format"/> property, and 
            can be either XML or Binary. The advantage of XML is that it is human readable, while 
            the advantage of binary is that the serialized data takes less storage space 
            compared to the XML format.
            </p>
            <p>
            Serialization of the Gauge is performed at run-time using the <see cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.String)"/> and 
            <see cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.String)"/> methods. <b>By default all gauge properties are serialized</b>. 
            However, this can be changed using the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/>, 
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> and <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> properties.
            </p>
            <p>
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/> groups the gauge properties to be serialized into categories (e.g. 
            data, appearance, etc.)It is important to know that the <b>Content</b> property is 
            implemented internally by the control as the <b>SerializableContent</b> property.
            </p>
            <p>The <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> property is a comma-separated listing 
            of all gauge properties to be serialized. The syntax of this property is 
            "Class.Property[,Class.Property]", and wildcards may be used (represented by an 
            asterisk). For example, to serialize all gauge BackColor properties set this property to 
            "*.BackColor". Once this property is set to an explicit value then it is up to the 
            developer to specify all properties to be saved .
            </p>
            <p>
            The <b>Content</b> and <b>SerializableContent</b> properties can also be used in 
            conjunction. However, make sure that <b>SerializableContent</b> is concatenated with 
            itself when being set after setting the <b>Content</b> property (<b>Content</b> is 
            implemented internally using <b>SerializableContent</b> with wildcards), otherwise the 
            gauge properties specified by the <b>Content</b> property will be overridden.
            </p>
            <p>
            Non-serializable properties are set using the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> 
            property. Wildcards can be used in the string expression, in the same manner as the 
            <b>SerializableContent</b> property. For example, to exclude all gauge BackColor 
            properties from serialization set this property to "*.BackColor".
            </p>
            <p>
            Sometimes a property can be set to be both serialized and not serialized (common 
            when wildcards are used). Note that <b>NonSerializableContent</b> has a lower priority 
            when compared to the <b>SerializableContent</b> string expression. However, 
            less weight is given to string expressions that use wildcards. For example, if 
            <b>SerializableContent</b> is set to "*.BackColor" and <b>NonSerializableContent</b> 
            is set to "CircularGauge.BackColor" then all BackColor properties except for 
            <b>CircularGauge</b> objects will be serialized.
            </p>
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent">
            <summary>
            Comma-separated list of non-serializable (Save/Load/Reset) properties.
            <seealso cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.String)"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.String)"/>
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Reset"/>
            </summary>
            <value>
            A string that is a comma-separated listing of non-serializable properties.
            </value>
            <remarks>
            /// This class is exposed as the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.Serializer"/> property 
            of the root <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> object.
            <p>
            There are <b>LoadTemplate</b> and <b>SaveTemplate</b> dialogs that can be accessed 
            at design-time via the Properties Window.
            </p>
            <p>
            The format of serialized data is set by the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Format"/> property, and 
            can be either XML or Binary. The advantage of XML is that it is human readable, while 
            the advantage of binary is that the serialized data takes less storage space 
            compared to the XML format.
            </p>
            <p>
            Serialization of the Gauge is performed at run-time using the <see cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Save(System.String)"/> and 
            <see cref="M:Dundas.Gauges.WinControl.GaugeSerializer.Load(System.String)"/> methods. <b>By default all gauge properties are serialized</b>. 
            However, this can be changed using the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/>, 
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> and <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> properties.
            </p>
            <p>
            <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.Content"/> groups the gauge properties to be serialized into categories (e.g. 
            data, appearance, etc.)It is important to know that the <b>Content</b> property is 
            implemented internally by the control as the <b>SerializableContent</b> property.
            </p>
            <p>The <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.SerializableContent"/> property is a comma-separated listing 
            of all gauge properties to be serialized. The syntax of this property is 
            "Class.Property[,Class.Property]", and wildcards may be used (represented by an 
            asterisk). For example, to serialize all gauge BackColor properties set this property to 
            "*.BackColor". Once this property is set to an explicit value then it is up to the 
            developer to specify all properties to be saved .
            </p>
            <p>
            The <b>Content</b> and <b>SerializableContent</b> properties can also be used in 
            conjunction. However, make sure that <b>SerializableContent</b> is concatenated with 
            itself when being set after setting the <b>Content</b> property (<b>Content</b> is 
            implemented internally using <b>SerializableContent</b> with wildcards), otherwise the 
            gauge properties specified by the <b>Content</b> property will be overridden.
            </p>
            <p>
            Non-serializable properties are set using the <see cref="P:Dundas.Gauges.WinControl.GaugeSerializer.NonSerializableContent"/> 
            property. Wildcards can be used in the string expression, in the same manner as the 
            <b>SerializableContent</b> property. For example, to exclude all gauge BackColor 
            properties from serialization set this property to "*.BackColor".
            </p>
            <p>
            Sometimes a property can be set to be both serialized and not serialized (common 
            when wildcards are used). Note that <b>NonSerializableContent</b> has a lower priority 
            when compared to the <b>SerializableContent</b> string expression. However, 
            less weight is given to string expressions that use wildcards. For example, if 
            <b>SerializableContent</b> is set to "*.BackColor" and <b>NonSerializableContent</b> 
            is set to "CircularGauge.BackColor" then all BackColor properties except for 
            <b>CircularGauge</b> objects will be serialized.
            </p>
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SerializationVisibilityAttribute">
            <summary>
            Attribute which describes how to persist property during the serialization
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializationVisibilityAttribute.#ctor(Dundas.Gauges.WinControl.SerializationVisibility)">
            <summary>
            Public constructor
            </summary>
            <param name="visibility">Serialization visibility.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SerializationVisibilityAttribute.Visibility">
            <summary>
            Serialization visibility property
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SerializerBase">
            <summary>
            Base class of the serializers. Common properties and methods for all serializers.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializerBase.ignoreUnknown">
            <summary>
            Indicates that unknown attributes and elements are ignored
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializerBase.templateMode">
            <summary>
            Indicates that serializer works in template creation mode
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializerBase.resetWhenLoading">
            <summary>
            Indicates that object properties are reset before loading
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializerBase.serializableContent">
            <summary>
            Comma separated list of serializable (Save/Load/Reset) properties. "ClassName.PropertyName"
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializerBase.nonSerializableContent">
            <summary>
            Comma separated list of NON serializable (Save/Load/Reset) properties. "ClassName.PropertyName"
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializerBase.fontConverter">
            <summary>
            Font converters used while serializing/deserializing 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializerBase.cursorConverter">
            <summary>
            Cursor converter used for serialization.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializerBase.colorConverter">
            <summary>
            Color converters used while serializing/deserializing 
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.SerializerBase.sizeConverter">
            <summary>
            Size converters used while serializing/deserializing 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.ResetObjectProperties(System.Object)">
            <summary>
            Reset properties of the object to default values.
            </summary>
            <param name="objectToReset">Object to be reset.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.ResetObjectProperties(System.Object,System.Object,System.String)">
            <summary>
            Reset properties of the object to default values.
            Method is called recursively to reset child objects properties.
            </summary>
            <param name="objectToReset">Object to be reset.</param>
            <param name="parent">Parent of the reset object.</param>
            <param name="elementName">Object element name.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.Serialize(System.Object,System.Object)">
            <summary>
            Serialize specified object into the destination object.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="destination">Destination of the serialization.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.Deserialize(System.Object,System.Object)">
            <summary>
            Deserialize specified object from the source object.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="source">Source of the deserialization.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.IsGaugeBaseProperty(System.Object,System.Object,System.Reflection.PropertyInfo)">
            <summary>
            Checks if property belongs to the base class of the gauge "Control".
            </summary>
            <param name="objectToSerialize">Serializable object.</param>
            <param name="parent">Object parent.</param>
            <param name="pi">Serializable property information.</param>
            <returns>True if property belongs to the base class.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.ImageToString(System.Drawing.Image)">
            <summary>
            Converts Image object into the BASE64 encoded string
            </summary>
            <param name="image">Image to convert.</param>
            <returns>BASE64 encoded image data.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.ImageFromString(System.String)">
            <summary>
            Converts BASE64 encoded string to image.
            </summary>
            <param name="data">BASE64 encoded data.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.GetObjectName(System.Object)">
            <summary>
            Get the name of the object class
            </summary>
            <param name="obj">Object to get the name of.</param>
            <returns>Name of the object class (without namespace).</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.GetListNewItem(System.Collections.IList,System.String,System.String@,System.Boolean@)">
            <summary>
            Create new empty item for the list.
            Type of the objects is determined by the return type of the indexer.
            </summary>
            <param name="list">List used to detect type of the item objects.</param>
            <param name="itemTypeName">Name of collection type.</param>
            <param name="itemName">Optional item name to return.</param>
            <param name="reusedObject">Indicates that object with specified name was already in the collection and is being reused.</param>
            <returns>New list item object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.ShouldSerializeAsAttribute(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            Returns true if the object property should be serialized as 
            parent element attribute. Otherwise as a child element.
            </summary>
            <param name="pi">Property information.</param>
            <param name="parent">Object that the property belongs to.</param>
            <returns>True if property should be serialized as attribute.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.IsSerializableContent(System.String,System.Object)">
            <summary>
            Returns true if the object property is serializable.
            </summary>
            <param name="propertyName">Property name.</param>
            <param name="parent">Object that the property belongs to.</param>
            <returns>True if property is serializable.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.IsPropertyInList(System.Collections.ArrayList,System.String,System.String,System.Int32@,System.Int32@)">
            <summary>
            Checks if property belongs is defined in the mask list.
            </summary>
            <param name="contentList">Array list of class/property items.</param>
            <param name="className">Class name.</param>
            <param name="propertyName">Property name.</param>
            <param name="classFitType">Return class mask fit type.</param>
            <param name="propertyFitType">Return property mask fit type.</param>
            <returns>True if property was found in the list.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.NameMatchMask(Dundas.Gauges.WinControl.ItemInfo,System.String,System.Int32@)">
            <summary>
            Compares class/property name with the specified mask.
            </summary>
            <param name="itemInfo">Class/Property item information.</param>
            <param name="objectName">Class/Property name.</param>
            <param name="type">Type of matching. 0-No Match; 1-'*' any wild card; 2-'Back*' contain wild card; 3-exact match</param>
            <returns>True if name match the mask.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.GetSerializableContentList">
            <summary>
            Return serializable content list.
            </summary>
            <returns>Serializable content list.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.GetNonSerializableContentList">
            <summary>
            Return non serializable content list.
            </summary>
            <returns>Non serializable content list.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.FillContentList(System.Collections.ArrayList,System.String)">
            <summary>
            Fill content list from the string.
            </summary>
            <param name="list">Array list class.</param>
            <param name="content">Content string.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.CheckWildCars(Dundas.Gauges.WinControl.ItemInfo)">
            <summary>
            Checks wildcards in the name of the item.
            Possible values:
            	"*"
            	"*Name"
            	"Name*"
            </summary>
            <param name="info">Item information class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SerializerBase.ReadConvertValue(System.Object,System.String,System.IO.BinaryReader)">
            <summary>
            Converts string or read value from binary reader.
            </summary>
            <param name="obj">Object to set the value to.</param>
            <param name="propertyValue">String value.</param>
            <param name="binaryReader">Binary reader to get the data from.</param>
            <returns>Returns property value.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SerializerBase.IgnoreUnknownAttributes">
            <summary>
            Indicates that unknown attributes and elements will be 
            ignored without throwing an exception.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SerializerBase.TemplateMode">
            <summary>
            Indicates that serializer works in template creation mode
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SerializerBase.ResetWhenLoading">
            <summary>
            Indicates that object properties are reset to default
            values before loading.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SerializerBase.SerializableContent">
            <summary>
            Comma separated list of serializable (Save/Load/Reset) properties. 
            "ClassName.PropertyName,[ClassName.PropertyName]".
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.SerializerBase.NonSerializableContent">
            <summary>
            Comma separated list of serializable (Save/Load/Reset) properties. 
            "ClassName.PropertyName,[ClassName.PropertyName]".
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ItemInfo">
            <summary>
            Stores information about content item (class or property)
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.XmlFormatSerializer">
            <summary>
            Utility class which serialize object using XML format
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.Serialize(System.Object,System.IO.Stream)">
            <summary>
            Serialize specified object into the stream.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="stream">The stream used to write the XML document.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.Serialize(System.Object,System.Xml.XmlWriter)">
            <summary>
            Serialize specified object into the XML writer.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="xmlWriter">The XmlWriter used to write the XML document.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.Serialize(System.Object,System.IO.TextWriter)">
            <summary>
            Serialize specified object into the text writer.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="textWriter">The TextWriter used to write the XML document.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.Serialize(System.Object,System.String)">
            <summary>
            Serialize specified object into the file.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="fileName">The file name used to write the XML document.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.Serialize(System.Object,System.Object)">
            <summary>
            Serialize specified object into different types of writers using XML format.
            Here is what is serialized in the object:
             - all public properties with Set and Get methods
             - all public properties with Get method which derived from ICollection
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="writer">Defines the serialization destination. Can be Stream, TextWriter, XmlWriter or String (file name).</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.SerializeObject(System.Object,System.Object,System.String,System.Xml.XmlNode,System.Xml.XmlDocument)">
            <summary>
            Serialize specified object into the XML format.
            Method is called recursively to serialize child objects.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="parent">Parent of the serialized object.</param>
            <param name="elementName">Object element name.</param>
            <param name="xmlParentNode">The XmlNode of the parent object to serialize the data in.</param>
            <param name="xmlDocument">The XmlDocument the parent node belongs to.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.SerializeCollection(System.Object,System.String,System.Xml.XmlNode,System.Xml.XmlDocument)">
            <summary>
            Serialize specified object into the XML text writer.
            Method is called recursively to serialize child objects.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="elementName">Object element name.</param>
            <param name="xmlParentNode">The XmlNode of the parent object to serialize the data in.</param>
            <param name="xmlDocument">The XmlDocument the parent node belongs to.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.SerializeProperty(System.Object,System.Object,System.String,System.Xml.XmlNode,System.Xml.XmlDocument)">
            <summary>
            Serialize specified object into the XML text writer.
            Method is called recursively to serialize child objects.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="parent">Parent of the serialized object.</param>
            <param name="elementName">Object element name.</param>
            <param name="xmlParentNode">The XmlNode of the parent object to serialize the data in.</param>
            <param name="xmlDocument">The XmlDocument the parent node belongs to.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.GetXmlValue(System.Object,System.Object,System.String)">
            <summary>
            Converts object value into the string.
            </summary>
            <param name="obj">Object to convert.</param>
            <param name="parent">Object parent.</param>
            <param name="elementName">Object name.</param>
            <returns>Object value as string.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.RemoveEmptyChildNodes(System.Xml.XmlNode)">
            <summary>
            Removes all empty nodes from the XML document.
            Method is called recursively to remove empty child nodes first.
            </summary>
            <param name="xmlNode">The node where to start the removing.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.Deserialize(System.Object,System.IO.Stream)">
            <summary>
            Deserialize specified object from the stream.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="stream">The stream used to read the XML document from.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.Deserialize(System.Object,System.Xml.XmlReader)">
            <summary>
            Deserialize specified object from the XML reader.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="xmlReader">The XmlReader used to read the XML document from.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.Deserialize(System.Object,System.IO.TextReader)">
            <summary>
            Deserialize specified object from the text reader.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="textReader">The TextReader used to write the XML document from.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.Deserialize(System.Object,System.String)">
            <summary>
            Deserialize specified object from the file.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="fileName">The file name used to read the XML document from.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.Deserialize(System.Object,System.Object)">
            <summary>
            Deserialize object from different types of readers using XML format.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="reader">Defines the deserialization data source. Can be Stream, TextReader, XmlReader or String (file name).</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.DeserializeObject(System.Object,System.Object,System.String,System.Xml.XmlNode,System.Xml.XmlDocument)">
            <summary>
            Deserialize object from the XML format.
            Method is called recursively to deserialize child objects.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="parent">Parent of the deserialized object.</param>
            <param name="elementName">Object element name.</param>
            <param name="xmlParentNode">The XmlNode of the parent object to deserialize the data from.</param>
            <param name="xmlDocument">The XmlDocument the parent node belongs to.</param>
            <returns>Number of properties set.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.XmlFormatSerializer.SetXmlValue(System.Object,System.String,System.String)">
            <summary>
            Sets a property of an object using name and value as string.
            </summary>
            <param name="obj">Object to set.</param>
            <param name="attrName">Attribute (property) name.</param>
            <param name="attrValue">Object value..</param>
            <returns>Object value as string.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.BinaryFormatSerializer">
            <summary>
            Utility class which serialize object using binary format
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.Serialize(System.Object,System.Object)">
            <summary>
            Serialize specified object into the destination using binary format.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="destination">Serialization destination.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.Serialize(System.Object,System.String)">
            <summary>
            Serialize specified object into the file using binary format.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="fileName">File name to serialize the data in.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.Serialize(System.Object,System.IO.Stream)">
            <summary>
            Serialize specified object into the stream using binary format.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="stream">Defines the serialization destination.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.Serialize(System.Object,System.IO.BinaryWriter)">
            <summary>
            Serialize specified object into different types of writers using binary format.
            Here is what is serialized in the object:
             - all public properties with Set and Get methods
             - all public properties with Get method which derived from ICollection
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="writer">Defines the serialization destination.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.SerializeObject(System.Object,System.Object,System.String,System.IO.BinaryWriter)">
            <summary>
            Serialize specified object into the binary format.
            Method is called recursively to serialize child objects.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="parent">Parent of the serialized object.</param>
            <param name="elementName">Object element name.</param>
            <param name="writer">Binary writer object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.SerializeCollection(System.Object,System.String,System.IO.BinaryWriter)">
            <summary>
            Serialize specified object into the binary writer.
            Method is called recursively to serialize child objects.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="elementName">Object element name.</param>
            <param name="writer">Binary writer.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.SerializeProperty(System.Object,System.Object,System.String,System.IO.BinaryWriter)">
            <summary>
            Serialize specified object into the binary writer.
            Method is called recursively to serialize child objects.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="parent">Parent of the serialized object.</param>
            <param name="elementName">Object element name.</param>
            <param name="writer">Binary writer.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.WritePropertyValue(System.Object,System.Object,System.String,System.IO.BinaryWriter)">
            <summary>
            Converts object value into the string.
            </summary>
            <param name="obj">Object to convert.</param>
            <param name="parent">Object parent.</param>
            <param name="elementName">Object name.</param>
            <param name="writer">Binary writer.</param>
            <returns>Object value as string.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.CheckPropertiesID(System.Collections.ArrayList)">
            <summary>
            Checks if all properties will have a unique ID.
            Property ID is a hash of it's name.
            !!!USED IN DEBUG BUILD ONLY!!!
            </summary>
            <param name="propNames">Array of properties names.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.Deserialize(System.Object,System.Object)">
            <summary>
            Deserialize specified object from the source using binary format.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="source">Deserialization source.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.Deserialize(System.Object,System.String)">
            <summary>
            Deserialize object from the file using binary format.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="fileName">File name to read the data from.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.Deserialize(System.Object,System.IO.Stream)">
            <summary>
            Deserialize object from the stream using binary format.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="stream">Stream to read the data from.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.Deserialize(System.Object,System.IO.BinaryReader)">
            <summary>
            Deserialize object from different types of readers using binary format.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="reader">Binary reader.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.DeserializeObject(System.Object,System.Object,System.String,System.IO.BinaryReader)">
            <summary>
            Deserialize object from the XML format.
            Method is called recursively to deserialize child objects.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="parent">Parent of the deserialized object.</param>
            <param name="elementName">Object element name.</param>
            <param name="reader">Binary reader object.</param>
            <returns>Number of properties set.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.SetPropertyValue(System.Object,System.Reflection.PropertyInfo,System.IO.BinaryReader)">
            <summary>
            Reads and sets a property of an object.
            </summary>
            <param name="obj">Object to set.</param>
            <param name="pi">Property information.</param>
            <param name="reader">Binary reader.</param>
            <returns>True if property was set.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BinaryFormatSerializer.ReadPropertyInfo(System.Object,System.Object,System.Reflection.PropertyInfo[],System.IO.BinaryReader)">
            <summary>
            Reads property ID and return property information
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="parent">Parent of the deserialized object.</param>
            <param name="properties">List of properties information.</param>
            <param name="reader">Binary reader.</param>
            <returns>Property information.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SmartClientSerializerHelper">
            <summary>
            Smart Client serializer helper class.
            This source is auto generated!
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SmartClientSerializerHelper.GetPropertyValue(System.Object,System.Int16)">
            <summary>
            Gets property object by name.
            </summary>
            <param name="obj">Object with the requested property.</param>
            <param name="propertyId">Property ID.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SmartClientSerializerHelper.SetPropertyValue(System.Object,System.Int16,System.String,System.IO.BinaryReader)">
            <summary>
            Sets property object by name.
            </summary>
            <param name="obj">Object with the requested property.</param>
            <param name="propertyId">Property ID.</param>
            <param name="propertyValue">Property value as string. Used when binaryReader parameter is null.</param>
            <param name="binaryReader">Binary reader to get the value from. If null propertyValue parameter should be used.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SmartClientSerializerHelper.SetGetPropertyValue(System.Object,System.Int16,System.Boolean,System.String,System.IO.BinaryReader)">
            <summary>
            Gets or sets property object by name.
            </summary>
            <param name="obj">Object with the requested property.</param>
            <param name="propertyId">Property ID.</param>
            <param name="setValue">True if property value is set.</param>
            <param name="propertyValue">Property value as string. Used when binaryReader parameter is null.</param>
            <param name="binaryReader">Binary reader to get the value from. If null propertyValue parameter should be used.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SmartClientSerializerHelper.GetPropertyObjectByName(System.Object,System.Int16)">
            <summary>
            Gets property object by name.
            </summary>
            <param name="obj">Object with the requested property.</param>
            <param name="propertyId">Property ID.</param>
            <returns>Object that represent a property with specified ID</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.SmartClientSerializerHelper.GetNewListItem(System.Object,System.Int16,System.String@,System.Boolean@)">
            <summary>
            Gets new collection item.
            </summary>
            <param name="obj">Collection object.</param>
            <param name="itemTypeId">Collection item ID.</param>
            <returns>Newly created collection item</returns>
            <param name="itemName">Optional item name to return.</param>
            <param name="reusedObject">Indicates that object with specified name was already in the collection and it beign reused.</param>
        </member>
        <member name="T:Dundas.Gauges.WinControl.SerializableProperties">
            <summary>
            List of serializable properies with their IDs.
            This source is auto generated!
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValueNameConverter">
            <summary>
            Design time Converter class for CalculatedValue.BaseValueName property.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of the InputValues for the BaseValueName.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values collection.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.TimerData">
            <summary>
            The TimerData class is helper class that 
            contain and keep information during autorefresh.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.TimerData.ticks">
            <summary>
            The ticks between refreshes
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.TimerData.timeStamp">
            <summary>
            The date time of the last refresh
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.TimerData.#ctor">
            <summary>
            Initializes a new instance of the TimerData class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.TimerData.#ctor(System.TimeSpan,System.DateTime)">
            <summary>
            Initializes a new instance of the TimerData class.
            </summary>
            <param name="ticks">Initial ticks</param>
            <param name="timeStamp">Time stamp.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.TimerData.IncDate">
            <summary>
            Increment date by ticks
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.TimerData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValueConverter">
            <summary>
            Design time Converter class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueConverter.#ctor">
            <summary>
            Initializes a new instance of the Converter class.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.StateIndicatorCollection">
            <summary>
            Collection of <b>StateIndicator</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.StateIndicator"/>
            </summary>
            <remarks>
            This collection is exposed as the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.StateIndicators"/> 
            property of the root <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> object.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicatorCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicatorCollection.Add(System.String)">
            <summary>
            Adds a <b>StateIndicator</b> object to the end of the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.StateIndicatorCollection.Remove(Dundas.Gauges.WinControl.StateIndicator)"/>
            <seealso cref="T:Dundas.Gauges.WinControl.StateIndicator"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.StateIndicator"/> object to be added to the collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.StateIndicator"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. 
            The name argument is the <b>Name</b> property of the object being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicatorCollection.Add(Dundas.Gauges.WinControl.StateIndicator)">
            <summary>
            Adds a <b>StateIndicator</b> object to the end of the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.StateIndicatorCollection.Remove(Dundas.Gauges.WinControl.StateIndicator)"/>
            <seealso cref="T:Dundas.Gauges.WinControl.StateIndicator"/>
            </summary>
            <param name="value">
            The <see cref="T:Dundas.Gauges.WinControl.StateIndicator"/> object to be added to 
            the collection.
            </param>
            <returns>
            Returns the position in the collection of the newly added object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicatorCollection.Remove(Dundas.Gauges.WinControl.StateIndicator)">
            <summary>
            Removes the specified <b>StateIndicator</b> object from the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.StateIndicatorCollection.Add(System.String)"/>
            <seealso cref="T:Dundas.Gauges.WinControl.StateIndicator"/>
            </summary>
            <param name="value">
            <see cref="T:Dundas.Gauges.WinControl.StateIndicator"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicatorCollection.GetDefaultElementName(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicatorCollection.GetElementNameFormat(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Overridden in order to set the format of the automatically generated
            names.
            </summary>
            <param name="el">The new element.</param>
            <returns>A string representing the name format.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.StateIndicatorCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            We override this function in order to automatically adjust the
            position of newly inserted elements. Also we set a parent to either
            the default circular gauge or default linear gauge if they exist. 
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicatorCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicatorCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns the StateIndicator object
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.StateIndicatorCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>StateIndicator</b> object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.NeedleStyle">
            <summary>
            Enumeration that determines the style of a needle pointer.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NeedleStyle.NeedleStyle1">
            <summary>
            First needle style.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NeedleStyle.NeedleStyle2">
            <summary>
            Second needle style.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NeedleStyle.NeedleStyle3">
            <summary>
            Third needle style.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NeedleStyle.NeedleStyle4">
            <summary>
            Fourth needle style.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NeedleStyle.NeedleStyle5">
            <summary>
            Fifth needle style.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NeedleStyle.NeedleStyle6">
            <summary>
            Sixth needle style.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NeedleStyle.NeedleStyle7">
            <summary>
            Seventh needle style.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NeedleStyle.NeedleStyle8">
            <summary>
            Eighth needle style.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NeedleStyle.NeedleStyle9">
            <summary>
            Ninth needle style.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NeedleStyle.NeedleStyle10">
            <summary>
            Tenth needle style.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.NeedleStyle.NeedleStyle11">
            <summary>
            Eleventh needle style.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.MarkerStyle">
            <summary>
            Enumeration that determines the style of a marker pointer.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MarkerStyle.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MarkerStyle.Rectangle">
            <summary>
            Rectangle style marker.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MarkerStyle.Triangle">
            <summary>
            Triangle style marker.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MarkerStyle.Circle">
            <summary>
            Circle style marker.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MarkerStyle.Diamond">
            <summary>
            Diamond style marker.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MarkerStyle.Trapezoid">
            <summary>
            Trapezoid style marker.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MarkerStyle.Star">
            <summary>
            Star style marker.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MarkerStyle.Wedge">
            <summary>
            Wedge style marker.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.MarkerStyle.Pentagon">
            <summary>
            Pentagon style marker.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.KnobStyle">
            <summary>
            Enumeration that determines the style of a knob pointer.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.KnobStyle.KnobStyle1">
            <summary>
            First knob style.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.KnobStyle.KnobStyle2">
            <summary>
            Second knob style.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.KnobStyle.KnobStyle3">
            <summary>
            Third knob style.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.BarStyle">
            <summary>
            Enumeration that determines the style of a bar pointer.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BarStyle.BarStyle1">
            <summary>
            First bar style.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularScale">
            <summary>
            Scale for <b>CircularGauge</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularGauge"/>
            <seealso cref="T:Dundas.Gauges.WinControl.CircularPointer"/>
            </summary>
            <remarks>
            Circular scales are stored in the <see cref="P:Dundas.Gauges.WinControl.CircularGauge.Scales"/> property.
            <p>
            <see cref="T:Dundas.Gauges.WinControl.CircularPointer"/> objects are assigned to a circular scale, 
            and it is this scale the pointers 'points' to. <see cref="T:Dundas.Gauges.WinControl.CircularRange"/> objects 
            are also assigned to scales.
            </p>
            <p>
            <p>
            The radius of circular scales are measured as a percentage of the width or 
            height of their parent (e.g. gauge container).
            </p>
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.#ctor">
            <summary>
            Initializes a new instance of CircularScale class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.GetRadius">
            <summary>
            Returns the radius of the scale in relative units.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.GetPivotPoint">
            <summary>
            Returns the PivotPoint position in relative units
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.GetBarPath(System.Single,System.Single)">
            <summary>
            Returns Bar Graphics path.
            </summary>
            <param name="barOffsetInside">Inner offset from scale.</param>
            <param name="barOffsetOutside">Outer offset from scale.</param>
            <returns>The Bar Graphics path</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.SetScaleHitTestPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Puts scale graphics into hot region list. 
            This graphics path looks like an Arc and contain scale and tick marks.
            </summary>
            <param name="g">Current GaugeGraphics object</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.GetCompoundPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            This function returns the graphics path that encompasses the scale
            bar, the tick marks, the labels, custom labels, pins etc.
            </summary>
            <returns>A reference to GraphicsPath.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.GetShadowPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns shadow path. Used for rendering with other shadows like
            pointers to prevent double shadows.
            </summary>
            <returns>GraphicsPath with shadow of scales.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.RenderBar(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders scales' bar
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.DrawTickMark(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.CustomTickMark,System.Double,System.Single)">
            <summary>
            Renders one tick mark.
            </summary>
            <param name="g">Current GaugeGraphics.</param>
            <param name="tickMark">Tick mark object.</param>
            <param name="value">Value position against scale.</param>
            <param name="offset">Offset from scale, can be negative.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.DrawLabel(Dundas.Gauges.WinControl.Placement,System.String,System.Double,System.Single,System.Single,System.Drawing.Font,System.Drawing.Color,System.Boolean,System.Boolean,Dundas.Gauges.WinControl.FontUnit)">
            <summary>
            Draws one label.
            </summary>
            <param name="placement"><see cref="P:Dundas.Gauges.WinControl.CustomLabel.Placement"/></param>
            <param name="labelStr">String to be drawn.</param>
            <param name="position">Relative angle of scale.</param>
            <param name="labelPos">Angle position as offset from scale.</param>
            <param name="rotateLabelAngle">Rotation angle for labels.</param>
            <param name="font">Label font.</param>
            <param name="color">Label color.</param>
            <param name="rotateLabels"><see cref="P:Dundas.Gauges.WinControl.CircularLabelStyle.RotateLabels"/> Determines if labels are rotated along with the scale.</param>
            <param name="allowUpsideDown"><see cref="P:Dundas.Gauges.WinControl.CircularLabelStyle.AllowUpsideDown"/>Determines is labels can be rotated by more than 90 degrees.</param>
            <param name="fontUnit">Font units.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.RenderLabels(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Performs rendering of all labels
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.DrawCustomLabel(Dundas.Gauges.WinControl.CustomLabel)">
            <summary>
            Draw one custom label
            </summary>
            <param name="label">Custom label to be drawn</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.DrawSpecialPosition(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.SpecialPosition,System.Single)">
            <summary>
            Performs drawing of the special position elements "pins"
            </summary>
            <param name="g">The GaugeGraphics instance</param>
            <param name="label">The SpecialPosition element</param>
            <param name="angle">The position to be drawn</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.RenderStaticElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Performs rendering of gauge scale
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.RenderDynamicElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Performs rendering of gauge scale
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.SetDrawRegion(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Sets the virtual draw region. Setup relative coordinates. 
            Note that scale elements are relative to scale radius
            and the center is at pin point.
            </summary>
            <param name="g">The GaugeGraphics instance</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.ToString">
            <summary>
            Returns the name of the object as a string.
            </summary>
            <returns>
            String that represents the name of the object.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.GetGauge">
            <summary>
            Returns the <b>CircularGauge</b> object to which this scale belongs.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularGauge"/>
            </summary>
            <returns>
            A reference to the <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> owner object.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.GetPositionFromValueNormalized(System.Double)">
            <summary>
            Returns the pointer position.
            </summary>
            <param name="value">Measured value</param>
            <returns>the pointer position</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.GetPoint(System.Single,System.Single)">
            <summary>
            Returns PointF structure determined by position and offset from circle line.
            </summary>
            <param name="position">The position.</param>
            <param name="offset">The offset from the scale position.</param>
            <returns>PointF structure determined by angle and offset from circle line.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.GetValue(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Returns value calculated from center point and other point in the scale.
            </summary>
            <param name="c">Center point or "pin point"</param>
            <param name="p">Mouse hit point</param>
            <returns>Calculated value</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.GetLargestRadius(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            This function returns the largest radius of this scale, taking
            into consideration labels, custom labels, and tick marks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.GetCustomLabelOffset(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.CustomLabel)">
            <summary>
            Returns the offset of scale for the provided custom label.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="customLabel">The custom label.</param>
            <returns>The offset in relative coordinates.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.GetTickMarkOffset(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.TickMark)">
            <summary>
            Returns the offset of the provided tick mark.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="tickMark">The tick mark.</param>
            <returns>The offset in relative coordinates.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.GetLabelsOffset(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the label offset of the scale labels.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <returns>A float representing the offset in relative units.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.Dundas#Gauges#WinControl#ISelectable#DrawSelection(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Render the selection of the given element.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScale.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularScale.LabelStyle">
            <summary>
            The label attributes of this scale.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularLabelStyle"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.CircularLabelStyle"/> enumeration value.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularScale.Radius">
            <summary>
            Determines the radius of the scale, measured as a percent of the gauge's 
            width or height, whichever is smaller. 
            </summary>
            <value>
            A float that represents the radius of the scale. Defaults to 37 percent of the 
            associated gauge objects width or height (whichever is smaller).
            </value>
            <remarks>
            The scale radius is used as the basis for associated pointer measurements, 
            which are measured as a percentage of this radius.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularScale.StartAngle">
            <summary>
            The start angle of the scale in degrees (0 to 360).
            <seealso cref="P:Dundas.Gauges.WinControl.CircularScale.SweepAngle"/>
            </summary>
            <value>
            A float that represents the start angle of the scale. Defaults 
            to 20 degrees.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularScale.SweepAngle">
            <summary>
            The sweep angle of the scale in degrees (0 to 360).
            <seealso cref="P:Dundas.Gauges.WinControl.CircularScale.StartAngle"/>
            </summary>
            <value>
            A float that represents the sweep angle of the scale. Defaults 
            to 320 degrees.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularScale.MajorTickMark">
            <summary>
            The major tick mark attributes of this scale.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularMajorTickMark"/>
            <seealso cref="P:Dundas.Gauges.WinControl.CircularScale.MinorTickMark"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.CircularMajorTickMark"/> object.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularScale.MinorTickMark">
            <summary>
            The minor tick mark attributes of this scale.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularMinorTickMark"/>
            <seealso cref="P:Dundas.Gauges.WinControl.CircularScale.MajorTickMark"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.CircularMinorTickMark"/> object.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularScale.GaugePivotPoint">
            <summary>
            The point around which the needle rotates. The X, Y coordinates are 
            measured as a percent of the associated gauge objects width or height, 
            (whichever is smaller).
            <seealso cref="T:Dundas.Gauges.WinControl.GaugeLocation"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeLocation"/> object, which represents the location 
            of the pivot point.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularScale.MinimumPin">
            <summary>
            Attributes for the minimum pin of the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularScale.MaximumPin"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.SpecialPosition"/> value, which represents the minimum pin.
            </value>
            <remarks>
            The <b>MinimumPin</b> property sets a delimiter on the minimum value that can 
            be input into a scale. If the value of a pointer falls below the minimum pin 
            of the scale, the pointer will stop moving at the minimum pin.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularScale.MaximumPin">
            <summary>
            Attributes for the maximum pin of the scale.
            <seealso cref="P:Dundas.Gauges.WinControl.CircularScale.MinimumPin"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.SpecialPosition"/> value, which represents the maximum pin.
            </value>
            <remarks>
            The <b>MaximumPin</b> property sets a delimiter on the maximum value that can 
            be input into a scale. If the value of a pointer falls above the maximum pin 
            of the scale, the pointer will stop moving at the maximum pin.
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularScaleConverter">
            <summary>
            This Converter is used in design time 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularScaleConverter.#ctor">
            <summary>
            Initializes a new instance of Converter class.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GdiGraphics">
            <summary>
            This class encapsulates .net GDI+ functionality
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting two PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="pt1">PointF structure that represents the first point to connect.</param>
            <param name="pt2">PointF structure that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line connecting the two points specified by coordinate pairs.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="x1">x-coordinate of the first point.</param>
            <param name="y1">y-coordinate of the first point.</param>
            <param name="x2">x-coordinate of the second point.</param>
            <param name="y2">y-coordinate of the second point.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttr">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by 
            a pair of coordinates: a height, and a width.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of PointF structures 
            using a specified tension. The drawing begins offset from 
            the beginning of the array.
            </summary>
            <param name="pen">Pen object that determines the color, width, and height of the curve.</param>
            <param name="points">Array of PointF structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle specified by a coordinate pair: a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">Width of the rectangle to draw.</param>
            <param name="height">Height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a polygon defined by an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the polygon.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the location of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string at the specified location with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle specified by a coordinate pair: a width, and a height.
            </summary>
            <param name="pen">A Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">The width of the rectangle to draw.</param>
            <param name="height">The height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws a GraphicsPath object.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the path.</param>
            <param name="path">GraphicsPath object to draw.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair: a width, a height and two radial lines.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the pie shape.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a pair of coordinates: a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the arc.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="width">Width of the rectangle that defines the ellipse.</param>
            <param name="height">Height of the rectangle that defines the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Draws the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="rect">RectangleF structure that specifies the location and size of the drawn image.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse defined by a bounding RectangleF.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="rect">RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a series of line segments that connect an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line segments.</param>
            <param name="points">Array of PointF structures that represent the points to connect.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle 
            specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Fills the interior of a GraphicsPath object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="path">GraphicsPath object that represents the path to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Fills the interior of a GraphicsPath object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="path">GraphicsPath object that represents the path to fill.</param>
            <param name="angle">The angle by which this path has been rotated.</param>
            <param name="useBrushOffset">Determines if the offset of the brush transformation
            matrix should be used to position the gradient.</param>		
            <param name="circularFill">Determines if this path is a circle.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
            <summary>
            Fills the interior of a Region object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="region">Region object that represents the area to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of a rectangle specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="width">Width of the rectangle to fill.</param>
            <param name="height">Height of the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by PointF structures .
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon to fill.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a pie section defined by an ellipse 
            specified by a pair of coordinates, a width, and a height 
            and two radial lines.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the second side of the pie section.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text.</param>
            <param name="stringFormat">StringFormat object that represents formatting information, such as line spacing, for the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.MeasureString(System.String,System.Drawing.Font)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.Save">
            <summary>
            Saves the current state of this Graphics object and identifies the saved state with a GraphicsState object.
            </summary>
            <returns>This method returns a GraphicsState object that represents the saved state of this Graphics object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
            <summary>
            Restores the state of this Graphics object to the state represented by a GraphicsState object.
            </summary>
            <param name="gstate">GraphicsState object that represents the state to which to restore this Graphics object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.ResetClip">
            <summary>
            Resets the clip region of this Graphics object to an infinite region.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this Graphics object to the rectangle specified by a RectangleF structure.
            </summary>
            <param name="rect">RectangleF structure that represents the new clip region.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
            <summary>
            Sets the clipping region of this Graphics object to the result of the 
            specified operation combining the current clip region and the 
            specified GraphicsPath object.
            </summary>
            <param name="path">GraphicsPath object to combine.</param>
            <param name="combineMode">Member of the CombineMode enumeration that specifies the combining operation to use.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.TranslateTransform(System.Single,System.Single)">
            <summary>
            Prepends the specified translation to the transformation matrix of this Graphics object.
            </summary>
            <param name="dx">x component of the translation.</param>
            <param name="dy">y component of the translation.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.BeginSelection(System.String,System.String)">
            <summary>
            This method starts Selection mode
            </summary>
            <param name="hRef">The location of the referenced object, expressed as a URI reference.</param>
            <param name="title">Title which could be used for tooltips.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GdiGraphics.EndSelection">
            <summary>
            This method stops Selection mode
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GdiGraphics.graphics">
            <summary>
            Graphics object
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GdiGraphics.Transform">
            <summary>
            Gets or sets the world transformation for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GdiGraphics.SmoothingMode">
            <summary>
            Gets or sets the rendering quality for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GdiGraphics.TextRenderingHint">
            <summary>
            Gets or sets the rendering mode for text associated with this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GdiGraphics.Clip">
            <summary>
            Gets or sets a Region object that limits the drawing region of this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GdiGraphics.IsClipEmpty">
            <summary>
            Gets a value indicating whether the clipping region of this Graphics object is empty.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GdiGraphics.Graphics">
            <summary>
            Reference to the Graphics object
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ParentSourceConverter">
            <summary>
            Gauge elements name converter. Displays list of available gauge element names
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ParentSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ParentSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ParentSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of the InputValues for the BaseValueName.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values collection.</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeData">
            <summary>
            GaugeData class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.#ctor">
            <summary>
            Constructor for GaugeData class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for GaugeData class.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.Clone">
            <summary>
            Clone this instance.
            </summary>
            <returns>The cloned instance as a DataSet.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ShouldSerializeTables">
            <summary>
            Indicate if Tables should be serialized.
            </summary>
            <returns>true, if Tables should be serialized, false otherwise.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ShouldSerializeRelations">
            <summary>
            Indicate if Relations should be serialized.
            </summary>
            <returns>true, if Relations should be serialized, false otherwise.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ReadXmlSerializable(System.Xml.XmlReader)">
            <summary>
            Read from XML.
            </summary>
            <param name="reader">XML reader object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.GetSchemaSerializable">
            <summary>
            Get the XML schema.
            </summary>
            <returns>XML schema object.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeData.Values">
            <summary>
            Get the Values data.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeData.ValuesRowChangeEventHandler">
            <summary>
            Delegate for ValuesRowChangeEvent handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable">
            <summary>
            ValuesDataTable class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.AddValuesRow(Dundas.Gauges.WinControl.GaugeData.ValuesRow)">
            <summary>
            Add a values row.
            </summary>
            <param name="row">ValuesRow to add.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.AddValuesRow(System.DateTime,System.Double)">
            <summary>
            Add a ValuesRow.
            </summary>
            <param name="DateStamp">Current timestamp.</param>
            <param name="Value">Value to add.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.FindByDateStamp(System.DateTime)">
            <summary>
            Find a ValueRow given a timestamp.
            </summary>
            <param name="DateStamp">Timestamp to look for.</param>
            <returns>ValueRow with timestamp.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.GetEnumerator">
            <summary>
            Return IEnumerator.
            </summary>
            <returns>Enumerator of this instance.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.Clone">
            <summary>
            Close this instance.
            </summary>
            <returns>Cloned instance.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.CreateInstance">
            <summary>
            Create a new instance of a ValuesDataTable.
            </summary>
            <returns>ValuesDataTable object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.NewValuesRow">
            <summary>
            Return a new ValuesRow instance.
            </summary>
            <returns>ValuesRow object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>
            Return a new DataRow instance given a DataRowBuilder.
            </summary>
            <param name="builder">DataRowBuilder instance.</param>
            <returns>DataRow object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.GetRowType">
            <summary>
            Return the object type for the ValuesRow class.
            </summary>
            <returns>Object type of a ValuesRow.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
            <summary>
            Handle RowChanged event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
            <summary>
            Handle RowChanging event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
            <summary>
            Handle RowDeleted event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
            <summary>
            Handle RowDeleting event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.RemoveValuesRow(Dundas.Gauges.WinControl.GaugeData.ValuesRow)">
            <summary>
            Remove given ValuesRow.
            </summary>
            <param name="row">ValuesRow to remove.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.Count">
            <summary>
            Return a count of the number of rows.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.Item(System.Int32)">
            <summary>
            Accessor to return ValuesRow at specified index.
            </summary>
            <param name="index">Index for the ValuesRow.</param>
            <returns>ValuesRow object.</returns>
        </member>
        <member name="E:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.ValuesRowChanged">
            <summary>
            ValuesRowChanged event.
            </summary>
        </member>
        <member name="E:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.ValuesRowChanging">
            <summary>
            ValuesRowChanging event.
            </summary>
        </member>
        <member name="E:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.ValuesRowDeleted">
            <summary>
            ValuesRowDeleted event.
            </summary>
        </member>
        <member name="E:Dundas.Gauges.WinControl.GaugeData.ValuesDataTable.ValuesRowDeleting">
            <summary>
            ValuesRowDeleting event.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeData.ValuesRow">
            <summary>
            ValuesRow class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesRow.IsValueNull">
            <summary>
            Indicate if value is null.
            </summary>
            <returns>true, if value is null, false otherwise.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesRow.SetValueNull">
            <summary>
            Set current value to null.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeData.ValuesRow.DateStamp">
            <summary>
            Get or set the timestamp.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeData.ValuesRow.Value">
            <summary>
            Get or set the value.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeData.ValuesRowChangeEvent">
            <summary>
            Class which defines the ValuesRowChange event.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeData.ValuesRowChangeEvent.#ctor(Dundas.Gauges.WinControl.GaugeData.ValuesRow,System.Data.DataRowAction)">
            <summary>
            Constructor for ValuesRowChangeEvent class.
            </summary>
            <param name="row">ValuesRow which changed.</param>
            <param name="action">DataRowAction object.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeData.ValuesRowChangeEvent.Row">
            <summary>
            Get the ValuesRow.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeData.ValuesRowChangeEvent.Action">
            <summary>
            Get the DataRowAction.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValueAverage">
            <summary>
            This class represents an average calculated value.
            </summary>
            <remarks>
            Average calculations have a period, which determines the range of data to be 
            used for the calculation. The period is always measured from the present date/time, 
            and goes back by the amount specified by the <b>Period</b> and <b>PeriodType</b> 
            properties.
            <p>
            A calculated value is owned by an <see cref="T:Dundas.Gauges.WinControl.InputValue"/> object, which has a 
            <see cref="P:Dundas.Gauges.WinControl.InputValue.CalculatedValues"/> collection.
            </p>	
            <p>
            Calculated values use the history of their input values as source data.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueAverage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Gauges.WinControl.CalculatedValueAverage"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueAverage.CalculateValue(System.Double,System.DateTime)">
            <summary>
            Calculates average for specified GaugeDuration.
            </summary>
            <param name="value">The input value</param>
            <param name="timeStamp">The input time stamp</param>
        </member>
        <member name="T:Dundas.Gauges.WinControl.RangeDataState">
            <summary>
            Keeps range state for each data attribute.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.RangeDataState.#ctor(Dundas.Gauges.WinControl.Range,Dundas.Gauges.WinControl.DataAttributes)">
            <summary>
            Initializes new instance of RangeDataState class
            </summary>
            <param name="range">The parent range</param>
            <param name="data">The parent data attributes</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.RangeDataState.IsPlayBackMode">
            <summary>
            gets playback mode info
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ElementType">
            <summary>
            Used to determine a gauge element type.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ElementType.CircularPointer">
            <summary>
            The object is a circular pointer.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ElementType.LinearPointer">
            <summary>
            The object is a linear pointer.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ElementType.CircularScale">
            <summary>
            The object is a circular scale.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ElementType.LinearScale">
            <summary>
            The object is a linear scale.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.HitTestResult">
            <summary>
            This class represents the results of a hit test.
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeContainer.HitTest(System.Int32,System.Int32)"/>
            </summary>
            <remarks>
            A <b>HitTestResult</b> object is returned by the container's 
            <see cref="M:Dundas.Gauges.WinControl.GaugeContainer.HitTest(System.Int32,System.Int32)"/> method.
            </remarks>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HitTestResult.htPoint">
            <summary>
            Hit test point
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HitTestResult.obj">
            <summary>
            The object which was hit
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.HitTestResult.region">
            <summary>
            Reference to HotRegion object
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.HitTestResult.#ctor(Dundas.Gauges.WinControl.HotRegion,System.Drawing.PointF)">
            <summary>
            The constructor the class
            </summary>
            <param name="region">The hot region.</param>
            <param name="hitTestPoint">Point of the hit test.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HitTestResult.Object">
            <summary>
            The object that was hit.
            </summary>
            <value>
            The object that was hit.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HitTestResult.Success">
            <summary>
            Returns <b>true</b> if the last <b>HitTest</b> method call was successful.
            <seealso cref="M:Dundas.Gauges.WinControl.GaugeContainer.HitTest(System.Int32,System.Int32)"/>
            </summary>
            <value>
            <b>true</b> if the last <b>HitTest</b> method call was successful, <b>false</b> 
            otherwise.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HitTestResult.Name">
            <summary>
            The name of the hit element, if the object is a named element.
            </summary>
            <value>
            A string that represents the name of the hit element, if it is 
            a named element.
            </value>
            <remarks>
            Examples of named elements are values, gauges, pointers, scales, ranges, etc.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HitTestResult.ScaleValue">
            <summary>
            The scale value of the hit, if the hit object was a scale.
            </summary>
            <value>
            A real number that represent's the hit scale's value, if any.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.HitTestResult.Region">
            <summary>
            Gets the initialized HotRegion
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CustomLabelCollection">
            <summary>
            Collection of <b>CustomLabel</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.CustomLabel"/>
            </summary>
            <remarks>
            This collection is exposed as the <b>CustomLabels</b> 
            property of <see cref="T:Dundas.Gauges.WinControl.CircularScale"/> and <see cref="T:Dundas.Gauges.WinControl.LinearScale"/> objects.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CustomLabelCollection.#ctor(Dundas.Gauges.WinControl.NamedElement,Dundas.Gauges.WinControl.CommonElements)">
            <summary>
            Internal constructor that sets the Parent and Common properties
            </summary>
            <param name="parent">A reference to the parent element.</param>
            <param name="common">A reference to the Common class.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CustomLabelCollection.Add(System.String)">
            <summary>
            Adds a <b>CustomLabel</b> object to the end of the collection.
            <seealso cref="M:Dundas.Gauges.WinControl.CustomLabelCollection.Remove(Dundas.Gauges.WinControl.CustomLabel)"/>
            <seealso cref="T:Dundas.Gauges.WinControl.CustomLabel"/>
            </summary>
            <param name="name">
            The name of the <see cref="T:Dundas.Gauges.WinControl.CustomLabel"/> object to be added to the collection.
            </param>
            <returns>
            Returns a reference to the newly added <see cref="T:Dundas.Gauges.WinControl.CustomLabel"/> object. 
            </returns>
            <remarks>
            Items are always added as the last item in the collection. 
            The name argument is the <b>Name</b> property of the object being added.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CustomLabelCollection.Add(Dundas.Gauges.WinControl.CustomLabel)">
            <summary>
            Adds a <b>CustomLabel</b> object to the end of the collection.
            <seealso cref="T:Dundas.Gauges.WinControl.CustomLabel"/>
            </summary>
            <param name="value">
            The name of the <see cref="T:Dundas.Gauges.WinControl.CustomLabel"/> object to be added to 
            the collection.
            </param>
            <returns>
            Returns the position in the collection of the newly added object.
            </returns>
            <remarks>
            Items are always added as the last item in the collection.
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CustomLabelCollection.Remove(Dundas.Gauges.WinControl.CustomLabel)">
            <summary>
            Removes the specified <b>CustomLabel</b> object from the collection.
            </summary>
            <param name="value">
            <see cref="T:Dundas.Gauges.WinControl.CustomLabel"/> object to be removed.
            </param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabelCollection.Item(System.Int32)">
            <summary>
            Integer indexer that is used internally.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabelCollection.Item(System.String)">
            <summary>
            Indexer of the class. Returns the CustomLabel object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CustomLabelCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns a <b>CustomLabel</b> object.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValueIntegral">
            <summary>
            This class represents an integral calculated value.
            </summary>
            <remarks>
            A calculated value is owned by an <see cref="T:Dundas.Gauges.WinControl.InputValue"/> object, which has a 
            <see cref="P:Dundas.Gauges.WinControl.InputValue.CalculatedValues"/> collection.
            <p>
            Calculated values use the history of their input values as source data.
            </p>
            </remarks>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CalculatedValueIntegral.interval">
            <summary>
            Represents Integral interval
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CalculatedValueIntegral.integralBase">
            <summary>
            The integral base to add to result.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CalculatedValueIntegral.integralResult">
            <summary>
            The integral accumulative result.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CalculatedValueIntegral.oldValue">
            <summary>
            The last input value copy
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueIntegral.CalculateValue(System.Double,System.DateTime)">
            <summary>
            Calculates integral for specified GaugeDuration.
            </summary>
            <param name="value">The input value.</param>
            <param name="timeStamp">The input date.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueIntegral.RegenerateIntegralResult">
            <summary>
            Performs regeneration of intergal result after refreshing or PlayBack/Interactive switching.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueIntegral.Reset">
            <summary>
            Resets the calculated value.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueIntegral.RefreshConsumers">
            <summary>
            Forces consumers to read output data again.
            This cause this calculate value to regenerate its result.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueIntegral.CloneInternals(System.Object)">
            <summary>
            Initializes an object that is a copy of the current instance.
            </summary>
            <param name="copy">The object to initialize</param>
            <returns>Initialized copy of this current instance</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueIntegral.IntegralInterval">
            <summary>
            Gets or sets the integral interval. Measured in <b>IntegralIntervalType</b> 
            units.
            <seealso cref="P:Dundas.Gauges.WinControl.CalculatedValueIntegral.IntegralIntervalType"/>
            <seealso cref="P:Dundas.Gauges.WinControl.CalculatedValueIntegral.IntegralBase"/>
            </summary>
            <value>
            A double that represents the integral interval. Defaults to not 
            set (Double.NaN).
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueIntegral.IntegralIntervalType">
            <summary>
            Gets or sets the integral interval period type.
            <seealso cref="P:Dundas.Gauges.WinControl.CalculatedValueIntegral.IntegralInterval"/>
            <seealso cref="P:Dundas.Gauges.WinControl.CalculatedValueIntegral.IntegralBase"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.PeriodType"/> value, that represents the interval type.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueIntegral.IntegralBase">
            <summary>
            Gets or sets the integral base.
            </summary>
            <value>
            A double that represents the interval base. Defaults to 0.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueIntegral.Period">
            <summary>
            This calculated value does not use the Period property
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CalculatedValueIntegral.PeriodType">
            <summary>
            This calculated value does not use the PeriodType property
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CalculatedValueIntegralConverter">
            <summary>
            Design time TypeConverter class
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CalculatedValueIntegralConverter.#ctor">
            <summary>
            Initializes a new instance of the Converter class.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.NumericRange">
            <summary>
            Represents a numerical indicator's range.
            <seealso cref="T:Dundas.Gauges.WinControl.NumericIndicator"/>
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.Ranges"/>
            </summary>
            <remarks>
            A range allows for the usage of numerical indicator's and range-related events.
            <p>
            These ranges are stored in the <see cref="P:Dundas.Gauges.WinControl.NumericIndicator.Ranges"/> 
            property of <see cref="T:Dundas.Gauges.WinControl.NumericIndicator"/> objects.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericRange.#ctor">
            <summary>
            Initializes new instance of NumericRange class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericRange.ToString">
            <summary>
            Gets the name of the range.
            </summary>
            <returns>
            A string that represents the range's name.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericRange.OnAdded">
            <summary>
            This method is called right after this NamedElement
            becomes a member of a NamedCollection. 
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericRange.Name">
            <summary>
            The name of the range.
            </summary>
            <value>
            A string that represents the range's name.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericRange.StartValue">
            <summary>
            The start value of the range.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericRange.EndValue"/>
            </summary>
            <value>
            A double that represents the start value of the range. Defaults to 7000.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericRange.EndValue">
            <summary>
            The end value of the range.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericRange.StartValue"/>
            </summary>
            <value>
            A double that represents the end value of the range. Defaults to 10000.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericRange.DigitColor">
            <summary>
            Gets or sets the color of the digits when the indicator's value is in range.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.DecimalColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.DigitColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.NumericRange.DecimalColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            the color. The default value is <b>Color.Red</b>.
            </value>
            <remarks>
            This property represents the text color of the digits when 
            the numerical indicator's value is in range.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericRange.DecimalColor">
            <summary>
            Gets or sets the color of the decimals when the indicator's value is in range.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.DecimalColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.NumericIndicator.DigitColor"/>
            <seealso cref="P:Dundas.Gauges.WinControl.NumericRange.DigitColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            the color. The default value is <b>Color.Red</b>.
            </value>
            <remarks>
            This property represents the text color of the digits when 
            the numerical indicator's value is in range.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericRange.InRangeTimeout">
            <summary>
            Determines how long the value needs to stay in the range before triggering the 
            <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeTimeOut"/> event.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericRange.InRangeTimeoutType"/>
            </summary>
            <value>
            A double that represents the amount of time before the time out event is fired. Defaults 
            to 0 seconds.
            </value>
            <remarks>
            The type of timeout is set by the <see cref="P:Dundas.Gauges.WinControl.NumericRange.InRangeTimeoutType"/> property.        
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.NumericRange.InRangeTimeoutType">
            <summary>
            The type of the <b>InRangeTimeout</b> value.
            <see cref="E:Dundas.Gauges.WinControl.GaugeContainer.PointerRangeTimeOut"/> event.
            <seealso cref="P:Dundas.Gauges.WinControl.NumericRange.InRangeTimeout"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.PeriodType"/> object that represents the type of the time out. Defaults 
            to <b>PeriodType.Seconds</b>.
            </value>
            <remarks>
            The timeout is set by the <see cref="P:Dundas.Gauges.WinControl.NumericRange.InRangeTimeout"/> property.        
            </remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.NumericRangeConverter">
            <summary>
            This is design time type converter of the NumericRange class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.NumericRangeConverter.#ctor">
            <summary>
            Initialize new instance of Converter class.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RenderContent.All">
            <summary>
            Renders both static and dynamic elements.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RenderContent.Static">
            <summary>
            Renders only static elements.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.RenderContent.Dynamic">
            <summary>
            Renders only dynamic elements.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.GaugeCore">
            <summary>
            Core for the gauge.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.inputValues">
            <summary>
            The collection of InputValue object references
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.circularGauges">
            <summary>
            The collection of CircularGauge object references
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.linearGauges">
            <summary>
            The collection of LinearGauge object references
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.numericIndicators">
            <summary>
            The collection of NumericIndicator object references
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.stateIndicators">
            <summary>
            The collection of StateIndicator object references
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.images">
            <summary>
            The collection of GaugeImage object references
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.labels">
            <summary>
            The collection of GaugeLabel object references
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.namedImages">
            <summary>
            The collection of NamedImage object references
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.silentPaint">
            <summary>
            Flag which determines whether or not to paint exception on the gauge or throw it.
            Used in design time, web control
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.renderContent">
            <summary>
            Determines whether to render all elements, only the static ones
            or only the dynamic ones.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.loadedBuildNumber">
            <summary>
            Holds the build number when it is loaded from an XML or .bin file.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.renderableElements">
            <summary>
            The array with all IRenderable elements
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.bmpGauge">
            <summary>
            The bitmap for buffering all gauge to prevent flicking
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.bmpFaces">
            <summary>
            The bitmap for buffering of static elements of the gauge
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.imageLoader">
            <summary>
            The ImageLoader reference
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.dirtyFlag">
            <summary>
            Determines if there is a big changes in the gauge structure and
            next paint has to be full including static elements
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.disableInvalidate">
            <summary>
            Flag for suppressing invalidation. It is true during paint process.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.layoutFlag">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.isInitializing">
            <summary>
            This flag is true during initialization.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.refreshPending">
            <summary>
            This flag is true if there is needed to be repainted dynamic elements.
            Used by internal timer-refresh system in win control.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.boundToDataSource">
            <summary>
            Flag determines that there is active data source that should be bounded before 
            next paint.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.isPrinting">
            <summary>
            True during print procedure
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.printSize">
            <summary>
            The size of print/inline drawing area.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.refreshTimer">
            <summary>
            Timer which limits refreshes
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.serviceContainer">
            <summary>
            The reference to service container.
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.elementCollections">
            <summary>
            Collection which caches IRenderable elements - unordered
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.GaugeCore.savingToMetafile">
            <summary>
            Flag to determine is we are saving to a metafile.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.#ctor">
            <summary>
            Initializes a new instance of GaugeCore class.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.#ctor(Dundas.Gauges.WinControl.GaugeContainer)">
            <summary>
            Initializes a new instance of GaugeCore class.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.DoAutoLayout">
            <summary>
            This function provides a very simple auto layout for circular gauges.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.GetCircularAutoLayoutGauges">
            <summary>
            Returns an array of all circular gauges to which auto layout would apply.
            </summary>
            <returns>An array of all circular gauges</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.GetLinearAutoLayoutGauges">
            <summary>
            Returns an array of all linear gauges to which auto layout would apply.
            </summary>
            <returns>An array of all linear gauges</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.LayoutSingleLine(Dundas.Gauges.WinControl.GaugeBase[],System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Positions the gauges in a single line either horizontally or vertically.
            </summary>
            <param name="gauges">An array of gauges that are to be positioned.</param>
            <param name="rect">The rectangle in which the gauges are to be positioned.</param>
            <param name="stackHorizontally">If true the gauges will be stacked horizontally, otherwise vertically.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.CompensateForShadow(Dundas.Gauges.WinControl.GaugeBase)">
            <summary>
            This function is called by the auto layout algorithm to
            adjust the Location and Size of the gauge, so that if the
            gauge frame has a shadow it would not be clipped.
            </summary>
            <param name="gauge">The gauge that is to be adjusted.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.LayoutMatrix(Dundas.Gauges.WinControl.GaugeBase[],System.Drawing.RectangleF,System.Boolean,System.Int32)">
            <summary>
            Positions the gauges in a matrix line either horizontally or vertically. The number of lines is
            determined by the lineCount parameter.
            </summary>
            <param name="gauges">An array of gauges that are to be positioned.</param>
            <param name="rect">The rectangle in which the gauges are to be positioned.</param>
            <param name="stackHorizontally">If true the gauges will be stacked horizontally, otherwise vertically.</param>
            <param name="lineCount">The number of lines of the matrix.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.GetWidth">
            <summary>
            Return the width of the gauge container in pixels.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.GetHeight">
            <summary>
            Return the height of the gauge container in pixels.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.ResetAutoValues">
            <summary>
            Resets auto values. Future implementation
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.Invalidate">
            <summary>
            Sets dirtyFlag and forces invalidate on parent component ( works only in WinForms )
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.OnFontChanged">
            <summary>
            Handles font changes of the GaugeContainer. Not implemented yet.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.refreshTimer_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            The refresh timer callback procedure.
            </summary>
            <param name="source"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.Refresh">
            <summary>
            Performs invalidate of the Gauge.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.GetRenderCollections">
            <summary>
            Collects and returns all renderable elements' collections
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.BeginInit">
            <summary>
            Initiate initialization.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.EndInit">
            <summary>
            Finalize initialization
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.ReconnectData(System.Boolean)">
            <summary>
            Sends reconnect message to data providers, usually after initialization
            </summary>
            <param name="exact">True to throw an exception if failed.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.Notify(Dundas.Gauges.WinControl.MessageType,Dundas.Gauges.WinControl.NamedElement,System.Object)">
            <summary>
            Sends notification message from other NamedElements. 
            </summary>
            <param name="msg">The message of MessageType type</param>
            <param name="element">NamedElement which sends the message</param>
            <param name="param">Additional parameters, depended of the MessageType</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.InitBitmap(Dundas.Gauges.WinControl.BufferBitmap)">
            <summary>
            Initialize bitmap for buffered drawing
            </summary>
            <param name="bmp"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.InitBitmap(Dundas.Gauges.WinControl.BufferBitmap,System.Drawing.Size)">
            <summary>
            Initialize bitmap for buffered drawing.
            </summary>
            <param name="bmp">The BufferBitmap to initialize.</param>
            <param name="size">Size of bitmap.</param>
            <returns>Initialized bitmap.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.GetSmootingMode">
            <summary>
            Gets Smoothing mode, maps Antialiasing property with Drawing2D.SmootingMode.
            </summary>
            <returns>Smoothing mode.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.GetTextRenderingHint">
            <summary>
            Gets text rendering quality.
            </summary>
            <returns>Text rendering quality.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.GetGraphics(Dundas.Gauges.WinControl.RenderingType,System.Drawing.Graphics,System.IO.Stream)">
            <summary>
            Initialize GaugeGraphics.
            </summary>
            <param name="renderingType">Rendering type (GDI, Flash, etc).</param>
            <param name="g">GDI Graphics</param>
            <param name="outputStream">Stream for Flash and SVG.</param>
            <returns>Initilized GaugeGraphics</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.GetGraphElements">
            <summary>
            Returns all renderable elements sorted by zOrder
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.RenderWaterMark(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders a water mark for the evaluation or beta version of the gauge.
            </summary>
            <param name="g">Initialized GaugeGraphics object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.RenderOneDynamicElement(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.IRenderable)">
            <summary>
            Renders particular IRenderable element.
            </summary>
            <param name="g">Reference to GaugeGraphics object.</param>
            <param name="element">The element to render.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.RenderElements(Dundas.Gauges.WinControl.GaugeGraphics,Dundas.Gauges.WinControl.IRenderable,System.Boolean)">
            <summary>
            Performs recursive rendering of all elements in parent - child order
            </summary>
            <param name="g">Initialized GaugeGraphics object</param>
            <param name="parentElement">Target parent element, null for top level elements</param>
            <param name="renderStaticElements">Determines if to render static or dynamic elements</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.RenderSelection(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders the selection of all selected elements, as well as the
            design-time selected element.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.GetSelectedElements">
            <summary>
            Returns an array of all selected elements.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.RenderTopImage(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders top image.
            </summary>
            <param name="g">Initialized GaugeGraphics object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.RenderStaticElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Render all static elements ( faces )
            </summary>
            <param name="g">GaugeGraphics object </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.RenderStaticElementsBufered(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Render all static elements in back buffer bitmap( faces )
            </summary>
            <param name="g">GaugeGraphics object </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.RenderDynamicElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Render all dynamic elements - pointers, indicator's elements etc.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.Paint(System.Drawing.Graphics,Dundas.Gauges.WinControl.RenderingType,System.IO.Stream,System.Boolean)">
            <summary>
            Perform drawing of the Gauge according rendering type.
            </summary>
            <param name="gdiGraph">The Graphics reference</param>
            <param name="renderingType">Determine rendering type</param>
            <param name="stream">Stream that is used for non GDI+ output</param>
            <param name="buffered">Determine whether or not to use buffer bitmaps</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.PrintPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Perform drawing of the Gauge into custom Graphics in specified Rectangle position.
            </summary>
            <param name="g">The graphics reference</param>
            <param name="position">The Rectangle position</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.Paint(System.Drawing.Graphics)">
            <summary>
            Perform all GDI painting. Used from WinControl
            </summary>
            <param name="g">The GDI+ graphics</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.SaveTo(System.IO.Stream,Dundas.Gauges.WinControl.GaugeImageFormat,System.Int32)">
            <summary>
            Saves Gauge image to a stream.
            </summary>
            <param name="stream">Stream to accept the gauge image</param>
            <param name="imageFormat">The format of the image</param>
            <param name="compression">Determines the quality output</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.SaveTo(System.IO.Stream,Dundas.Gauges.WinControl.GaugeImageFormat)">
            <summary>
            Saves gauge image to stream.
            </summary>
            <param name="stream">Stream to accept the gauge image</param>
            <param name="imageFormat">The format of the image</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.SaveTo(System.String,Dundas.Gauges.WinControl.GaugeImageFormat)">
            <summary>
            Saves gauge image to file.
            </summary>
            <param name="fileName">File name to accept the gauge image</param>
            <param name="imageFormat">The format of the image</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.SaveTo(System.String,Dundas.Gauges.WinControl.GaugeImageFormat,System.Int32)">
            <summary>
            Saves gauge image to file.
            </summary>
            <param name="fileName">File name to accept the gauge image</param>
            <param name="imageFormat">The format of the image</param>
            <param name="compression">Determines quality of the image</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.GetEncoderInfo(System.String)">
            <summary>
            Helper function. Returns image encoder using Mime image type
            </summary>
            <param name="mimeType">Mime image type</param>
            <returns>Image codec</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.SaveIntoMetafile(System.IO.Stream)">
            <summary>
            Saves image into the metafile stream. 
            </summary>
            <param name="imageStream">Image stream.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.GetClipRegion">
            <summary>
            Returns a region which is a union of all renderable
            elements.
            </summary>
            <returns>A reference to Region.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.IsDesignMode">
            <summary>
            Returns true if design mode is active
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.DrawException(System.Drawing.Graphics,System.Exception)">
            <summary>
            Draws exception information at design-time.
            </summary>
            <param name="graphics">Graphics to use.</param>
            <param name="e">Exception information.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.PrepareHitTest">
            <summary>
            Forces painting to prepare hot regions.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.HitTest(System.Int32,System.Int32)">
            <summary>
            Returns the HitTestResult against specified point.
            </summary>
            <param name="x">The x coordinate of the point.</param>
            <param name="y">The y coordinate of the point.</param>
            <returns>The result of HitTest</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.GetHotRegion(Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Locates HotRegion which corresponds to a NamedElement.
            </summary>
            <param name="element">NamedElement to search.</param>
            <returns>The HotRegion of this NamedElement.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.PerformDataBinding(System.Collections.IEnumerable)">
            <summary>
            Data binds to the provided IEnumerable.
            </summary>
            <param name="data">The data to bind to.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.AutoDataBind(System.Boolean)">
            <summary>
            Performs data binding of all input values to their external sources of data.
            </summary>
            <param name="forceBinding">Force databinding regardless boudToDataSource flag</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.IsValidDataSource(System.Object)">
            <summary>
            Checks if the type of the data source is valid.
            </summary>
            <param name="dataSource">Data source object to test.</param>
            <returns>True if valid data source object.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.ResolveAllKeywords(System.String,Dundas.Gauges.WinControl.NamedElement)">
            <summary>
            Resolves the #KEYWORD style keywords.
            </summary>
            <param name="original">The original text.</param>
            <param name="element">The gauge element to which this text belongs.</param>
            <returns>A new string where all the keywords have been resolved.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.ResolveKeyword(System.String,System.String,System.Double)">
            <summary>
            Resolved a particular keyword.
            </summary>
            <param name="original">The original string containing one or more keywords.</param>
            <param name="keyword">The keyword to be resolved.</param>
            <param name="val">The value that is to be formatted.</param>
            <returns>A string containing the resolved keyword.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.OnDispose">
            <summary>
            Disposes the gauge elements 
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.GaugeCore.CheckLicense">
            <summary>
            Checks the gauge license at design time
            </summary>
            <returns>True if license found.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.Values">
            <summary>
            Collection of <b>InputValue</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.InputValue"/>
            </summary>
            <value>
            An <see cref="T:Dundas.Gauges.WinControl.InputValueCollection"/> object, used to store input values.
            </value>
            <remarks>
            Input values can be used to display calculated values, and each input value 
            also has an associated history.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.NamedImages">
            <summary>
            Collection of <b>NamedImage</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.NamedImage"/>
            </summary>
            <value>
            An <see cref="T:Dundas.Gauges.WinControl.NamedImageCollection"/> object, used to store named images.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.CircularGauges">
            <summary>
            Collection of <b>CircularGauge</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularGauge"/>
            </summary>
            <value>
            An <see cref="T:Dundas.Gauges.WinControl.CircularGaugeCollection"/> object, used to store circular gauges.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.LinearGauges">
            <summary>
            Collection of <b>LinearGauge</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.LinearGauge"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.LinearGaugeCollection"/> object, used to store linear gauges.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.NumericIndicators">
            <summary>
            Collection of <b>NumericIndicator</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.NumericIndicator"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.NumericIndicatorCollection"/> object, used to store numeric 
            indicators.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.StateIndicators">
            <summary>
            Collection of <b>StateIndicator</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.StateIndicator"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.StateIndicatorCollection"/> object, used to store state 
            indicators.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.Images">
            <summary>
            Collection of <b>GaugeImage</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.GaugeImage"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeImageCollection"/> object, used to store state 
            indicators.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.Labels">
            <summary>
            Collection of <b>GaugeLabel</b> objects.
            <seealso cref="T:Dundas.Gauges.WinControl.GaugeLabel"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeLabelCollection"/> object, used to store gauge 
            labels.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.AutoLayout">
            <summary>
            Determines if automatic layout is used for the container.
            </summary>
            <value>
            If <b>true</b> gauge elements in the container are automatically laid out, 
            if <b>false</b> they are not. Defaults to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.RefreshRate">
            <summary>
            Gets or sets the refresh rate of the entire gauge container in redraws per 
            second.
            </summary>
            <value>
            A <b>double</b> that represents how many times per second the gauge
            container is to be redrawn. The default value is 30.
            </value>
            <exception cref="T:System.ArgumentException">
            An <b>ArgumentException</b> will be thrown if the value is less than 0.
            </exception>
            <remarks>
            This property determines how many times per second the gauge 
            container should be refreshed. Decreasing this value might improve 
            performance, but the motion of the pointers might become choppy.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.BackFrame">
            <summary>
            Gets or sets the frame attributes of the gauge container.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.TopImage">
            <summary>
            Gets and sets the name of the top image
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.TopImageTransColor">
            <summary>
            Gets and sets the top image color
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.TopImageHueColor">
            <summary>
            Gets and sets the top image hue color
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.AntiAliasing">
            <summary>
            Gets and sets the AntiAliasing type
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.TextAntiAliasingQuality">
            <summary>
            Gets and sets the TextAntiAliasingQuality type
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.ShadowIntensity">
            <summary>
            Gets and sets the shadowIntensity
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.BackColor">
            <summary>
            Gets and sets the background color
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.RightToLeft">
            <summary>
            Gets and sets the RightToLeft type
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.Width">
            <summary>
            Gets and sets the width of the GaugeContainter
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.Height">
            <summary>
            Gets and sets the Height of the GaugeContainter
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.Name">
            <summary>
            Gets the name of this element.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.NamedElement"/> object.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.BuildNumber">
            <summary>
            Gets the build number of the control
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.ControlType">
            <summary>
            Build number of the control
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.SelectionMarkerColor">
            <summary>
            Determines the fill color of the markers of a selected element.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.SelectionBorderColor">
            <summary>
            Determines the border color of the selection.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.DataSource">
            <summary>
            Gets or sets the source containing a list of values used to populate history data. 
            </summary>
            <value>
            An System.Collections.IEnumerable implemented object that contains a collection of values used to supply data to this control. 
            The default value is a null reference (Nothing in Visual Basic).
            </value>
            <remarks>
            Use the DataSource property to specify the source of values to bind to history data of this control. 
            The data source must be an object that implements the <see cref="T:System.Collections.IEnumerable"/> interface 
            (such as <see cref="T:System.Data.DataView"/>, <see cref="T:System.Collections.ArrayList"/>, and <see cref="T:System.Collections.Hashtable"/>) to bind to history data.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.Serializer">
            <summary>
            Gets the reference to the GaugeSerializer object
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.HasTransparentBackground">
            <summary>
            A flag whether the gauge has been set with transparent background.
            When this flag is set to <b>true</b> image caching is disable as well as
            erasing the background is applied over the bmp buffer.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.GaugeContainer">
            <summary>
            Gets the reference to the GaugeContainer
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.HotRegionList">
            <summary>
            Gets the reference to the HotRegionList object.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.Serializing">
            <summary>
            Determine Serializing state.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.SelectedDesignTimeElement">
            <summary>
            A reference to the element currently selected in design time.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.GaugeCore.InvokeRequired">
            <summary>
            Returns flag which determines that synchronization is required between threads.
            </summary>
        </member>
        <member name="T:Dundas.Gauges.WinControl.ZOrderSort">
            <summary>
            Sorts elements by zOrder
            </summary>
        </member>
        <member name="F:Dundas.Gauges.WinControl.ZOrderSort.collection">
            <summary>
            Reference to the collection to sort.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ZOrderSort.#ctor(System.Collections.ArrayList)">
            <summary>
            Initialize instance of ZOrderSort object.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.ZOrderSort.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, 
            equal to or greater than the other.
            </summary>
            <param name="x">First object to compare.</param>
            <param name="y">Second object to compare.</param>
            <returns>Compare result for x less than y ( less than  0), x = y ( = 0) or x > y ( > 0)</returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.BackFrame">
            <summary>
            Represents a back frame, which "frames" the container and gauge objects. 
            </summary>
            <remarks>
            Of particular interest is the glass effect, set by the <see cref="P:Dundas.Gauges.WinControl.BackFrame.GlassEffect"/> 
            property.
            </remarks>
        </member>
        <member name="F:Dundas.Gauges.WinControl.BackFrame.xamlRenderer">
            <summary>
            Stores the cached XAML renderer.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.#ctor(System.Object)">
            <summary>
            Constructor that takes a parent object.
            </summary>
            <param name="parent">
            Parent object.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.#ctor(System.Object,Dundas.Gauges.WinControl.BackFrameStyle,Dundas.Gauges.WinControl.BackFrameShape)">
            <summary>
            Constructor that takes a parent object, frame style and frame shape.
            </summary>
            <param name="parent">
            Parent object of the back frame.
            </param>
            <param name="style">
            A <see cref="T:Dundas.Gauges.WinControl.BackFrameStyle"/> object, which represents the frame style.
            </param>
            <param name="shape">
            A <see cref="T:Dundas.Gauges.WinControl.BackFrameShape"/> object, which represents the frame shape.
            </param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.ShouldSerializeStyle">
            <summary>
            Used by VS designer - prevents the obsolete property from
            serialization.
            </summary>
            <returns>
            <b>false</b> to prevent the property from serialization.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.ShouldSerializeShape">
            <summary>
            Used by VS designer - prevents the obsolete property from
            serialization.
            </summary>
            <returns>
            <b>false</b> to prevent the property from serialization.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.ResetFrameStyle">
            <summary>
            Resets the Frame.FrameStyle property to its default value.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.ResetFrameShape">
            <summary>
            Resets the Frame.FrameStyle property to its default value.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.GetCachedXamlRenderer(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Gets a reference to the cached xaml renderer.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.ResetCachedXamlRenderer">
            <summary>
            Resets the cached xaml renderer. The next time GetCachedXamlRenderer() is called it will
            create and load a new XAML file from the resource,
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.GetFramePath(Dundas.Gauges.WinControl.GaugeGraphics,System.Single)">
            <summary>
            Returns the outline graphics path of the frame.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="shrinkBy">Amount by which the graphics path is to be shrunk by
            in relative coordinates.</param>
            <returns>A reference to GraphicsPath.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.GetBackPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the back graphics path of the frame. This is the inner
            region of the frame.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <returns>A reference to GraphicsPath.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.BuildCircularGaugeAutoFrame(Dundas.Gauges.WinControl.GaugeGraphics,System.Drawing.Drawing2D.GraphicsPath,Dundas.Gauges.WinControl.CircularGauge,System.Single)">
            <summary>
            Builds the AutoShape path for a circular gauge.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="path">The GraphicsPath object to build into.</param>
            <param name="gauge">The circular gauge.</param>
            <param name="shrinkBy">Amount by which the graphics path is to be shrunk by.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.GetFrameAspectRatio(Dundas.Gauges.WinControl.BackFrameShape)">
            <summary>
            Returns the aspect ratio of provided frame shape. Aspect ratio of 0 means the 
            frame fills up the whole available space. The aspect ration is calculated as
            Width/Height.
            </summary>
            <param name="style">The shape of the frame.</param>
            <returns>The aspect ratio for the frame or 0 if the frame should fill up
            the whole space.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.BuildLinearGaugeAutoFrame(Dundas.Gauges.WinControl.GaugeGraphics,System.Drawing.Drawing2D.GraphicsPath,Dundas.Gauges.WinControl.LinearGauge,System.Single)">
            <summary>
            Builds the AutoShape path for a linear gauge.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="path">The GraphicsPath object to build into.</param>
            <param name="gauge">The linear gauge.</param>
            <param name="shrinkBy">Amount by which the graphics path is to be shrunk by.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.GetShadowPath(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the shadow graphics path of the frame.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <returns>A reference to GraphicsPath.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.DrawFrameImage(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Draws the image in case this frame has one.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.IsCustomXamlFrame">
            <summary>
            Determines whether this frame is a custom xaml frame.
            </summary>
            <returns>
            	<c>true</c> if it is custom xaml frame; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.IsRectangularCustomXamlFrame">
            <summary>
            Determines whether this frame is a custom xaml frame.
            </summary>
            <returns>
            	<c>true</c> if it is custom xaml frame; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.RenderFrame(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Main rendering method. This is the entry point for all frame rendering.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.RenderShadow(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders the shadow of the frame.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.GetBrush(Dundas.Gauges.WinControl.GaugeGraphics,System.Drawing.RectangleF,Dundas.Gauges.WinControl.GaugeHatchStyle,Dundas.Gauges.WinControl.GradientType,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Single)">
            <summary>
            Returns the brush given the brush attributes.
            </summary>
            <param name="g"></param>
            <param name="rect"></param>
            <param name="hatchStyle"></param>
            <param name="gradientType"></param>
            <param name="fillColor"></param>
            <param name="gradientEndColor"></param>
            <param name="frame">If true this brush is for a frame.</param>
            <param name="frameWidth">The width of the frame.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.GetFrameRectangle(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Returns the rectangle of the frame in absolute coordinates
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrame.RenderGlassEffect(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders the glass effect.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.Style">
            <summary>
            NOTE: This property is obsolete in Dundas Gauge 2.0. FrameStyle is supposed to be used instead. <see cref="P:Dundas.Gauges.WinControl.BackFrame.FrameStyle"/>
            Gets or sets the style of the frame.
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.FrameShape"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.BackFrameStyle"/> value. The default is 
            <b>BackFrameStyle.None</b> if the frame belongs to <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> 
            or <b>BackFrameStyle.Edged</b> if the frame belongs to a <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> 
            or <see cref="T:Dundas.Gauges.WinControl.LinearGauge"/> object.
            </value>
            <remarks>
            This property determines which pre-defined frame style should be
            used to render the frame.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.FrameStyle">
            <summary>
            Gets or sets the style of the frame.
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.FrameShape"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.BackFrameStyle"/> value. The default is 
            <b>BackFrameStyle.None</b> if the frame belongs to <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/> 
            or <b>BackFrameStyle.Edged</b> if the frame belongs to a <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> 
            or <see cref="T:Dundas.Gauges.WinControl.LinearGauge"/> object.
            </value>
            <remarks>
            This property determines which pre-defined frame style should be
            used to render the frame.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.Shape">
            <summary>
            NOTE: This property is obsolete in Dundas Gauge 2.0. FrameShape is supposed to be used instead. <see cref="P:Dundas.Gauges.WinControl.BackFrame.FrameShape"/>
            Gets or sets the style of the frame.
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.FrameStyle"/>
            Gets or sets the overall frame shape, which can be circular or rectangular.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.BackFrameShape"/> value. The default is 
            <b>BackFrameShape.Circular</b> if the frame belongs to a <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> 
            or <b>BackFrameStyle.Rectangular</b> if the frame belongs to a <see cref="T:Dundas.Gauges.WinControl.LinearGauge"/> 
            object.
            </value>
            <remarks>
            This property determines if the frame is circular or rectangular. 
            Note that circular frames will never appear elliptical.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.FrameShape">
            <summary>
            Gets or sets the overall frame shape, which can be circular or rectangular.
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.FrameStyle"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.BackFrameShape"/> value. The default is 
            <b>BackFrameShape.Circular</b> if the frame belongs to a <see cref="T:Dundas.Gauges.WinControl.CircularGauge"/> 
            or <b>BackFrameStyle.Rectangular</b> if the frame belongs to a <see cref="T:Dundas.Gauges.WinControl.LinearGauge"/> 
            object.
            </value>
            <remarks>
            This property determines if the frame is circular or rectangular. 
            Note that circular frames will never appear elliptical.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.FrameWidth">
            <summary>
            Gets or sets the width of the frame. Measured as a percentage of width/height.
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.BackColor"/>
            </summary>
            <value>
            A float that represents the 
            width of the frame. The default value is <b>8</b> percent.
            </value>
            <remarks>
            This property represents the width (thickness) of the frame. 
            It is measured as a percentage of the width or height of the gauge or 
            gauge container, whichever is smaller. For example, if the gauge container 
            is 400 pixels wide and 200 pixels high and the frame width is set to 10 
            then it will be 10 percent of 200 pixels, which is 10 pixels.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.FrameColor">
            <summary>
            Gets or sets the color of the frame, but not the color of its background.
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.BackColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            color of the frame. The default value is <b>Color.Gainsboro</b>.
            </value>
            <remarks>
            This property represents the color of the frame, but not
            the color of its background. If you would like to modify the color of the 
            frame's background please use the <see cref="P:Dundas.Gauges.WinControl.BackFrame.BackColor"/> property.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.FrameGradientType">
            <summary>
            The gradient type of the frame.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GradientType"/> value, that represents the gradient type. Defaults 
            to <b>GradientType.DiagonalLeft</b>.
            </value>
            <remarks>
            If this property is set to a valid gradient type then the colors used are 
            determined by the <see cref="P:Dundas.Gauges.WinControl.BackFrame.BackColor"/> and <see cref="P:Dundas.Gauges.WinControl.BackFrame.BackGradientEndColor"/> 
            properties.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.FrameGradientEndColor">
            <summary>
            Gets or sets the end color of the frame gradient.
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.FrameGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            end color of the frame gradient. The default value is <b>Color.Gray</b>.
            </value>
            <remarks>
            This property represents end color of the frame gradient. 
            It is used if the <see cref="P:Dundas.Gauges.WinControl.BackFrame.FrameGradientType"/>property 
            has a valid gradient. In addition to that it is also used as the 
            hatch foreground color in case a hatch style is set via 
            the <see cref="P:Dundas.Gauges.WinControl.BackFrame.FrameHatchStyle"/> property.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.FrameHatchStyle">
            <summary>
            The hatch style of the frame.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeHatchStyle"/> value, representing the hatch style. Defaults 
            to <b>GaugeHatchStyle.None</b>.
            </value>
            <remarks>
            If hatching is specified then the <see cref="P:Dundas.Gauges.WinControl.BackFrame.FrameColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.BackFrame.FrameGradientEndColor"/> properties determine the colors used.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.Image">
            <summary>
            The image to be used as a frame.
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.ImageTransColor"/>
            </summary>
            <value>
            A string that represents either the pathname of an image saved to disk, or the 
            name of a named image stored in the <see cref="P:Dundas.Gauges.WinControl.GaugeContainer.NamedImages"/> 
            collection.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.ImageTransColor">
            <summary>
            Gets or sets the transparent color of the frame image.
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.Image"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            transparent color of the frame image. The default value is 
            <b>Color.Empty</b>.
            </value>
            <remarks>
            If you have a frame image with a yellow background 
            and you would like to make the background transparent set this property
            to <b>Color.Yellow</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.ImageHueColor">
            <summary>
            Gets or sets the hue color to be applied to the image.
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.Image"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            hue color to be applied to the frame image. The default value is 
            <b>Color.Empty</b>.
            </value>
            <remarks>
            The hue color is applied to the entire image in order to modify its hue.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.BorderColor">
            <summary>
            Gets or sets the color of the frame's border.
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.BorderWidth"/>
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.BorderStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            color of the frame border. The default value is <b>Color.Black</b>.
            </value>
            <remarks>
            This property will not have any effect if the <see cref="P:Dundas.Gauges.WinControl.BackFrame.BorderWidth"/> 
            property is set to 0.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.BorderStyle">
            <summary>
            The line style of the frame's border.
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.BorderWidth"/>
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.BorderColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeDashStyle"/> object that represents the 
            style of the frame border. The default value is <b>GaugeDashStyle.Solid</b>.
            </value>
            <remarks>
            This property will not have any effect if the <see cref="P:Dundas.Gauges.WinControl.BackFrame.BorderWidth"/> 
            property is set to 0.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.BorderWidth">
            <summary>
            The line width of the back frame's border. Measured in pixels.
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.BorderStyle"/>
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.BorderColor"/>
            </summary>
            <value>
            An integer that represents the line width. Defaults 
            to 0 pixels.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.BackColor">
            <summary>
            Gets or sets the color of the frame's background.
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.FrameColor"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the 
            color of the frame's background. The default value is <b>Color.Silver</b>.
            </value>
            <remarks>
            This property represents the color of the frame background, but not 
            the color of the actual frame. If you would like to modify the color of 
            the actual frame please use the <see cref="P:Dundas.Gauges.WinControl.BackFrame.FrameColor"/> property.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.BackGradientType">
            <summary>
            The gradient type of the back.
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.BackGradientEndColor">
            <summary>
            Gets or sets the end color of the frame's back gradient.
            <seealso cref="P:Dundas.Gauges.WinControl.BackFrame.BackGradientType"/>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> that represents the
            end color of the frame's back gradient.
            The default value is <b>Color.Gray</b>.</value>
            <remarks>This property represents end color of the frame's back gradient.
            It is used if the <see cref="P:Dundas.Gauges.WinControl.BackFrame.BackGradientType"/> property
            has a valid gradient. In addition to that it is also used as the
            hatch foreground color in case a hatch style is selected through
            the <see cref="P:Dundas.Gauges.WinControl.BackFrame.BackHatchStyle"/> property.</remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.BackHatchStyle">
            <summary>
            The hatch style of the background.
            </summary>
            <value>
            A <see cref="T:Dundas.Gauges.WinControl.GaugeHatchStyle"/> value, representing the hatch style. Defaults 
            to <b>GaugeHatchStyle.None</b>.
            </value>
            <remarks>
            If hatching is specified then the <see cref="P:Dundas.Gauges.WinControl.BackFrame.FrameColor"/> and 
            <see cref="P:Dundas.Gauges.WinControl.BackFrame.FrameGradientEndColor"/> properties determine the colors used.
            </remarks>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.ShadowOffset">
            <summary>
            Determines how far to the right and down the shadow will appear. Measured in pixels.
            </summary>
            <value>
            A float that represents the shadow offset. Defaults to 0 pixels.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.GlassEffect">
            <summary>
            Determines the glass effect of the frame.
            </summary>
            <value>
            A <see cref="P:Dundas.Gauges.WinControl.BackFrame.GlassEffect"/> enumeration that determines the
            glass effect style. Defaults to <b>GlassEffect.None</b>.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.BackFrame.ClipImage">
            <summary>
            Determines is the image of the back frame is to be clipped to the frame outline.
            </summary>
            <value>
            A boolean that determines if the image is to be clipped. The default value is <b>false</b>.
            </value>
            <remarks>This property is used only when the <see cref="P:Dundas.Gauges.WinControl.BackFrame.Image"/> property is set.</remarks>
        </member>
        <member name="T:Dundas.Gauges.WinControl.BackFrameConverter">
            <summary>
            Used mainly make propeties read only at design-time in order to improve the design-time
            experience.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.BackFrameConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Makes the properties that do not apply to the current mode read-only.
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Gauges.WinControl.CircularGauge">
            <summary>
            Represents a circular gauge. May have scales, ranges and pointers.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularScale"/>
            <seealso cref="T:Dundas.Gauges.WinControl.CircularRange"/>
            <seealso cref="T:Dundas.Gauges.WinControl.CircularPointer"/>
            </summary>
            <remarks>
            Circular gauges are displayed within the <see cref="T:Dundas.Gauges.WinControl.GaugeContainer"/>, 
            which is the root object of Dundas Gauge.
            <p>
            The container can display multiple circular gauges.
            </p>
            </remarks>
        </member>
        <member name="F:Dundas.Gauges.WinControl.CircularGauge.absoluteRect">
            <summary>
            Keeps the absolute rectangle of this circular gauge.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.ToString">
            <summary>
            Returns the name of the gauge as a string.
            </summary>
            <returns>The name as a string.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.RenderTopImage(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders top image.
            </summary>
            <param name="g">Initialized GaugeGraphics object.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.BeginInit">
            <summary>
            Overridden in order to call the BeginInit() of the Scales, Ranges
            and Pointers collections.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.EndInit">
            <summary>
            Overridden in order to call the EndInit() of the Scales, Ranges
            and Pointers collections.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.OnDispose">
            <summary>
            Overridden in order to call the OnDispose() of the Scales, Ranges
            and Pointers collections.
            </summary>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.ReconnectData(System.Boolean)">
            <summary>
            Overridden in order to call the ReconnectData() method of the
            Pointer collection.
            </summary>
            <param name="exact"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.Notify(Dundas.Gauges.WinControl.MessageType,Dundas.Gauges.WinControl.NamedElement,System.Object)">
            <summary>
            Overridden in order to propagate the message system to the children
            of the gauge.
            </summary>
            <param name="msg"></param>
            <param name="element"></param>
            <param name="param"></param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.GetRanges">
            <summary>
            Overridden in order to return the circular ranges collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.PointerValueChanged(Dundas.Gauges.WinControl.PointerBase)">
            <summary>
            Overridden in order to call the PointerValueChanged event for the
            range that the pointer might be in.
            </summary>
            <param name="sender">A reference to the pointer.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.GetBoundRect(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Obtains the bounding rectangle of this gauge. This function
            ensures that the bounding rectangle of a circular gauge is
            always a square.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <returns>A RectangleF representing the bounding rectangle.</returns>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.RenderStaticElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            This function renders all static elements, which are elements that
            do not change their position when the value changes. All elements
            except the pointers are static.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.RenderDynamicElements(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            This function renders all dynamic elements - elements that do
            change their position when the value changes. The only static
            elements in a circular gauge are the pointers and scales (for
            their tick marks in case they are on top).
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.RenderDynamicShadows(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders all the shadows for the dynamic elements.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.RenderStaticShadows(Dundas.Gauges.WinControl.GaugeGraphics)">
            <summary>
            Renders all the shadows for the dynamic elements.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.Dundas#Gauges#WinControl#ISelectable#DrawSelection(Dundas.Gauges.WinControl.GaugeGraphics,System.Boolean)">
            <summary>
            Render the selection of the given element.
            </summary>
            <param name="g">A reference to GaugeGraphics.</param>
            <param name="designTimeSelection">True if this is a design-time selection, false otherwise.</param>
        </member>
        <member name="M:Dundas.Gauges.WinControl.CircularGauge.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularGauge.Scales">
            <summary>
            Represents the collection of scales used by the gauge.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularScale"/>
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularGauge.Ranges">
            <summary>
            Represents the collection of ranges used by the gauge.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularRange"/>
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularGauge.Pointers">
            <summary>
            Represents the collection of pointers used by the gauge.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularPointer"/>
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularGauge.Knobs">
            <summary>
            Represents the collection of knobs used by the gauge.
            <seealso cref="T:Dundas.Gauges.WinControl.CircularPointer"/>
            </summary>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularGauge.PivotPoint">
            <summary>
            The point around which the needle rotates. The X, Y coordinates are in percent.
            </summary>
            <value>
            X and Y coordinates of the pivot point, as a percentage of its parent object's 
            width and height.
            </value>
        </member>
        <member name="P:Dundas.Gauges.WinControl.CircularGauge.Common">
            <summary>
            Overridden in order to set the Common property of the Scales, Ranges
            and Pointers collections.
            </summary>
        </member>
    </members>
</doc>
